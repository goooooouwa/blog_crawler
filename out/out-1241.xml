<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
<channel>
<title>Coding Horror</title>
<description>programming and human factors</description>
<link>https://blog.codinghorror.com/</link>
<pubDate>Sun, 19 Apr 2020 00:00:01 GMT</pubDate>
<!-- other elements omitted from this example -->
<item>
<title>It's the IDE, dummy!</title>
<link>https://blog.codinghorror.com/its-the-ide-dummy/</link>
<content>
                <!--kg-card-begin: markdown--><p>In <a href="http://www.codinghorror.com/blog/archives/000128.html">VB.NET vs C#, round two</a>, I realized that choice of IDE has a far bigger impact on productivity than which language you choose. Lately I've started to think the relationship between language and IDE is even more profound: the future of programming languages isn't a language – <strong>it's the IDE, dummy!</strong></p>
<p>Let me illustrate with a question:</p>
<blockquote>Which would you rather use: QuickBasic with the world's best IDE, or (insert your favorite language here) in <a href="http://www.notepad.org">Notepad</a>? </blockquote>
<p>We now have languages that are the product of thirty years of computer science, but <strong>visual IDEs are still in their infancy</strong>. There are some tantalizing screenshots of proposed IDE designs in Lutz Roeder's <a href="http://www.aisto.com/roeder/paper/InteractiveSourceCode.ppt">Interactive Source Code presentation</a> (powerpoint), even though it's four years old. There are also some intriguing IDE ideas from Roland Weigelt in his <a href="http://weblogs.asp.net/rweigelt/archive/2004/04/06/108076.aspx">"wouldn't it be cool"</a> series of posts, where he summarizes with</p>
<blockquote>It's kind of frustrating to see computers rendering 3D worlds with 100s of frames/sec, but source code editors advancing only in very small steps.</blockquote>
<p>Amen to that. I suggest any future language development proceed in this order:</p>
<ol>
<li>Develop a kick ass IDE, incorporating the most popular features from <a href="http://www.eclipse.org/eclipse/index.html">existing IDEs</a>, plus some innovations of your own. </li>
<li>Hard-code your IDE to a specific language or two; make it completely symbiotic and as deeply integrated as possible with those specific languages. </li>
<li>If you have any money left, pay third parties to design and sell IDE extensions. Take the <a href="http://www.devexpress.com/Products/NET/CodeRush/">most</a> <a href="http://www.wholetomato.com/products/features.html">popular</a> <a href="http://www.jetbrains.com/resharper/">extensions</a>, buy the company, and incorprorate those features in your IDE. </li>
<li>If you're not out of money yet, hold a contest with cash rewards for the <a href="http://weblogs.asp.net/rosherove/category/4911.aspx">best user-designed IDE add-in</a>. Buy rights to the top three and incorporate them. </li>
<li>If you have any extra time or money left over – and you can't think of any possible way the IDE could be improved any more – wash it all down with the sweet nectar of <a href="http://neopoleon.com/blog/posts/178.aspx">syntactic sugar</a>. </li>
</ol>
<p>I don't think a one-size-fits-all-languages IDE strategy is sustainable. At least not if you want to be the best and most productive tool available. <strong>In the future, IDE will be synonymous with language.</strong></p>
<!--kg-card-end: markdown-->
            </content>
<pubDate>2005-01-26T12:00:00.000Z</pubDate>
<guid>https://blog.codinghorror.com/its-the-ide-dummy/</guid>
</item>
</channel>
</rss>
