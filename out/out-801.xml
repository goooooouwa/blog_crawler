<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
<channel>
<title>Coding Horror</title>
<description>programming and human factors</description>
<link>https://blog.codinghorror.com/</link>
<pubDate>Sun, 19 Apr 2020 00:00:01 GMT</pubDate>
<!-- other elements omitted from this example -->
<item>
<title>Fitts' Law and Infinite Width</title>
<link>https://blog.codinghorror.com/fitts-law-and-infinite-width/</link>
<content>
                <!--kg-card-begin: markdown--><p>
<a class="blines3" href="http://en.wikipedia.org/wiki/Fitts%27_law" target="_blank" title="Link outside of this blog">Fitts' Law</a> is arguably the most important formula in the field of human-computer interaction. It's..
</p>
<p>
Time = a + b log<sub>2</sub> ( D / S + 1 )
</p>
<p>
.. where D is the distance from the starting point of the cursor, and S is the width of the target. This is all considered on a 2D plane relative to the axis of movement.
</p>
<p>
<img alt="Fitts' Law diagram" border="0" class="at-xid-6a0120a85dcdae970b0128776fe7e4970c" height="158" src="https://blog.codinghorror.com/content/images/uploads/2006/08/6a0120a85dcdae970b0128776fe7e4970c-pi.png" width="609">
</p>
<p>
Years of experimental results have <a class="blines3" href="http://en.wikipedia.org/wiki/Fitts%27_law#Success_and_implications_of_Fitts.27_law" target="_blank" title="Link outside of this blog">proven Fitts' law time and time again</a>:
</p>
<p>
</p>
<blockquote>
Fitts' law has been shown to apply under a variety of conditions, with many different limbs (hands, feet, head-mounted sights, eye gaze), manipulanda (input devices), physical environments (including underwater!), and user populations (young, old, mentally retarded, and drugged participants). Note that the constants a and b have different values under each of these conditions.
</blockquote>
<p>
It's not exactly rocket science, as <a class="blines3" href="http://www.asktog.com/basics/firstPrinciples.html#fittsLaw" target="_blank" title="Link outside of this blog">Bruce Tognazzini points out</a>:
</p>
<p>
</p>
<blockquote>
<b>The time to acquire a target is a function of the distance to and size of the target. </b>
<p>
While at first glance, this law might seem patently obvious, it is one of the most ignored principles in design. Fitts' law (properly, but rarely, spelled "Fitts' Law") dictates the Macintosh pull-down menu acquisition should be approximately five times faster than Windows menu acquisition, and this is proven out.
</p>
</blockquote>
<p>
So, to make navigation easier, you either put clickable items closer together, or you make the clickable area bigger. Or both. I know what you're thinking: <i>no duh</i>. But bear with me.
</p>
<p>
Here's one thing that puzzled me. I hate Windows as much as the next disestablishmentarianist, but how can the menu argument be valid? Are Macintosh pull-down menus really that much larger than Windows pull-down menus?
</p>
<p>
<img alt="Fitts' Law for Windows Notepad pull-down menus" border="0" class="at-xid-6a0120a85dcdae970b0128776fe7eb970c" height="116" src="https://blog.codinghorror.com/content/images/uploads/2006/08/6a0120a85dcdae970b0128776fe7eb970c-pi.png" width="460">
</p>
<p>
They aren't significantly larger. <b>But Macintosh menus aren't attached to the application window-- they're always at the top of the screen.</b>
</p>
<p>
<img alt="Fitts' Law for Macintosh menus" border="0" class="at-xid-6a0120a85dcdae970b0128776fe803970c" height="346" src="https://blog.codinghorror.com/content/images/uploads/2006/08/6a0120a85dcdae970b0128776fe803970c-pi.png" width="461">
</p>
<p>
Since the cursor stops at the edge of the screen, <b>for the purposes of Fitts' law calculation, Macintosh menus are infinitely tall!</b> Thus, Macintosh menus <i>are</i> faster to navigate.
</p>
<p>
Although placing the menus at the top of the display does leverage Fitts' law nicely, it also presents its own set of problems.
</p>
<ul>
<li>Where does the menu go in a multiple monitor scenario? <a class="blines2" href="http://www.codinghorror.com/blog/archives/000217.html" target="_blank" title="Link to another page in this blog">I use three monitors</a> on both my home and work PCs. If I move an application to the rightmost monitor, do the application menus still appear on the center or left monitor?
</li>
<li>Detaching applications from their UI in this manner seems to violate the rule of proximity-- related things should be together. On a single monitor system, the distance between the application and its menu could be quite large unless the application window is maximized.
</li>
<li>In a broader sense, <a class="blines2" href="http://www.codinghorror.com/blog/archives/000397.html" target="_blank" title="Link to another page in this blog">I think the days of the main menu are numbered as a keystone GUI metaphor.</a> As far back as I can remember, the Macintosh has always used this "menu at the top of the display" metaphor, so it's written in stone for users at this point. Change could be painful. But then again, Apple has a habit of reinventing themselves periodically, so who knows.
</li>
</ul>
<p>
Fitts' law isn't just about making things larger and easier to click on. It's about <a class="blines3" href="http://www.asktog.com/basics/firstPrinciples.html#fittsLaw" target="_blank" title="Link outside of this blog">maximizing the utility of the natural borders on the edges of your screen</a>:
</p>
<p>
</p>
<blockquote>
Fitts' law indicates that the most quickly accessed targets on any computer display are the four corners of the screen, because of their pinning action, and yet, for years, they seemed to be avoided at all costs by designers.
<p>
Use the pinning actions of the sides, bottom, top, and corners of your display: A single-row toolbar with tool icons that "bleed" into the edges of the display will be many times faster than a double row of icons with a carefully-applied one-pixel non-clickable edge between the tools and the side of the display.
</p>
</blockquote>
<p>
I've definitely felt the pain of Fitts' law violations.
</p>
<p>
I love multiple monitors. In my opinion, life begins with two displays, the largest you can afford. And you should really upsize to three if you want maximum benefit. But <b>one unfortunate side-effect of multiple monitors is the removal of some natural edges between adjoining monitors.</b> The cursor now flows freely between monitors; it's painful to stop the cursor on the left and right edges of the app on the center monitor.
</p>
<p>
And Fitts' law violations can also extend to hardware. Consider touchpad designs that have dedicated scrolling areas on the left or bottom.
</p>
<p>
<img alt="Fitts' Law violating touchpad" border="0" class="at-xid-6a0120a85dcdae970b0128776fe823970c" height="246" src="https://blog.codinghorror.com/content/images/uploads/2006/08/6a0120a85dcdae970b0128776fe823970c-pi.jpg" width="263">
</p>
<p>
This seems like a good idea on paper, but in practice, it destroys the usability of the touchpad. <b>On a touchpad with dedicated scrolling areas, you have no way to know when you've passed from touchpad area into the no-man's-land of scrolling area.</b> The natural edges of the touchpad are ruined; we've given them an arbitrarily different, hard-coded set of functionality. Dedicated hardware isn't even necessary to achieve scrolling effects on a touchpad. We can easily leverage Fitts' Law in the touchpad driver software instead. Just slide your finger until you hit an edge, then slide it along the edge.
</p>
<p>
<b>The edges could be your most valuable real estate.</b> Use them responsibly. Fitts' law is powerful stuff.
</p>
<p>
</p>
<p></p>
<!--kg-card-end: markdown-->
            </content>
<pubDate>2006-08-09T12:00:00.000Z</pubDate>
<guid>https://blog.codinghorror.com/fitts-law-and-infinite-width/</guid>
</item>
</channel>
</rss>
