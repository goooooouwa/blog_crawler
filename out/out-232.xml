<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
<channel>
<title>Coding Horror</title>
<description>programming and human factors</description>
<link>https://blog.codinghorror.com/</link>
<pubDate>Sun, 19 Apr 2020 00:00:01 GMT</pubDate>
<!-- other elements omitted from this example -->
<item>
<title>How Not to Conduct an Online Poll</title>
<link>https://blog.codinghorror.com/how-not-to-conduct-an-online-poll/</link>
<content>
                <!--kg-card-begin: markdown--><p>
<a href="http://musicmachinery.com/2009/04/15/inside-the-precision-hack/">Inside the Precision Hack</a> is a great read. It's all about how the Time Magazine <a href="http://www.time.com/time/specials/packages/0,28757,1883644,00.html">World's Most Influential People poll</a> was gamed. But the actual hack itself is somewhat less impressive when you start digging into the details.
</p>
<p>
Here's the voting UI for the Time poll in question.
</p>
<p>
<img alt="time 100 poll entry" border="0" class="at-xid-6a0120a85dcdae970b0120a86e2327970b" height="183" src="https://blog.codinghorror.com/content/images/uploads/2009/04/6a0120a85dcdae970b0120a86e2327970b-pi.png" width="319">
</p>
<p>
Casting a vote submits a <code>HTTP GET</code> in the form of:
</p>
<p>
</p>
<pre>http://www.timepolls.com/contentpolls/Vote.do
?pollName=time100_2009&amp;<font color="red">id=1883924</font>&amp;<font color="red">rating=1</font>
</pre>
<p>
Where id is a number associated with the person being voted for, and rating is how influential you think that person is from 1 to 100. Simple enough, but Time's execution was .. less than optimal.
</p>
<p>
</p>
<blockquote>
In early stages of the poll, <b>Time.com didn't have any authentication or validation</b> -- the door was wide open to any client that wanted to stuff the ballot box.
<p>
Soon afterward, it was discovered that the Time.com Poll <b>didn't even range check its parameters</b> to ensure that the ratings fell within the 1 to 100 range
</p>
</blockquote>
<p>
The outcome of the 2009 Time 100 World's Most Influential People poll isn't <i>that</i> important in the big scheme of things, but it's difficult to understand why a high profile website would conduct an anonymous worldwide poll without even the most basic of safeguards in place. This isn't high security; this is web 101. Any programmer with even a rudimentary understanding of how the web works would have thought of these exploits immediately.
</p>
<p>
Without any safeguards, wannabe "hackers" set out to game the poll in every obvious way you can think of. Time eventually responded -- with all the skill and expertise of ... a team who put together the world's most insecure online poll.
</p>
<p>
</p>
<blockquote>
Shortly afterward, Time.com changed the protocol to attempt to authenticate votes by requiring a key be appended to the poll submission URL. The key consisted of an MD5 hash of the URL + a secret word (aka 'the salt'). [hackers eventually] discovered that the salt [..] was poorly hidden in Time.com's voting flash application. With the salt extracted, the autovoters were back online, rocking the vote.
</blockquote>
<p>
So-called secret poorly hidden on the client: check!
</p>
<p>
</p>
<blockquote>
Another challenge faced by the autovoters was that if you voted for the same person more often than once every 13 seconds, your IP would be banned from voting. However, it was noticed that you could cycle through votes for other candidates during those 13 seconds. The autovoters quickly adapted to take advantage of this loophole, interleaving up-votes for moot with down-votes for the competition -- ensuring that no candidate received a vote more frequently than once every 13 seconds, maximizing the voting leverage.
</blockquote>
<p>
Sloppy, incomplete IP throttling: check!
</p>
<p>
At this point, here's the mental image I had of the web developers running the show at time.com:
</p>
<p>
<img alt="a bunch of clowns" border="0" class="at-xid-6a0120a85dcdae970b0120a86e232c970b" height="429" src="https://blog.codinghorror.com/content/images/uploads/2009/04/6a0120a85dcdae970b0120a86e232c970b-pi.jpg" width="640">
</p>
<p>
Remember my advice from <a href="http://www.codinghorror.com/blog/archives/001123.html">design for evil</a>?
</p>
<p>
</p>
<blockquote>
When good is dumb, evil will always triumph.
</blockquote>
<p>
Well, here's your proof. I'm not sure they come any dumber than these clowns.
</p>
<p>
The article goes on to document how the "hackers" exploited these truck sized holes in the time.com online voting system to not only put moot on top, but spell out a little message, too, for good measure:
</p>
<p>
</p>
<blockquote>
Looking at the first letters of each of the top 21 leading names in the poll we find the message "marblecake, also the game". The poll announces (perhaps subtly) to the world, that the most influential are not the Obamas, Britneys or the Rick Warrens of the world, the most influential are an extremely advanced intelligence: the hackers.
</blockquote>
<p>
It's a nice sentiment, I suppose. But <b>is it really a precision hack when your adversaries are incompetent?</b> If you want to read about a <i>real</i> hack -- one that took "extremely advanced intelligence" in the face of a nearly unstoppable adversary -- try <a href="http://www.codinghorror.com/blog/archives/001125.html">the black sunday hack</a>. Now <i>that's</i> a hack.
</p>
<p>
<font color="red">Update:</font> A <a href="http://musicmachinery.com/2009/04/27/moot-wins-time-inc-loses/">second article describing more Time poll hilarity</a>. Now with 100% more CAPTCHA!
</p>
<p>
</p>
<p></p>
<!--kg-card-end: markdown-->
            </content>
<pubDate>2009-04-20T12:00:00.000Z</pubDate>
<guid>https://blog.codinghorror.com/how-not-to-conduct-an-online-poll/</guid>
</item>
</channel>
</rss>
