<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
<channel>
<title>Coding Horror</title>
<description>programming and human factors</description>
<link>https://blog.codinghorror.com/</link>
<pubDate>Sun, 19 Apr 2020 00:00:01 GMT</pubDate>
<!-- other elements omitted from this example -->
<item>
<title>Procrastination and the Bikeshed Effect</title>
<link>https://blog.codinghorror.com/procrastination-and-the-bikeshed-effect/</link>
<content>
                <!--kg-card-begin: markdown--><p>The book <a href="http://www.amazon.com/dp/0596007590/?tag=codihorr-20">Producing Open Source Software: How to Run a Successful Free Software Project</a> is a <b>fantastic reference for anyone involved in a software project</b> – whether you're running the show or not.</p>
<p><a href="http://www.amazon.com/dp/0596007590/?tag=codihorr-20"><img alt="Producing Open Source Software: How to Run a Successful Free Software Project" border="0" class="at-xid-6a0120a85dcdae970b012877701620970c" height="403" src="https://blog.codinghorror.com/content/images/uploads/2009/03/6a0120a85dcdae970b012877701620970c-pi.png" width="300"></a></p>
<p>In addition to the dead-tree edition, the book is available in an appropriately open source free format at <a href="http://producingoss.com/">the official website</a>. The entire book is great, and worth a thorough read, even if you think open source <a href="http://www.flickr.com/photos/daviderickson/718933691/">is communism</a>.</p>
<p>My favorite chapter is <a href="http://producingoss.com/en/communications.html">the one on communication</a>. While important on any software project, communication is especially vital on open source projects, which are "bewilderingly diverse both in audiences and communication mechanisms." One particular pitfall of open source projects is that, if you don't manage the project carefully, you can tend to attract developers who <a href="https://blog.codinghorror.com/the-code-first-dictum/">are more interested in discussion than writing code</a>. It's a subtle but pernicious problem – communication gone wrong.</p>
<blockquote>
<p>Although discussion can meander in any topic, the probability of meandering goes up as the technical difficulty of the topic goes down. After all, the greater the technical difficulty, the fewer participants can really follow what's going on. Those who can are likely to be the most experienced developers, who have already taken part in such discussions thousands of times before, and know what sort of behavior is likely to lead to a consensus everyone can live with.</p>
<p>Thus, consensus is hardest to achieve in technical questions that are simple to understand and easy to have an opinion about, and in "soft" topics such as organization, publicity, funding, etc. People can participate in those arguments forever, because there are no qualifications necessary for doing so, no clear ways to decide (even afterward) if a decision was right or wrong, and because simply outwaiting other discussants is sometimes a successful tactic.</p>
<p>The principle that the amount of discussion is inversely proportional to the complexity of the topic has been around for a long time, and is known informally as <a href="http://bikeshed.com/">the Bikeshed Effect</a>.</p>
</blockquote>
<p>We've struggled with this on <a href="http://stackoverflow.com/">Stack Overflow</a>, too. The broad soft questions tend to get much more interest and attention than the narrow, technical coding questions that we originally intended the site for. We've made adjustments, but it's an unavoidable aspect of group dynamics. Who are we kidding? It's <i>fun</i> to discuss what color the bikeshed should be painted. Everyone has an opinion about their favorite color scheme.</p>
<img alt="shed painting" height="419" src="https://blog.codinghorror.com/content/images/uploads/2009/03/6a0120a85dcdae970b01287770162b970c-pi.jpg" width="555">
<p>What many people don't realize is that the bikeshed effect is, in fact, <a href="http://esciencenews.com/articles/2009/01/12/why.we.procrastinate.and.how.stop">a form of procrastination</a>. And it can suck in highly technical developers, along with everyone else.</p>
<blockquote>
<p>The psychologists handed out questionnaires to a group of students and asked them to respond by e-mail within three weeks. All the questions had to do with rather mundane tasks like opening a bank account and keeping a diary, but different students were given different instructions for answering the questions. Some thought and wrote about what each activity implied about personal traits: what kind of person has a bank account, for example. Others wrote simply about the nuts and bolts of doing each activity: speaking to a bank officer, filling out forms, making an initial deposit, and so forth. The idea was to <b>get some students thinking abstractly and others concretely</b>. Then the psychologists waited. And in some cases, waited and waited. They recorded all the response times to see if there was a difference between the two groups, and indeed there was a significant difference.</p>
<p>The findings, reported in Psychological Science, a journal of the Association for Psychological Science, were very clear. Even though all of the students were being paid upon completion, <b>those who thought about the questions abstractly were much more likely to procrastinate – and in fact some never got around to the assignment at all.</b> By contrast, those who were focused on the how, when and where of doing the task e-mailed their responses much sooner, suggesting that they hopped right on the assignment rather than delaying it.</p>
</blockquote>
<p>This is one reason why <a href="https://blog.codinghorror.com/it-came-from-planet-architecture/">I'm so down on architecture astronauts</a>. I find that <b>the amount of discussion on a software feature is inversely proportional to its value</b>. Sure, have some initial discussion to figure out your direction, but the sooner you can get away from airy abstractions, and down to the nuts and bolts of <i>building the damn thing</i>, the better off you – and your project – will be.</p>
<p>Put another way, what's <a href="http://jeremy.zawodny.com/blog/archives/008581.html">the hardest thing you have to do every day?</a> Deciding what to ignore, so you can stop procrastinating and <i>get stuff done</i>. The next time you feel yourself getting drawn into a protracted bikeshed discussion, consider: shouldn't you be <a href="https://blog.codinghorror.com/yes-but-what-have-you-done/">building something instead?</a></p>
<!--kg-card-end: markdown-->
            </content>
<pubDate>2009-03-03T12:00:00.000Z</pubDate>
<guid>https://blog.codinghorror.com/procrastination-and-the-bikeshed-effect/</guid>
</item>
</channel>
</rss>
