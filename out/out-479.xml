<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
<channel>
<title>Coding Horror</title>
<description>programming and human factors</description>
<link>https://blog.codinghorror.com/</link>
<pubDate>Sun, 19 Apr 2020 00:00:01 GMT</pubDate>
<!-- other elements omitted from this example -->
<item>
<title>You're Now Competing With The Internet</title>
<link>https://blog.codinghorror.com/youre-now-competing-with-the-internet/</link>
<content>
                <!--kg-card-begin: markdown--><p>
Reginald Braithwaite writes consistently great stuff on <a href="http://weblog.raganwald.com/">his blog</a>, but I think my absolute favorite thing he's ever written is <a href="http://weblog.raganwald.com/2007/09/we-have-lost-control-of-apparatus.html">We Have Lost Control of the Apparatus</a>.
</p>
<p>
</p>
<blockquote>
But we programmers have lost and we must be realistic about things. The fact of the matter is this: people own their own computers, and our applications are no longer the primary way they learn how computers ought to work. I know, I know, they stare at our work for eight, ten, or twelve hours a day. So you would think that we would set the standard for how computers ought to be. But the Good Old Days when most of users had never seen a computer before work have gone. Some of our users, fresh out of school, have already been using computers for ten years!
<p>
As if that wasn't enough, the really bad news is, when our users go home they have this thing called the Internet. I know, IT locked that down in the office. But we can't stop them from getting on it at home, on their mobiles, and now even on those insidious Apple iPods! <b>And when people use the Internet, they are actually using other people's applications.</b> I'm not kidding. Our users are being exposed to applications we don't control. And it messes things up. You see, the users get exposed to other ways of doing things, ways that are more convenient for users, ways that make them more productive, and they incorrectly think we ought to do things that way for them.
</p>
</blockquote>
<p>
Over the last five years, the internet has evolved from a traditional HTML content delivery system into an application delivery platform. One that competes with every sort of software application, not just other websites. Every bit of software we write, on any platform, is judged against things users are <i>already</i> doing on the internet. <b>We're all competing with the internet.</b>
</p>
<p>
<a href="http://www.tricornerhumor.com/"><img alt="HA! HA! I'm using the Internet!!!1!" border="0" class="at-xid-6a0120a85dcdae970b0128777028fb970c" height="287" src="https://blog.codinghorror.com/content/images/uploads/2007/11/6a0120a85dcdae970b0128777028fb970c-pi.jpg" width="400"></a>
</p>
<p>
Reg provides a number of specific examples where internet applications have raised users' expectations. Possibly the greatest shift in expectations is around search:
</p>
<p>
</p>
<blockquote>
[Google] is <a href="http://www.codinghorror.com/blog/archives/000767.html">practically the home page of the Internet</a>. Which means, to a close approximation, they are the most popular application in the world.
<p>
And what have they taught our users? <b>Full-text search wins.</b> If you give them a search page with a field for searching the account number and a field for searching the SSN and a field for searching the zip code and a field for searching the phone number, they want to know why they can't just type <code>4165558734</code> and <i>find Reg by phone number?</i> And right after we make that work for them, those greedy and ungrateful sods'll want to type <code>(416) 555-8734</code> and have it work too. Bastards.
</p>
<p>
I have tried explaining that there's an ambiguity if an account number is also <code>4165558734</code>. They think we should just show them what we find and let them sort it out. They're idiots, obviously, but they're our idiots and I'm pretty sure that if we fire them all we'll have to clean our own desks out the following day.
</p>
</blockquote>
<p>
This is particularly hard on the internal applications Reg seems to be focusing on here. Internal apps are already the shakiest part of the software ecosystem; as Joel points out, <a href="http://www.joelonsoftware.com/articles/FiveWorlds.html">lots of internal software sucks pretty badly</a>. (I know because I've certainly <a href="http://www.codinghorror.com/blog/archives/000099.html">written my share of it</a>.) Having this pervasive, instantly accessible world of reasonably good software available through your browser-- and it's only <i>one tiny click away</i> -- is like pouring salt in the user's wounds. It's impossible to justify the pain of badly written internal software when there's a universe of better choices practically beating down your door, even on locked down corporate desktops.
</p>
<p>
If I was a user, I'd be angry, too. If you're writing software that <a href="http://www.codinghorror.com/blog/archives/000773.html">you want users to actually <i>use</i></a>, then no matter what kind of software you're delivering, you better <a href="http://www.codinghorror.com/blog/archives/000883.html">pay attention to your online competition</a>. It's going to be rough, even for commercial desktop applications. I'm not sure many internal applications can legitimately compete with superior options emerging on the internet every day. It's survival of the fittest alongside a vibrant new species of internet competitors -- does your software <i>deserve</i> to survive?
</p>
<p>
</p>
<p></p>
<!--kg-card-end: markdown-->
            </content>
<pubDate>2007-11-15T12:00:00.000Z</pubDate>
<guid>https://blog.codinghorror.com/youre-now-competing-with-the-internet/</guid>
</item>
</channel>
</rss>
