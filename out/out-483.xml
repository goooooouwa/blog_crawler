<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
<channel>
<title>Coding Horror</title>
<description>programming and human factors</description>
<link>https://blog.codinghorror.com/</link>
<pubDate>Sun, 19 Apr 2020 00:00:01 GMT</pubDate>
<!-- other elements omitted from this example -->
<item>
<title>Is It Time for 64-bit on the Desktop?</title>
<link>https://blog.codinghorror.com/is-it-time-for-64-bit-on-the-desktop/</link>
<content>
                <!--kg-card-begin: markdown--><p>
I've been wary of 64-bit on the desktop, as <a href="http://www.codinghorror.com/blog/archives/000435.html">the benefits are usually outweighed by the compatibility problems</a>. I agree that 64-bit operating systems are inevitable in the big scheme of things, but I've struggled to see the relevance of 64-bit for typical desktop and laptop users. It's a novelty, albeit a necessary one for particular niche applications. However, I'm now beginning to think <b>we could see a fairly broad switch to 64-bit desktop operating systems over the next few years</b>-- much sooner than I anticipated.
</p>
<p>
Why?
</p>
<p>
</p>
<ol>
<li>
<b>64-bit versions of popular consumer desktop operating systems are commonly available</b>. Both Vista and OS X 10.5 fully support 64-bit apps out of the box, although <a href="http://arstechnica.com/reviews/os/mac-os-x-10-5.ars/6">evidently the OS X kernel is still 32-bit</a>.
<p>
</p>
</li>
<li>
<b>Memory is cheap. Dirt cheap.</b> As of this writing, you can buy 4 gigabytes of quality DDR2 memory for around $120. The memory industry has a nasty habit of switching to newer, faster, more expensive memory types over time, but it looks like this plateau might be here to stay. 4 GB of memory is no longer a rare extravagance for rich users; it's becoming commonplace, even mundane.
<p>
</p>
</li>
<li>
<b>The 32-bit x86 architecture doesn't scale very well beyond 2 gigabytes.</b> If you install 4 gigabytes of memory, you may find yourself wondering -- <a href="http://www.codinghorror.com/blog/archives/000811.html">Dude, Where's My 4 Gigabytes of RAM?</a> Good luck explaining to the average user why their computer says they only have 3 GB of memory, even though they <i>paid</i> for 4. It's a tough sell. And honestly, who has time to listen to a bunch of arcane technical explanations for this bizarre limitation? People just want full use of the memory they paid for.
<p>
</p>
</li>
<li>
<b>Modern video cards do not play well with 32-bit memory limits.</b> Newer operating systems emphasize the importance of good, discrete video hardware. To get the full suite of cool desktop effects, through <a href="http://en.wikipedia.org/wiki/Windows_Aero">Aero</a>, <a href="http://www.beryl-project.org/">Beryl</a>, or <a href="http://developer.apple.com/macosx/coreimage.html">Core Image</a>, you need a decent midrange video card. I'd say the average amount of memory on a midrange video card today is 256 megabytes, and in the enthusiast class it's closer to 512 megabytes. I can easily see that doubling over the next two years. That's a massive chunk of the 32-bit address space carved out for required hardware. And if you're a hardcore gamer or multiple monitor enthusiast with more than one video card, it's worse. <a href="http://www.dansdata.com/askdan00015.htm">Much worse</a>.
</li>
</ol>
<p>
The switch to 64-bit is interesting because there's a certain air of finality to it. <b>It may be the last <a href="http://www.codinghorror.com/blog/archives/000950.html">bit transition</a> in our lifetimes.</b>
</p>
<p>
</p>
<table cellpadding="4" cellspacing="4" width="300">
<tr>
<td align="right">8-bit</td>
<td align="right">2<sup>8</sup>
</td>
<td align="right">256 bits
</td>
</tr>
<tr>
<td align="right">16-bit</td>
<td align="right">2<sup>16</sup>
</td>
<td align="right">64 KB
</td>
</tr>
<tr>
<td align="right">32-bit</td>
<td align="right">2<sup>32</sup>
</td>
<td align="right">4 GB
</td>
</tr>
<tr>
<td align="right">64-bit</td>
<td align="right">2<sup>64</sup>
</td>
<td align="right">2 EB</td>
</tr>
</table>
<p>
Sure, <a href="http://www.faktoider.nu/640kb_eng.html">nobody will ever need more than 640 kilobytes of memory</a>, but this is a whole new ballgame. To put the size of the 64-bit memory address space in context, here's a chart showing the respective sizes of each. Note that the scale is <i>logarithmic</i>.
</p>
<p>
<img alt="Graph of 8,16,32,64 bit memory spaces on a logarithmic scale" border="0" class="at-xid-6a0120a85dcdae970b012877701d33970c" height="289" src="https://blog.codinghorror.com/content/images/uploads/2007/11/6a0120a85dcdae970b012877701d33970c-pi.png" width="833">
</p>
<p>
The transition from 16 to 32 bit increased our address space by a factor of 65 thousand. That's big. We've been in the 32-bit era since about 1992; that address space has been good for about thirty years, give or take a few. The transition from 32 to 64 bit, whenever we finally make it, will <b>increase our address space by a factor of <i>four billion</i></b>. Will there be a transition to 128-bit machines and operating systems? Absolutely. But I'm not sure it'll happen while we're still alive.
</p>
<p>
You certainly <b>won't be upgrading to 64-bit applications for better performance</b>. Or at least you shouldn't be, unless you enjoy disappointment. <a href="http://www.codinghorror.com/blog/archives/000435.html">64-bit offers compelling performance benefits on servers</a>, but on desktops, it's a bit of a wash. On one hand, the x86 architecture <a href="http://arstechnica.com/reviews/os/mac-os-x-10-5.ars/6">simply works better in 64-bit mode</a>:
</p>
<p>
</p>
<blockquote>
The x86 instruction set was created in the 16-bit era and has accumulated quite a bit of cruft going from 16-bit to 32-bit. Some of that cruft was wisely abandoned during <a href="http://arstechnica.com/articles/paedia/cpu/x86-64.ars">the transition from 32-bit to 64-bit</a>. <b>Applications compiled for x86_64 don't just get larger registers, they get more registers, plus a more modern calling convention and more addressing modes</b>. Every 32-bit x86 application can benefit from these changes, it's just a question of how significant that benefit will be.
</blockquote>
<p>
On the other hand, stuff is just plain <i>larger</i> in 64-bit land-- your pointers and data structures now take up twice as much room. That 2 megabytes of cache on your CPU won't be able to fit as many things in as it used to.
</p>
<p>
Once you factor in the pros and cons, you end up with a 64-bit machine that runs desktop applications a few percentage points faster than the 32-bit machine it replaced. There are some exceptions, of course-- most notably games and audio/video editing-- but on average, performance remains roughly the same for typical desktop applications. It's hard to find a definitive set of benchmarks that tell the entire 64-bit versus 32-bit performance story, but all the ones I've seen show rough parity.
</p>
<p>
I recently upgraded both my work and home machines to 4 GB of memory. Based on the positive Vista x64 experiences related by coworkers and Scott Hanselman, I took the plunge and upgraded to Vista x64. <b>It was the only way to use anything close to the full 4 GB of memory.</b> I resisted mightily, because I expected 64-bit driver and software problems, but much to my surprise, I've had none. Zero. Zilch. It's been unbelievably smooth. Perhaps it's because I waited a good six months after the initial release of Vista to move to x64, but everything "just works". All my hardware has 64-bit drivers. Many of my applications even come in x64 flavors, and the ones that don't still work flawlessly. I didn't change any of the hardware other than adding memory, but I'd <i>swear</i> my system is more responsive under x64 in daily use. And I no longer run into <a href="http://www.codinghorror.com/blog/archives/000966.html">certain aggravating 32-bit operating system limits</a>.
</p>
<p>
Of course, my original advice regarding 64-bit operating systems hasn't changed. <b>Unless you have more than 2 GB of memory, there's no reason to bother with 64-bit.</b> But have you priced memory recently? Now that 4 GB configurations are approaching mainstream, it's encouraging to know that 64-bit operating systems are out there, and that they work with a minimum of fuss. It's certainly taken long enough to tackle this problem. Hopefully we can stay with 64-bit for the forseeable future, and leave that pesky 128-bit problem for our kids to deal with.
</p>
<p>
</p>
<p></p>
<!--kg-card-end: markdown-->
            </content>
<pubDate>2007-11-09T12:00:00.000Z</pubDate>
<guid>https://blog.codinghorror.com/is-it-time-for-64-bit-on-the-desktop/</guid>
</item>
</channel>
</rss>
