<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
<channel>
<title>Coding Horror</title>
<description>programming and human factors</description>
<link>https://blog.codinghorror.com/</link>
<pubDate>Sun, 19 Apr 2020 00:00:01 GMT</pubDate>
<!-- other elements omitted from this example -->
<item>
<title>Vive la Programming Revolution!</title>
<link>https://blog.codinghorror.com/vive-la-programming-rvolution/</link>
<content>
                <!--kg-card-begin: markdown--><p><img class="at-xid-6a0120a85dcdae970b0120a86d6776970b" src="https://blog.codinghorror.com/content/images/uploads/2006/06/6a0120a85dcdae970b0120a86d6776970b-pi.jpg" border="0" alt="viva le programming rvolution!" width="321" height="436" align="right"> Jonathan Edwards' <a href="http://alarmingdevelopment.org/index.php?p=5">Manifesto of the Programmer Liberation Front</a> is an inspiring <strong>call to arms for programmers who are fed up with the status quo of Java and C#</strong>. Maybe it is time to open your window, stick your head out and yell, <a href="http://www.whysanity.net/monos/network3.html">"I'm as mad as hell and I'm not going to take this anymore!"</a></p>
<p>Or you could just read his <a href="http://alarmingdevelopment.org/index.php?p=5">blog post</a>. Here are a few highlights:</p>
<blockquote>Compared to every other field of design and engineering, programming is an embarrassment and a failure. The "software crisis" has dogged us from almost the beginning. We who have made programming our life will no longer tolerate this.
<p>Programming languages are the fundamental technology of programming. To make fundamental improvements in programming you need a fundamentally better programming language.</p>
<p>There is a widespread belief in both industry and academia that working on new programming languages is pointless. This is short-sighted. Historically, all sciences and technologies undergo revolutionary change. The lack of meaningful progress in the last 20 years means that there is an enormous pent-up potential for change, and the lack of interest in it means there is an enormous opportunity for the intrepid. It is a good time for a revolution.</p>
<p>To fully embrace adaptation as the essence of programming will require a change of attitude that is quite difficult: discarding elegant yet fragile constructions in favor of messy but flexible ones. One case in point is copy-and-paste programming. This violates all the accepted rules of modularity and hygiene, yet everyone still does it routinely. Either most programmers are stupid and evil, or the accepted rules are idealistic and impractical. The latter is the case. It is necessary to embrace copy-and-paste as a first-class "semi-modularity" mechanism in the language Ã¢â‚¬â€œ to track it, manage it, and eventually refactor it into "proper" modularity. This may be heretical, yet an honest appraisal of how programmers really work requires something like it. Usability is a subversive idea.</p>
<p>In Science and Math, formulas are typically one-liners. Even small programs are far larger than any mathematical statement. Expression-based languages attempt to scale up formulas to hundreds or thousands of lines. One reason this does not work is that people can not easily handle more than about 2 levels of nesting. We are not stack machines! Natural languages rely on linear narrative flow and avoid deep nesting. This may be the real problem with LISP: people complain about parentheses, but they are really complaining about deep nesting.</p>
<p>Commercial considerations often dictate that compatibility and performance have the highest priority, with disastrous consequences (witness C++). As the Open Source movement has demonstrated, progress requires overthrowing the economics of software. <strong>We will need to go even further, freeing our minds of traditions established with the very first programming languages.</strong> Usability is the guiding light to rationally reinvent programming from scratch.</p>
<p>Programming is at a dead-end. The only way things will get better is with a complete revolution. More conservative attempts over the years have repeatedly failed to make a difference, leading to the widespread abandonment of hope. We have nothing to lose.</p>
</blockquote>
<p>You might say it's a <a href="http://en.wikipedia.org/wiki/Open-air_preaching">street corner preacher</a> rant. But that's what makes it so good.</p>
<!--kg-card-end: markdown-->
            </content>
<pubDate>2006-06-23T12:00:00.000Z</pubDate>
<guid>https://blog.codinghorror.com/vive-la-programming-rvolution/</guid>
</item>
</channel>
</rss>
