<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
<channel>
<title>Coding Horror</title>
<description>programming and human factors</description>
<link>https://blog.codinghorror.com/</link>
<pubDate>Sun, 19 Apr 2020 00:00:01 GMT</pubDate>
<!-- other elements omitted from this example -->
<item>
<title>Unit Testing vs. Beta Testing</title>
<link>https://blog.codinghorror.com/unit-testing-vs-beta-testing/</link>
<content>
                <!--kg-card-begin: markdown--><p>
Why does Wil Shipley, the <a href="http://www.codinghorror.com/blog/archives/000336.html">author of Delicious Library</a>, <a href="http://wilshipley.com/blog/2005/09/unit-testing-is-teh-suck-urr.html">hate unit testing so much?</a>
</p>
<p>
</p>
<blockquote>
<i>
I've certainly known companies that do "unit testing" and other crap they've read in books. Now, you can argue this point if you'd like, because I don't have hard data; all I have is my general intuition built up over my paltry 21 years of being a professional programmer.
</i><p>
[..] You should test. Test and test and test. But I've NEVER, EVER seen a structured test program that (a) didn't take like 100 man-hours of setup time, (b) didn't suck down a ton of engineering resources, and (c) actually found any particularly relevant bugs. <b>Unit testing is a great way to pay a bunch of engineers to be bored out of their minds and find not much of anything.</b> [I know -- one of my first jobs was writing unit test code for Lighthouse Design, for the now-president of Sun Microsystems.] You'd be MUCH, MUCH better offer hiring beta testers (or, better yet, offering bug bounties to the general public).
</p>
<p>
Let me be blunt: YOU NEED TO TEST YOUR DAMN PROGRAM. Run it. Use it. Try odd things. Whack keys. Add too many items. Paste in a 2MB text file. FIND OUT HOW IT FAILS. I'M YELLING BECAUSE THIS IS IMPORTANT.
</p>
<p>
Most programmers don't know how to test their own stuff, and so when they approach testing they approach it using their programming minds: "Oh, if I just write a program to do the testing for me, it'll save me tons of time and effort."
</p>
</blockquote>
<p>
It's hard to completely disregard the opinion of a veteran developer shipping an application that gets <a href="http://www.macworld.com/2005/03/reviews/deliciouslibrary/">excellent reviews</a>. Although his opinion may seem heretical to the <a href="http://www.testdriven.com/">Test Driven Development</a> cognoscenti, I think he has some valid points:
</p>
<p>
</p>
<ul>
<li>
<b>Some bugs don't matter.</b> Extreme unit testing may reveal.. extremely rare bugs. If a bug exists but no user ever encounters it, do you care? If a bug exists but only one in ten thousand users ever encounters it, do you care? Even Joel Spolsky <a href="http://www.joelonsoftware.com/articles/SetYourPriorities.html">seems to agree</a> on this point. Shouldn't we be fixing bugs based on data gathered from actual usage rather than a stack of obscure, failed unit tests?
</li>
<li>
<b>Real testers hate your code.</b> A unit test simply verifies that something works. This makes it far, far too easy on the code. Real testers hate your code and will do whatever it takes to break it-- feed it garbage, send absurdly large inputs, enter unicode values, double-click every button in your app, etcetera.
</li>
<li>
<b>Users are crazy.</b> Automated test suites are a poor substitute for real world beta testing by actual beta testers. Users are erratic. Users have favorite code paths. Users have weird software installed on their PCs. Users are crazy, period. Machines are far too rational to test like users.
</li>
</ul>
<p>
While I think basic unit testing can <i>complement</i> formal beta testing, I tend to agree with Wil: <b>the real and best testing occurs when you ship your software to beta testers.</b> If unit test coding is cutting into your beta testing schedule, you're making a very serious mistake.
</p>
<p>
</p>
<p></p>
<!--kg-card-end: markdown-->
            </content>
<pubDate>2005-10-17T12:00:00.000Z</pubDate>
<guid>https://blog.codinghorror.com/unit-testing-vs-beta-testing/</guid>
</item>
</channel>
</rss>
