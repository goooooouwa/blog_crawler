<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
<channel>
<title>Coding Horror</title>
<description>programming and human factors</description>
<link>https://blog.codinghorror.com/</link>
<pubDate>Sun, 19 Apr 2020 00:00:01 GMT</pubDate>
<!-- other elements omitted from this example -->
<item>
<title>Does Having The Best Programmers Really Matter?</title>
<link>https://blog.codinghorror.com/does-having-the-best-programmers-really-matter/</link>
<content>
                <!--kg-card-begin: markdown--><p>
Joel has a lengthy entry in which he asks, <a href="http://www.joelonsoftware.com/articles/HighNotes.html">does having the "best programmers" really matter?</a>
</p>
<p>
This is something I've <a href="http://www.codinghorror.com/blog/archives/000072.html">talked about before</a>: <b>extreme skill disparity is unique to the profession of software development</b>. The odds of working with a genius or a jackass on any given job are about fifty-fifty.
</p>
<p>
What's worse is that there's no correlation between experience and skill, either. I've worked with amazingly talented interns and 20 year vets who produced terrible code. Joel provides additional data to support this hypothesis:
</p>
<p>
</p>
<blockquote>
The data I rely upon comes from Professor Stanley Eisenstat at Yale. Each year he teaches a programming-intensive course, CS 323, where a large proportion of the work consists of about ten programming assignments. The assignments are very serious for a college class: implement a Unix command-line shell, implement a ZLW file compressor, etc.
<p>
There was so much griping among the students about how much work was required for this class that Professor Eisenstat started asking the students to report back on how much time they spent on each assignment. He has collected this data carefully for several years.
</p>
<p>
I spent some time crunching the data; it's the only data sets I know of where we have dozens of students working on identical assignments using the same technology at the same time. It's pretty darn controlled, as experiments go.
</p>
</blockquote>
<p>
Here's a representative sample for a single CS 323 assignment, showing time spent versus grade/score:
</p>
<p>
<img alt="hours vs. score scatter plot for a Yale CS 323 assignment" class="at-xid-6a0120a85dcdae970b0128776fb3de970c" height="311" src="https://blog.codinghorror.com/content/images/uploads/2005/08/6a0120a85dcdae970b0128776fb3de970c-pi.png" width="335">
</p>
<p>
There is absolutely no correlation whatsoever between time spent on the problem and the resulting score for these CS students. It's not much of a stretch to extend this to <a href="http://www.codinghorror.com/blog/archives/000072.html">time spent in the profession of software development</a>.
</p>
<p>
The rest of Joel's post veers dangerously close to being self-serving-- <i>look at my awesome company and the smart employees I hired!</i> but at least he's finally acknowledging that he is really talking about a very narrow niche:
</p>
<p>
</p>
<blockquote>
It's not just a matter of "10 times more productive." It's that the "average productive" developer never hits the high notes that make great software.
<p>
Sadly, this doesn't really apply in non-product software development. Internal, in-house software is rarely important enough to justify hiring rock stars. Nobody hires Dolly Parton to sing at weddings. That's why the most satisfying careers, if you're a software developer, are at actual software companies, not doing IT for some bank.
</p>
</blockquote>
<p>
Since <b>Joel's commercial shrink-wrap software development is a tiny percentage of the overall IT market</b>, does this mean that having the best programmers doesn't matter <i>most of the time?</i>
</p>
<p>
Sadly, I believe the answer is yes.
</p>
<p>
</p>
<p></p>
<!--kg-card-end: markdown-->
            </content>
<pubDate>2005-08-03T12:00:00.000Z</pubDate>
<guid>https://blog.codinghorror.com/does-having-the-best-programmers-really-matter/</guid>
</item>
</channel>
</rss>
