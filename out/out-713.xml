<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
<channel>
<title>Coding Horror</title>
<description>programming and human factors</description>
<link>https://blog.codinghorror.com/</link>
<pubDate>Sun, 19 Apr 2020 00:00:01 GMT</pubDate>
<!-- other elements omitted from this example -->
<item>
<title>Is Your Database Under Version Control?</title>
<link>https://blog.codinghorror.com/is-your-database-under-version-control/</link>
<content>
                <!--kg-card-begin: markdown--><p>
When I ask development teams whether their database is under version control, I usually get blank stares.
</p>
<p>
The database is a critical part of your application. If you deploy version 2.0 of your application against version 1.0 of your database, what do you get? A broken application. And that's why <b>your database should always be under source control right next to your application code</b>. You deploy the app, and you deploy the database. Like peanut butter and chocolate, they are two great tastes that taste great together.
</p>
<p>
At Vertigo, we rolled our own tool to reverse engineer the database into a set of files, which we then check into source control. I've visited other customers that did the same thing. But why write what you can buy? Leon Bambrick lists <a href="http://secretgeek.net/dbcontrol.asp">a number of great tools</a> you can purchase to help you in get your database under version control where it belongs. Unfortunately, he omitted one of the best tools: Microsoft's new <a href="http://msdn2.microsoft.com/en-us/teamsystem/aa718807.aspx">Team Edition for Database Professionals</a>.
</p>
<p>
<img alt="a database under version control" border="0" class="at-xid-6a0120a85dcdae970b0128776fe4e1970c" height="301" src="https://blog.codinghorror.com/content/images/uploads/2006/12/6a0120a85dcdae970b0128776fe4e1970c-pi.png" width="253">
</p>
<p>
<a href="http://msdn2.microsoft.com/en-us/teamsystem/aa718807.aspx">Team Edition for Database Professionals</a> goes far beyond mere reverse engineering of the database into files. You get an industrial-strength database project that you can add to your solution, along with a few other goodies:
</p>
<p>
</p>
<ul>
<li>
<b>Create test data.</b> A blank database schema isn't particularly useful to develop against. Now you can distribute your database schema along with one-click synthetic data generation plans. With flexible synthetic data generators, you can avoid dumping production data to developers, or, God forbid, letting developers fend for themselves by creating their own test data. And you can generate 1,000 rows or 100,000 rows. I wish I had a dollar every time an application I've worked on began to have performance problems because none of the developers had the foresight to test the app with more than a few rows of crappy, manually entered test data. Data generation is a <i>huge</i> increase in development quality.
</li>
<li>
<b>Schema comparison</b>. If we can compare two files in source control, why can't we compare two tables? A robust schema comparison tool is essential. Not sure why staging is different than production? Run a quick schema compare on 'em. Did I mention it also creates a real-time update script every time you do a comparison.. which it can execute with one additional click?
</li>
<li>
<b>Data comparison</b>. If your testers are complaining because they entered test data that causes your application to crash, run the data compare tool to determine exactly how their data differs from yours.
</li>
<li>
<b>Database unit testing</b>. If you make a change to the database schema, how do you know if you've broken any applications that rely on that database? You know because you've written unit tests that validate the database. Right? <i>Right?</i>
</li>
<li>
<b>Refactoring</b>. You can rename entities in the database (columns, tables, procs, etc) and have the rename automatically cascade throughout the database.
</li>
<li>
<b>Integrated T-SQL editor</b>. T-SQL is now a first class language construct in the IDE, just like C# and VB.NET. Run queries and view execution plans and stats, all without leaving the cozy confines of good old Visual Studio.
</li>
</ul>
<p>
It's a great tool.. if you're a Microsoft shop, and you're using SQL Server. I highly recommend <a href="http://www.microsoft.com/downloads/details.aspx?familyid=7de00386-893d-4142-a778-992b69d482ad&amp;displaylang=en">downloading the trial edition</a>. But the specifics of the tool aren't important; <b>get your database under version control by any means necessary</b>. Making your database a first-class citizen in source control seems totally obvious in retrospect. Now if only we could convince more developers to actually do it.
</p>
<p>
</p>
<p></p>
<!--kg-card-end: markdown-->
            </content>
<pubDate>2006-12-12T12:00:00.000Z</pubDate>
<guid>https://blog.codinghorror.com/is-your-database-under-version-control/</guid>
</item>
</channel>
</rss>
