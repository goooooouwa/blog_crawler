<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
<channel>
<title>Coding Horror</title>
<description>programming and human factors</description>
<link>https://blog.codinghorror.com/</link>
<pubDate>Sun, 19 Apr 2020 00:00:01 GMT</pubDate>
<!-- other elements omitted from this example -->
<item>
<title>Escaping From Gilligan's Island</title>
<link>https://blog.codinghorror.com/escaping-from-gilligans-island/</link>
<content>
                <!--kg-card-begin: markdown--><p>I find it helpful to revisit Steve McConnell's <a href="http://www.stevemcconnell.com/rdenum.htm">list of classic development process mistakes</a>, and the <a href="http://www.stevemcconnell.com/rdmistak.htm">accompanying case study</a>, at least once every year. Stop me if you've heard this one before:</p>
<blockquote>
<p>"Look, Mike," Tomas said. "I can hand off my code today and call it 'feature complete', but I've probably got three weeks of cleanup work to do once I hand it off." Mike asked what Tomas meant by "cleanup." "I haven't gotten the company logo to show up on every page, and I haven't gotten the agent's name and phone number to print on the bottom of every page. It's little stuff like that. All of the important stuff works fine. I'm 99-percent done."</p>
</blockquote>
<p>As that old software proverb goes, <i>the first ninety percent of the task takes ninety percent of the time, and the last ten percent takes the other ninety percent.</i></p>
<p>The <a href="http://www.stevemcconnell.com/rdmistak.htm">Classic Mistakes case study</a> is unnerving to read; it's like those staged re-enactments you see on <a href="http://www.amw.com/">America's Most Wanted</a>. It's an exaggerated but strangely accurate summary of every pathological software project I've ever participated in, which is to say almost all of them.</p>
<p>This is the phenomenon McConnell likens to <a href="http://www.tvtome.com/GilligansIsland/">Gilligan's Island</a>. <b>Every week there's some new, crazy scheme to escape the island, but at the end of the episode, the castaways always end up stuck on the island for yet another week.</b></p>
<img alt="The cast of Gilligan's Island" border="0" class="at-xid-6a0120a85dcdae970b0120a86d9977970b" height="346" src="https://blog.codinghorror.com/content/images/uploads/2007/06/6a0120a85dcdae970b0120a86d9977970b-pi.jpg" width="553">
<p>If you don't immediately see the parallels with software development, allow me to reacquaint you with <a href="http://blog.codinghorror.com/the-long-dismal-history-of-software-project-failure/">the long, dismal history of software project failure</a>. <b>Classic mistakes are classic because they're so seductive.</b> You have to actively recognize when you're falling into one of these traps. As Steve once said in <a href="http://technetcast.ddj.com/hz-show-980417.html">an interview</a>:</p>
<blockquote>
<p>Actually succeeding in a software project depends a whole lot less on not doing a few things wrong but on doing almost everything right.</p>
</blockquote>
<p>Which is why you should have every single one of <a href="http://www.stevemcconnell.com/rdenum.htm">the 36 classic mistakes</a> outlined in McConnell's <a href="http://www.amazon.com/exec/obidos/ASIN/1556159005/codihorr-20">Rapid Development</a> committed to memory by now:</p>
<table cellpadding="2" cellspacing="2" width="700">
<tr>
<td><b>People Mistakes</b></td>
<td><b>Process Mistakes</b></td>
</tr>
<tr>
<td valign="top">
Undermined motivation<br>
Weak personnel<br>
Uncontrolled problem employees<br>
Heroics<br>
Adding people to a late project<br>
Noisy, crowded offices<br>
Friction between developers and customers<br>
Unrealistic expectations<br>
Lack of effective project sponsorship<br>
Lack of stakeholder buy-in<br>
Lack of user input<br>
Politics placed over substance<br>
Wishful thinking<br>
</td>
<td valign="top">
Overly optimistic schedules<br>
Insufficient risk management<br>
Contractor failure<br>
Insufficient planning<br>
Abandonment of planning under pressure<br>
Wasted time during the fuzzy front end<br>
Shortchanged upstream activities<br>
Inadequate design<br>
Shortchanged quality assurance<br>
Insufficient management controls<br>
Premature or too frequent convergence<br>
Omitting necessary tasks from estimates<br>
Planning to catch up later<br>
Code-like-hell programming<br>
</td>
</tr>
<tr>
<td>
<br><b>Product Mistakes</b>
</td>
<td>
<br><b>Technology Mistakes</b>
</td>
</tr>
<tr>
<td valign="top">
Requirements gold-plating<br>
Feature creep<br>
Developer gold-plating<br>
Push me, pull me negotiation<br>
Research-oriented development<br>
</td>
<td valign="top">
Silver-bullet syndrome<br>
Overestimated savings from new tools or methods<br>
Switching tools in the middle of a project<br>
Lack of automated source control<br>
</td>
</tr>
</table>
<p>I've increasingly come to believe the only difference between experienced and inexperienced software developers is that the experienced ones <a href="http://blog.codinghorror.com/fail-early-fail-often/">realize when they're making mistakes</a>. The same rule applies to software projects and project managers. <b>If you're not actively scanning through the list of Classic Software Development Mistakes as you run your software project, you have no idea how likely it is you're making one of these mistakes <i>right now</i>.</b></p>
<p>Making mistakes is inevitable, but repeating the same ones over and over doesn't have to be. You should endeavor to make all-new, spectacular, never-seen-before mistakes. To that end, Steve McConnell highlighted <a href="http://forums.construx.com/blogs/stevemcc/archive/2007/06/15/Classic-Mistakes-Updated.aspx">a few new classic mistakes in his blog</a> that he's about to add to the canon, 10 years later:</p>
<ul>
<li>Confusing estimates with targets</li>
<li>Excessive multi-tasking</li>
<li>Assuming global development has a negligible impact on total effort</li>
<li>Unclear project vision</li>
<li>Trusting the map more than the terrain</li>
<li>Outsourcing to reduce cost</li>
<li>Letting a team go dark (replaces the previous "lack of management controls")</li>
</ul>
<p>Steve is also looking for our feedback. He published a <a href="https://vovici.com/wsb.dll/s/10431g2996e">Classic Mistakes Survey</a> and invited everyone to participate. If you have any kind of software project experience under your belt, <a href="https://vovici.com/wsb.dll/s/10431g2996e">please do</a>.</p>
<p>It's true, <a href="http://blog.codinghorror.com/the-long-dismal-history-of-software-project-failure/">the odds are against you</a>. But it's a good idea to periodically remind yourself that maybe, just maybe –  <b>if you can avoid making the same classic mistakes as so many other software projects before you</b> –  you might actually manage to escape from the island one of these days.</p>
<!--kg-card-end: markdown-->
            </content>
<pubDate>2007-06-18T12:00:00.000Z</pubDate>
<guid>https://blog.codinghorror.com/escaping-from-gilligans-island/</guid>
</item>
</channel>
</rss>
