<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
<channel>
<title>Coding Horror</title>
<description>programming and human factors</description>
<link>https://blog.codinghorror.com/</link>
<pubDate>Sun, 19 Apr 2020 00:00:01 GMT</pubDate>
<!-- other elements omitted from this example -->
<item>
<title>Discipline Makes Strong Developers</title>
<link>https://blog.codinghorror.com/discipline-makes-strong-developers/</link>
<content>
                <!--kg-card-begin: markdown--><p>Scott Koon recently wrote about <a href="http://www.lazycoder.com/weblog/2007/08/08/the-number-one-trait-a-successful-developer-needs/">the importance of discipline</a> as a developer trait:</p>
<blockquote>
<p>Every month <a href="http://blog.codinghorror.com/why-do-we-have-so-many-screwdrivers/">a new programming language or methodology appears</a>, followed by devotees singing its praises from every corner of the Internet. All promising increases in productivity and quality. But there is one quality that all successful developers possess. One trait that will make or break every project.</p>
<p><b>Discipline.</b></p>
</blockquote>
<blockquote>
<p>An undisciplined developer will not be able to ship on time and will not write code that is easy to maintain. A disciplined developer will not only enable the success of a project, but will raise the level of productivity in others. Software architects and developers do themselves a disservice when they attribute their success to whatever methodology they have adopted. It really boils down to how disciplined you are.</p>
</blockquote>
<p>It's an interesting coincidence, because I recently gave a presentation to a group of developers on the topic of source control, and I found myself repeating that very same word throughout the presentation: discipline. Discipline. Discipline! I repeat it because <b>the mere <i>presence</i> of a great source control system doesn't obligate anyone to use it in a structured, rational way.</b> No. That takes discipline.</p>
<p>And not many shops, at least in my experience, <i>have</i> the right discipline. All too often, what I see in source control looks more like <a href="http://blog.codinghorror.com/desktopitis/">this Windows desktop</a>:</p>
<p><a href="http://www.codinghorror.com/blog/archives/000612.html"><img alt="messy windows desktop" border="0" height="381" src="https://blog.codinghorror.com/content/images/uploads/2007/08/6a0120a85dcdae970b0120a86d9259970b-pi.png" width="490"></a></p>
<p>Instead of a nice, structured set of projects with logical branches and tags, what ends up in source control is a hairy furball of crazily named folders with no logical structure at all. Just like the average user's desktop.</p>
<p>And it doesn't matter what language you use, either. <a href="http://blog.codinghorror.com/you-can-write-fortran-in-any-language/">You can write FORTRAN in any language.</a></p>
<p>So I'm inclined to agree with Scott. <b>Without discipline, things like tools and languages are irrelevant.</b> But repeating the word "discipline" isn't exactly helpful, either. Perhaps what entry-level developers need is a programming mentor who isn't afraid to personally advocate the necessary discipline, someone hard, <a href="http://blog.codinghorror.com/showstopper/">someone like Dave Cutler</a>, or perhaps someone with the right motivational techniques to inspire discipline, like <a href="http://www.imdb.com/title/tt0093058/">Gunnery Sergeant Hartman</a>:</p>
<p><video poster="/content/images/2015/08/meet-gunnery-sergeant-hartman.jpg" width="100%" preload="none" controls><source src="http://discourse-cdn.codinghorror.com/uploads/default/original/3X/d/4/d49a8160af7a5de8d8894ecdc1866f695bf225bc.mp4"></source></video></p>
<blockquote>
<p>If you ladies leave my island, if you survive recruit training, you will be a weapon. You will be a minister of death praying for war. But until that day you are pukes. You are the lowest form of life on Earth. You are not even human f**ing beings. You are nothing but unorganized grabastic pieces of amphibian s**t. Because I am hard you will not like me. But the more you hate me the more you will learn. I am hard but I am fair. There is no racial bigotry here. I do not look down on ni**ers, kikes, wops or greasers. Here you are all equally worthless. And my orders are to weed out all non-hackers who do not pack the gear to serve in my beloved Corps. Do you maggots understand that?</p>
</blockquote>
<p>You can find the same advice stated in more prosaic terms in <a href="http://www.amazon.com/exec/obidos/ASIN/0735619670/codihorr-20">McConnell's Code Complete</a>:</p>
<blockquote>
<p>It's hard to explain to a fresh computer-science graduate why you need conventions and engineering discipline. When I was an undergraduate, the largest program I wrote was about 500 lines of executable code. As a professional, I've written dozens of utilities that have been smaller than 500 lines, but the average main-project size has been 5,000 to 25,000 lines, and I've participated in projects with over 500,000 lines of code. This type of effort requires not the same skills on a larger scale, but a new set of skills altogether.</p>
<p>In a 15-year retrospective on work at NASA's Software Engineering Laboratory, McGarry and Pajerski reported that the methods and tools that emphasize human discipline have been especially effective (1990). Many highly creative people have been extremely disciplined. "Form is liberating", as the saying goes. Great architects work within the constraints of physical materials, time, and cost. Great artists do, too. Anyone who has examined Leonardo's drawings has to admire his disciplined attention to detail. When Michelangelo designed the ceiling of the Sistine Chapel, he divided it into symmetric collections of geometric forms, such as triangles, circles, and squares. He designed it in three zones corresponding to the three Platonic stages. Without this self-imposed structure and discipline, the 300 human figures would have been merely chaotic rather than the coherent elements of an artistic masterpiece.</p>
</blockquote>
<p>Discipline takes many forms and permeates every aspect of software development. Start small. Say your database schema contains three primary key table columns named <code>list_id</code>, <code>ListId</code>, and <code>list_value</code>. There should be a Gunnery Sergeant Hartman on your development team who will.. <i>gently</i>.. remind the team that it might be a good idea to fix problems like this <i>before</i> they become institutionalized in all your future code.</p>
<p>You don't necessarily have to have a strict, rigid military code of conduct. Even though <a href="http://blog.codinghorror.com/fifty-years-of-software-development/">software engineering is a young field</a>, there are a lot of <a href="http://blog.codinghorror.com/what-is-modern-software-development/">accepted conventions that make up modern software development</a>. All it takes to benefit from those conventions is <b>a little old-fashioned discipline.</b> And if it doesn't start with <i>you</i>, then who?</p>
<!--kg-card-end: markdown-->
            </content>
<pubDate>2007-08-14T12:00:00.000Z</pubDate>
<guid>https://blog.codinghorror.com/discipline-makes-strong-developers/</guid>
</item>
</channel>
</rss>
