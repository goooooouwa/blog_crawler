<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
<channel>
<title>Coding Horror</title>
<description>programming and human factors</description>
<link>https://blog.codinghorror.com/</link>
<pubDate>Sun, 19 Apr 2020 00:00:01 GMT</pubDate>
<!-- other elements omitted from this example -->
<item>
<title>Recursive Page.FindControl</title>
<link>https://blog.codinghorror.com/recursive-pagefindcontrol/</link>
<content>
                <!--kg-card-begin: markdown--><p>
I'm currently writing my first ASP.NET 2.0 website. VS.NET 2005 is worlds better than VS.NET 2003, but I was mildly surprised to find that Microsoft still hasn't added a recursive overload for <code>Page.FindControl</code>. So, courtesy of <a href="http://weblogs.asp.net/omagnusson/">Oddur Magnusson</a>, here it is:
</p>
<p>
</p>
<pre language="C#">
private Control FindControlRecursive(Control root, string id)
{
if (root.ID == id)
{
return root;
}
foreach (Control c in root.Controls)
{
Control t = FindControlRecursive(c, id);
if (t != null)
{
return t;
}
}
return null;
}
</pre>
<p>
This makes life much easier when you're trying to get to controls that are themselves contained within other containers, eg, a <code>TextBox</code> inside a <code>DataView</code> or <code>DataList</code>. Would it have killed Microsoft to add an overloaded, recursive version of this?
</p>
<p>
One interesting semi-undocumented feature of <code>Page.FindControl</code>: you can specify a full "path" to a control using colons as seperators, like so:
</p>
<p>
</p>
<pre language="C#">
Page.FindControl("DataList1:_ctl0:TextBox3")
</pre>
<p>
That's assuming all the containers in the hierarchy have explicit names. You can view source to determine what the dynamically generated 'null' IDs are.
</p>
<p>
</p>
<p></p>
<!--kg-card-end: markdown-->
            </content>
<pubDate>2005-06-01T12:00:00.000Z</pubDate>
<guid>https://blog.codinghorror.com/recursive-pagefindcontrol/</guid>
</item>
</channel>
</rss>
