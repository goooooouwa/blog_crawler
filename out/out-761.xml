<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
<channel>
<title>Coding Horror</title>
<description>programming and human factors</description>
<link>https://blog.codinghorror.com/</link>
<pubDate>Sun, 19 Apr 2020 00:00:01 GMT</pubDate>
<!-- other elements omitted from this example -->
<item>
<title>Is Software Development Like Manufacturing?</title>
<link>https://blog.codinghorror.com/is-software-development-like-manufacturing/</link>
<content>
                <!--kg-card-begin: markdown--><p>
We've adopted <a href="http://en.wikipedia.org/wiki/Scrum_(management)">Scrum</a> for all of our software development at Vertigo. Although I'm totally in favor of <a href="http://www.codinghorror.com/blog/archives/000694.html">Anything But Waterfall</a>, Scrum is an unfortunate name:
</p>
<ol>
<li>It's two additional characters away from <a href="http://en.wikipedia.org/wiki/Scrotum">a term for male genitalia</a>.
</li>
<li>The term is derived from <a href="http://en.wikipedia.org/wiki/Rugby_football">rugby</a>, an extraordinarily violent sport. During my first year at college, a guy on our hall participated in Rugby. His ongoing injuries, both small and large, became a running joke in the dorm. Eventually even he started to re-evaluate the merits of the sport. As Steve <a href="http://steve-yegge.blogspot.com/2006/09/good-agile-bad-agile_27.html">pointed out</a>, Wikipedia defines scrum as <i>".. the most dangerous phase in rugby, since a collapse or inproper engage can lead to a front row player damaging or even breaking his neck."</i> My indirect experience with rugby leads me to agree. The most dangerous phase of a violent sport is not exactly the sort of thing you <i>want</i> to add to your project.
</li>
<li>When you tell customers your software developers use the Scrum process, they have absolutely no idea what you're talking about.
</li>
</ol>
<p>
We usually say "agile" to avoid all the weird connotations of the word Scrum.
</p>
<p>
To promote understanding of Scrum, and Agile software development in general, everyone at Vertigo got a copy of Mary and Tom Poppendieck's book, <a href="http://www.amazon.com/exec/obidos/ASIN/0321150783/codihorr-20">Lean Software Development: An Agile Toolkit</a>. I was inclined to like the book, because I'm a big fan of Mary Poppendieck's article <a href="http://www.poppendieck.com/pdfs/Compensation.pdf">Team Compensation</a> (pdf).*
</p>
<p>
Although the book is great, the Poppendiecks <b>spend a lot of their time drawing parallels between software development and manufacturing</b>. Every few pages, you'll find some example from a classic manufacturing company: Ford, L.L. Bean, GM, Dell, Toyota, etcetera. Although the examples do extend beyond the manufacturing sector, they're definitely dominated by it.
</p>
<p>
Perhaps this makes sense if you consider that <b>Scrum originated in manufacturing</b>:
</p>
<p>
</p>
<blockquote>
Scrum was named as a project management style in auto and consumer product manufacturing companies by Takeuchi and Nonaka in "The New New Product Development Game" (Harvard Business Review, Jan-Feb 1986). Jeff Sutherland, John Scumniotales, and Jeff McKenna documented, conceived and implemented Scrum as it is described below at Easel Corporation in 1993, incorporating team managment styles noted by Takeuchi and Nonaka. In 1995, Ken Schwaber formalized the definition of Scrum and helped deploy it worldwide in software development.
</blockquote>
<p>
The manufacturing examples presented in the book don't resonate with me at all. <b>I'm not convinced that manufacturing industries and software development have much, if anything, in common.</b> Fortunately, the Poppendiecks address this criticism early in the book:
</p>
<p>
</p>
<blockquote>
The origins of lean thinking lie in production, but lean <i>principles</i> are broadly applicable to other disciplines. However, lean production <i>practices</i> -- specific guidelines on what to do -- cannot be transplanted directly from a manufacturing plant to software development. Many attempts to apply lean production practices to software development have been unsuccessful because generating good software is not a production process; it is a development process.
<p>
Development is quite different than production. Think of development as creating a recipe and production as following the recipe. Thse are very different activities, and they should be carried out with different approaches. Developing a recipe is a learning process involving trial and error. You would not expect an expert chef's first attempt at a new dish to be the last attempt. In fact, the whole idea of developing a recipe is to try many variations on a theme and discover the best dish.
</p>
<p>
Once a chef has developed a recipe, preparing the dish means following the recipe. This is equivalent to manufacturing, where the objective is to faithfully and repeatedly reproduce a "recipe" with a minimum of variation.
</p>
</blockquote>
<p>
In many ways, software development is the antithesis of manufacturing:
</p>
<p>
</p>
<ul>
<li>
<b>Variability is the enemy in manufacturing</b>; in software, it's the reason we get up in the morning. Every worthwhile software development project is a custom one-off job for a unique problem.
</li>
<li>
<b>Requirements are the bread and butter of manufacturing</b>; in software, we rarely have meaningful requirements. Even if we do, the only measure of success that matters is whether our solution solves the customer's shifting idea of what their problem is.
</li>
</ul>
<p>
I suppose the proof is in the pudding; if Scrum works for manufacturers and software development shops alike, then maybe the parallels between the two industries are valid. Still, I think <a href="http://www.amazon.com/exec/obidos/ASIN/0321150783/codihorr-20">Lean Software Development: An Agile Toolkit</a> would be a much stronger book if it relied more on examples from actual software development efforts and less on examples from the movie <a href="http://www.imdb.com/title/tt0091159/">Gung Ho</a>.
</p>
<p>
* which I discovered through Joel Spolsky's <a href="http://www.amazon.com/exec/obidos/ASIN/1590595009/codihorr-20">The Best Software Writing I</a>.
</p>
<p>
</p>
<p></p>
<!--kg-card-end: markdown-->
            </content>
<pubDate>2006-10-03T12:00:00.000Z</pubDate>
<guid>https://blog.codinghorror.com/is-software-development-like-manufacturing/</guid>
</item>
</channel>
</rss>
