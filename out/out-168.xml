<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
<channel>
<title>Coding Horror</title>
<description>programming and human factors</description>
<link>https://blog.codinghorror.com/</link>
<pubDate>Sun, 19 Apr 2020 00:00:01 GMT</pubDate>
<!-- other elements omitted from this example -->
<item>
<title>Cultivate Teams, Not Ideas</title>
<link>https://blog.codinghorror.com/cultivate-teams-not-ideas/</link>
<content>
                <!--kg-card-begin: markdown--><p>How much is a good idea worth? According to Derek Sivers, <a href="http://sivers.org/multiply">not much</a>:</p>
<blockquote>
<p>It's so funny when I hear people being so protective of ideas. (People who want me to sign an NDA to tell me the simplest idea.) To me, <strong>ideas are worth nothing unless executed</strong>. They are just a multiplier. Execution is worth millions.</p>
<p>To make a business, you need to multiply the two. The most brilliant idea, with no execution, is worth $20. The most brilliant idea takes great execution to be worth $20,000,000. That's why I don't want to hear people's ideas. I'm not interested until I see their execution.</p>
</blockquote>
<p>I was reminded of Mr. Sivers article when <a href="http://groups.google.com/group/barcampla/browse_thread/thread/4b4091eaf6fb6743?pli=1">this email</a> made the rounds earlier this month:</p>
<blockquote>
<p>I feel that this story is important to tell you because Kickstarter.com copied us.  I tried for 4 years to get people to take Fundable seriously, traveling across the country, even giving a presentation to FBFund, Facebook's fund to stimulate development of new apps.  It was a series of rejections for 4 years.  I really felt that I presented myself professionally in every business situation and I dressed appropriately and practiced my presentations.  That was not<br>
enough. The idiots wanted us to show them charts with massive profits and widespread public acceptance so that they didn't have to take any risks.</p>
<p>All it took was 5 super-connected people at Kickstarter (especially Andy Baio) to take a concept we worked hard to refine, tweak it with Amazon Payments, and then take credit.  You could say that that's capitalism, but I still think you should acknowledge people that you take inspiration from.  I do.  I owe the concept of Fundable to many things, including living in cooperative student housing and studying Political Science at Michigan.  Rational choice theory, tragedy of the commons, and collective action are a few political science concepts that are relevant to Fundable.</p>
<p>Yes, Fundable had some technical and customer service problems. That's because we had no money to revise it.  I had plans to scrap the entire CMS and start from scratch with a new design.  We were just so burned out that motivation was hard to come by.  What was the point if we weren't making enough money to live on after 4 years?</p>
</blockquote>
<p>The disconnect between idea and execution here is so vast it's hard to understand why the author himself can't see it.</p>
<p>I wouldn't call ideas <em>worthless</em>, per se, but it's clear that ideas alone are a hollow sort of currency. Success is rarely determined by the quality of your ideas. But it <em>is</em> frequently determined by the quality of your execution. So instead of worrying about whether the Next Big Idea you're all working on is sufficiently brilliant, <strong>worry about how well you're executing.</strong></p>
<p>The criticism that all you need is "super-connected people" to be successful was also leveled at Stack Overflow. In an email to me last year, Andy Baio  –  ironically, the very person being cited in the email  –  said:</p>
<blockquote>
<p>I very much enjoyed <a href="http://www.codinghorror.com/blog/archives/001284.html">the Hacker News conversation about cloning the site in a weekend</a>.  My favorite comments were from the people that believe Stack Overflow is only successful because of the Cult of Atwood &amp; Spolsky. Amazing.</p>
</blockquote>
<p>I don't care how internet famous you are; <i>nobody</i> gets a pass on execution. Sure, you may have a few more eyeballs at the beginning, but if you don't build something useful, the world will eventually just shrug its collective shoulders and move along to more useful things.</p>
<p>One of my all time favorite software quotes is <a href="http://daringfireball.net/2007/08/c4_1_in_a_nut">from Wil Shipley</a>:</p>
<blockquote>
<p>This is all your app is: a collection of tiny details.</p>
</blockquote>
<p><strong>In software development, execution is staying on top of all the tiny details that make up your app.</strong> If you're not constantly obsessing over every aspect of your application, relentlessly polishing and improving every little part of it  –  no matter how trivial  –  you're not executing. At least, not well.</p>
<p>And unless you work alone, which is a rarity these days, your ability to stay on top of the collection of tiny details that makes up your app will hinge entirely on whether or not you can build a great team. They are the building block of any successful endeavor. This talk by <a href="http://en.wikipedia.org/wiki/Edwin_Catmull">Ed Catmull</a> is almost exclusively focused on how Pixar learned, through trial and error, to build teams that can <i>execute</i>.</p>
<iframe width="480" height="360" src="//www.youtube.com/embed/k2h2lvhzMDc" frameborder="0" allowfullscreen></iframe>
<p>It's a fascinating talk, full of some great insights, and you should <a href="http://www.youtube.com/watch?v=k2h2lvhzMDc">watch the whole thing</a>. In it, Mr. Catmull amplifies Mr. Sivers' sentiment:</p>
<blockquote>
<p>If you give a good idea to a mediocre group, they'll screw it up. <strong>If you give a mediocre idea to a good group, they'll fix it.</strong> Or they'll throw it away and come up with something else.</p>
</blockquote>
<p>Execution isn't merely a multiplier. It's far more powerful. How your team executes has the power to transform your idea from gold into lead, or from lead into gold. That's why, when building Stack Overflow, I was so fortunate to not only <a href="http://blog.codinghorror.com/introducing-stackoverflow-com/">work with Joel Spolsky</a>, but also to cherry-pick two of the best developers I had ever worked with in my previous jobs and drag them along with me. Kicking and screaming if necessary.</p>
<p>If I had to point to <b>the one thing that made our project successful</b>, it was not the idea behind it, our internet fame, the tools we chose, or the funding we had (precious little, for the record).</p>
<p>It was our team.</p>
<p>The value of my advice is debatable. But you would do well to heed the advice of Mr. Sivers and Mr. Catmull. If you want to be successful, stop worrying about the great ideas, and concentrate on cultivating great teams.</p>
<!--kg-card-end: markdown-->
            </content>
<pubDate>2010-01-25T12:00:00.000Z</pubDate>
<guid>https://blog.codinghorror.com/cultivate-teams-not-ideas/</guid>
</item>
</channel>
</rss>
