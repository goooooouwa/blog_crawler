<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
<channel>
<title>Coding Horror</title>
<description>programming and human factors</description>
<link>https://blog.codinghorror.com/</link>
<pubDate>Sun, 19 Apr 2020 00:00:01 GMT</pubDate>
<!-- other elements omitted from this example -->
<item>
<title>XML: The Angle Bracket Tax</title>
<link>https://blog.codinghorror.com/xml-the-angle-bracket-tax/</link>
<content>
                <!--kg-card-begin: markdown--><p>
Everywhere I look, programmers and programming tools seem to have standardized on <a href="http://en.wikipedia.org/wiki/XML">XML</a>. Configuration files, build scripts, local data storage, code comments, project files, you name it -- <b>if it's stored in a text file and needs to be retrieved and parsed, it's probably XML.</b> I realize that we have to use <i>something</i> to represent reasonably human readable data stored in a text file, but XML sometimes feels an awful lot like using an enormous sledgehammer to drive common household nails.
</p>
<p>
I'm deeply ambivalent about XML. I'm reminded of this Winston Churchill quote:
</p>
<p>
</p>
<blockquote>
It has been said that democracy is the worst form of government except all the others that have been tried.
</blockquote>
<p>
XML is like democracy. Sometimes it even works. On the other hand, it also means we end up with stuff like this:
</p>
<p>
</p>
<pre>
&lt;SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/"
SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"&gt;
&lt;SOAP-ENV:Body&gt;
&lt;m:GetLastTradePrice xmlns:m="Some-URI"&gt;
&lt;symbol&gt;DIS&lt;/symbol&gt;
&lt;/m:GetLastTradePrice&gt;
&lt;/SOAP-ENV:Body&gt;
&lt;/SOAP-ENV:Envelope&gt;
</pre>
<p>
<b>How much actual <i>information</i> is communicated here?</b> Precious little, and it's buried in an astounding amount of noise. I don't mean to pick on <a href="http://en.wikipedia.org/wiki/SOAP">SOAP</a>. This blanket criticism applies to XML, in whatever form it appears. I spend a disproportionate amount of my time wading through an endless sea of angle brackets and verbose tags desperately searching for the vaguest hint of actual information. It feels <i>wrong</i>.
</p>
<p>
You could argue, like <a href="http://en.wikipedia.org/wiki/Derek_Denny-Brown_(software_engineer)">Derek Denny-Brown</a>, that XML has been <a href="http://nothing-more.blogspot.com/2004/10/where-xml-goes-astray.html">misappropriated and misapplied</a>.
</p>
<p>
</p>
<blockquote>
I find it so interesting that XML has become so popular for such things as SOAP. XML was not designed with the SOAP scenarios in mind. Other examples of popular scenarios which deviate XML's original goals are configuration files, quick-n-dirty databases, and [RSS]. I'll call these 'data' scenarios, as opposed to the 'document' scenarios for which XML was originally intended. In fact, I think it is safe to say that there is more usage of XML for 'data' scenarios than for 'document' scenarios, today.
</blockquote>
<p>
Given its prevalence, you might decide that <a href="http://xmlsucks.org/but_you_have_to_use_it_anyway/does-xml-suck.html">XML is technologically terrible, but you have to use it anyway</a>. It sure feels like, for any given representation of data in XML, there was a better, simpler choice out there somewhere. But it wasn't pursued, because, well, XML can represent <i>anything</i>. Right?
</p>
<p>
Consider the following XML fragment:
</p>
<p>
</p>
<pre>
&lt;memo date="2008-02-14"&gt;
&lt;from&gt;
&lt;name&gt;The Whole World&lt;/name&gt;&lt;email&gt;us@world.org&lt;/email&gt;
&lt;/from&gt;
&lt;to&gt;
&lt;name&gt;Dawg&lt;/name&gt;&lt;email&gt;dawg158@aol.com&lt;/email&gt;
&lt;/to&gt;
&lt;message&gt;
Dear sir, you won the internet. http://is.gd/fh0
&lt;/message&gt;
&lt;/memo&gt;
</pre>
<p>
Because XML purports to represent <i>everything</i>, it ends up representing nothing particularly well.
</p>
<p>
Wouldn't this information be easier to read and understand -- and only nominally harder to parse -- when expressed in its native format?
</p>
<p>
</p>
<pre>
Date: Thu, 14 Feb 2008 16:55:03 +0800 (PST)
From: The Whole World &lt;us@world.org&gt;
To: Dawg &lt;dawg158@aol.com&gt;
Dear sir, you won the internet. http://is.gd/fh0
</pre>
<p>
You might argue that <a href="http://www.ibm.com/developerworks/xml/library/x-sbxml.html">XML was never intended to be human readable</a>, that XML should be automagically generated via friendly tools behind the scenes, never exposed to a single living human eye. It's a spectacularly grand vision. I hope one day our great-grandchildren can live in a world like that. Until that glorious day arrives, I'd sure enjoy reading text files that don't make me suffer through the <b>XML angle bracket tax</b>.
</p>
<p>
So what, then, are the alternatives to XML? One popular choice is <a href="http://en.wikipedia.org/wiki/YAML">YAML</a>. I could explain it, but it's easier to show you. Which, I think, is entirely the point.
</p>
<p>
</p>
<table cellpadding="4" cellspacing="4" width="650">
<tr>
<td valign="top">
<pre>
&lt;club&gt;
&lt;players&gt;
&lt;player id="kramnik"
name="Vladimir Kramnik"
rating="2700"
status="GM" /&gt;
&lt;player id="fritz"
name="Deep Fritz"
rating="2700"
status="Computer" /&gt;
&lt;player id="mertz"
name="David Mertz"
rating="1400"
status="Amateur" /&gt;
&lt;/players&gt;
&lt;matches&gt;
&lt;match&gt;
&lt;Date&gt;2002-10-04&lt;/Date&gt;
&lt;White refid="fritz" /&gt;
&lt;Black refid="kramnik" /&gt;
&lt;Result&gt;Draw&lt;/Result&gt;
&lt;/match&gt;
&lt;match&gt;
&lt;Date&gt;2002-10-06&lt;/Date&gt;
&lt;White refid="kramnik" /&gt;
&lt;Black refid="fritz" /&gt;
&lt;Result&gt;White&lt;/Result&gt;
&lt;/match&gt;
&lt;/matches&gt;
&lt;/club&gt;
</pre>
</td>
<td valign="top">
<pre>
players:
Vladimir Kramnik: &amp;kramnik
rating: 2700
status: GM
Deep Fritz: &amp;fritz
rating: 2700
status: Computer
David Mertz: &amp;mertz
rating: 1400
status: Amateur
matches:
-
Date: 2002-10-04
White: *fritz
Black: *kramnik
Result: Draw
-
Date: 2002-10-06
White: *kramnik
Black: *fritz
Result: White
</pre>
</td>
</tr>
</table>
<p>
There's also JSON notation, which some call <a href="http://www.json.org/xml.html">the new, fat-free alternative to XML</a>, though this is still <a href="http://ajaxian.com/archives/json-vs-xml-the-debate">hotly debated</a>.
</p>
<p>
You could do worse than XML. It's a reasonable choice, and if you're going to use XML, then at least <a href="http://www.codinghorror.com/blog/archives/000647.html">learn to use it correctly</a>. But consider:
</p>
<p>
</p>
<ol>
<li>Should XML be the <i>default</i> choice?
</li>
<li>Is XML the simplest possible thing that can work for your intended use?
</li>
<li>Do you <a href="http://web.archive.org/web/20060325012720/www.pault.com/xmlalternatives.html">know what the XML alternatives are</a>?
</li>
<li>Wouldn't it be nice to have easily readable, understandable data and configuration files, without all those sharp, pointy angle brackets <i>jabbing you directly in your ever-lovin' eyeballs?</i>
</li>
</ol>
<p>
I don't necessarily think <a href="http://c2.com/cgi/wiki?XmlSucks">XML sucks</a>, but the mindless, blanket application of XML as <a href="http://snltranscripts.jt.org/75/75ishimmer.phtml">a dessert topping and a floor wax</a> certainly does. Like all tools, it's a question of how you use it. Please think twice before subjecting yourself, your fellow programmers, and your users to <b>the XML angle bracket tax</b>. &lt;CleverEndQuote&gt;Again.&lt;/CleverEndQuote&gt;
</p>
<p>
</p>
<p></p>
<!--kg-card-end: markdown-->
            </content>
<pubDate>2008-05-11T12:00:00.000Z</pubDate>
<guid>https://blog.codinghorror.com/xml-the-angle-bracket-tax/</guid>
</item>
</channel>
</rss>
