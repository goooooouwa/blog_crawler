<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
<channel>
<title>Coding Horror</title>
<description>programming and human factors</description>
<link>https://blog.codinghorror.com/</link>
<pubDate>Sun, 19 Apr 2020 00:00:01 GMT</pubDate>
<!-- other elements omitted from this example -->
<item>
<title>Is Writing More Important Than Programming?</title>
<link>https://blog.codinghorror.com/is-writing-more-important-than-programming/</link>
<content>
                <!--kg-card-begin: markdown--><p>The unofficial wikipedia blog entry <a href="http://wikip.blogspot.com/2005/08/future-of-open-source-5-years-ago.html">The Future of Open Source Five Years Ago</a> makes some fascinating comparisons between the adoption rate of Linux and the adoption rate of Wikipedia.</p>
<blockquote>Server-side Linux is still a powerful force, but what happened to the desktop utopia that was supposed to unseat Windows? And will the same developed-world disenchantment hit Wikipedia as it grows?
<p>While in principle anyone can contribute to an open source project, Linux's barriers to entry are higher than Wikipedia's. Even correcting minor Linux bugs is well beyond my expertise, but my grandmother could edit Wikipedia. All you need is an internet connection and literacy (mid-level literacy, at that; other people will fix your grammar and spelling).</p>
<p><strong>Wikipedia can draw on half a billion potential contributors; only about 100,000 people can code Linux.</strong></p>
<p>It's hard to overstate this difference.</p>
</blockquote>
<p>To illustrate this point, it's accompanied by an amusing graph.</p>
<p><a href="https://blog.codinghorror.com/content/images/uploads/2006/06/6a0120a85dcdae970b0163033e684d970d-pi.png"><img src="https://blog.codinghorror.com/content/images/uploads/2006/06/6a0120a85dcdae970b0163033e684d970d-pi.png" border="0" alt="Wikipedia vs. Linux user base, small version" width="22" height="496"></a></p>
<p>I've resized the graph to a more manageable size. Click through to see it full size. The writing on the bars is hard to make out. On the left, it's..</p>
<p><em>Number of programmers who can contribute to Linux, including minor bugfixes.</em></p>
<p>And on the right?</p>
<p><em>Number of people in the world who speak English well enough to edit Wikipedia and who have access to the internet. (This includes non-native speakers. It omits potential contributors to non English-language wikipedias only because this bar is already absurdly tall. (Okay, and because wikipedias of seperate languages are, to some degree, islands, and don't function as a cohesive whole.))</em></p>
<p>It's probably not fair to compare programming and writing in this manner, but I am reminded again of Joel Spolsky's <a href="http://www.joelonsoftware.com/articles/CollegeAdvice.html">classic advice for computer science college students</a>:</p>
<blockquote>The difference between a tolerable programmer and a great programmer is not how many programming languages they know, and it's not whether they prefer Python or Java. <strong>It's whether they can communicate their ideas.</strong> By persuading other people, they get leverage. By writing clear comments and technical specs, they let other programmers understand their code, which means other programmers can use and work with their code instead of rewriting it. Absent this, their code is worthless. By writing clear technical documentation for end users, they allow people to figure out what their code is supposed to do, which is the only way those users can see the value in their code. There's a lot of wonderful, useful code buried on sourceforge somewhere that nobody uses because it was created by programmers who don't write very well (or don't write at all), and so nobody knows what they've done and their brilliant code languishes.</blockquote>
<p>Programming, like all writing, is just another form of communication. Writing code that the compiler understands is easy. Writing code that <em>other people</em> understand is far more difficult. And that's assuming you're persuasive enough to convince other people that your code, in a world positively overflowing with free code, is <em>worth</em> looking at in the first place.</p>
<p>Good luck. You're gonna need it.</p>
<blockquote>Over the next few years, Wikipedia (and some of its Wikimedia sister sites) will become comparable to Linux in economic and social significance. Maybe Linux will catch up again a few decades later, if schools start teaching as many kids to program as they teach to write.</blockquote>
<p>This quote was originally written in August 2005. I'd argue that Wikipedia was already more significant to the average internet user than Linux at that time. Now there's no question.</p>
<p>Technical programming skills are certainly important. But general writing and communication skills are far, far more important. Even if you're merely a humble programmer.</p>
<!--kg-card-end: markdown-->
            </content>
<pubDate>2006-06-20T12:00:00.000Z</pubDate>
<guid>https://blog.codinghorror.com/is-writing-more-important-than-programming/</guid>
</item>
</channel>
</rss>
