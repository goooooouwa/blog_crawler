<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
<channel>
<title>Coding Horror</title>
<description>programming and human factors</description>
<link>https://blog.codinghorror.com/</link>
<pubDate>Sun, 19 Apr 2020 00:00:01 GMT</pubDate>
<!-- other elements omitted from this example -->
<item>
<title>VNC vs. Remote Desktop</title>
<link>https://blog.codinghorror.com/vnc-vs-remote-desktop/</link>
<content>
                <!--kg-card-begin: markdown--><p>
Microsoft's <a href="http://en.wikipedia.org/wiki/Remote_Desktop_Protocol">Remote Desktop</a> is incredibly convenient. It's the next best thing to physically being in front of the target computer-- and it's by far the fastest remoting protocol I've ever used. Over a fast network, you can <i>almost</i> convince yourself that you're using the local machine. Remote desktop is great stuff, and it's basically free. It does have a few annoying limitations, though:
</p>
<ol>
<li>it insists on treating every remote login as a <b>separate user session</b>. Except in the special case where you log into your own session.
</li>
<li>it <b>can't handle multiple monitors</b> in any way; you'll only see the primary monitor. Fortunately, <a href="http://www.realtimesoft.com/ultramon/">UltraMon</a> has a convenient one-click taskbar enable/disable function for the alternate monitors. It even remembers the position of windows when moving them back.
</li>
<li>in fine Microsoft tradition, <b>it's intentionally crippled</b>. You can only have one active Remote Desktop session under XP, and two sessions under Windows 2003/2000 server. I suppose this is to keep us from setting up our own OS/360 timeshare boxes.
</li>
</ol>
<p>
Point #1 is in stark contrast to "old school" remoting programs such as pcAnywhere and Carbon Copy, which simply <b>displayed whatever happened to be on the client's screen</b>-- sort of like virtual video adapters. Sometimes, this is what you want. And in those situations, <a href="http://www.tightvnc.com/">you want TightVNC</a>. VNC follows the older model of simply showing whatever is on the screen with no forced logins required. Of course, this has security implications; if you remote into a machine that an Administrator is logged into, you'll effectively be an Administrator. And if you're both trying to use the computer at the same time, it's even more fun!
</p>
<p>
VNC has been around for years in various incarnations; what makes TightVNC so useful is that it's free, natch, but more importantly, <b>it implements a video hook driver</b>. One of the long-running historical weaknesses of the VNC protocol was that it didn't interface at the video driver level with Windows; it had to poll for screen changes. This works, and it's a very cross-platform approach, but it's also hellaciously inefficient and highly CPU intensive. Why poll for changes when the video driver can tell you what the changes were? When you <a href="http://www.tightvnc.com/download.html">download TightVNC</a>, be sure to download the "developmental" version (at the time of writing, 1.3d7) and the dfrimage.zip video hook driver.
</p>
<p>
Even with this hook driver, it isn't as fast as Remote Desktop, but it's at least in the ballpark. If you ever used VNC in the past and were disappointed with how slow and CPU intensive it was, you should try again with TightVNC and the video hook driver. There's a world of difference.
</p>
<p>
If you're feeling really adventurous, there's even an <a href="http://dnvnccl.sourceforge.net/">open-source C# VNC client</a>. TightVNC implements a few specially optimized protocols of its own, but it does support the "classic" VNC protocols as well. I was able to remote into a TightVNC server using this C# client.
</p>
<p>
Unfortunately, neither Remote Desktop nor VNC does a good job of handling multiple monitors on the target machine, so that's a wash. You'll get the primary monitor, and you'll like it. There is some support for multimon in the latest versions of pcAnywhere, as <a href="http://www.realtimesoft.com/multimon/reviews/pcanywhere/">this review at RealTimeSoft points out</a>.
</p>
<p>
Note that a few key sequences, such as CTRL+ALT+DEL, can't be intercepted by any remote desktop client, even in fullscreen mode. There's <a href="http://www.microsoft.com/resources/documentation/Windows/XP/all/reskit/en-us/Default.asp?url=/resources/documentation/Windows/XP/all/reskit/en-us/pree_rem_qsva.asp">a handy list of keyboard shortcuts for the Remote Desktop key equivalents</a> in the online XP resource kit.
</p>
<p>
Incidentally, there are <a href="http://www.kvmpartnership.co.uk/eric.htm">hardware-level remote desktop solutions</a> which are capable of remotely displaying BIOS setup screens-- even the <a href="http://www.daimyo.org/bsod/">Blue Screen o' Death</a>! Pretty gnarly stuff.
</p>
<p>
</p>
<p></p>
<!--kg-card-end: markdown-->
            </content>
<pubDate>2005-07-11T12:00:00.000Z</pubDate>
<guid>https://blog.codinghorror.com/vnc-vs-remote-desktop/</guid>
</item>
</channel>
</rss>
