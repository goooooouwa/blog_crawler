<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
<channel>
<title>Coding Horror</title>
<description>programming and human factors</description>
<link>https://blog.codinghorror.com/</link>
<pubDate>Sun, 19 Apr 2020 00:00:01 GMT</pubDate>
<!-- other elements omitted from this example -->
<item>
<title>If You Like Regular Expressions So Much, Why Don't You Marry Them?</title>
<link>https://blog.codinghorror.com/if-you-like-regular-expressions-so-much-why-dont-you-marry-them/</link>
<content>
                <!--kg-card-begin: markdown--><p><a href="http://www.x-entertainment.com/messages/509.html">All right... <em>I will!</em></a></p>
<p>
<video poster="/content/images/uploads/2005/03/6a0120a85dcdae970b0168ea1266b4970c-800wi.jpg" width="100%" preload="none" controls="">
<source src="http://discourse-cdn.codinghorror.com/uploads/default/original/3X/8/2/82bf685b82343bab5631d2f540fd4442dc866adc.mp4">
</source></video>
</p>
<p>I'm continually amazed how useful regular expressions are in my daily coding. I'm still working on the MhtBuilder refactoring, and I needed a function to convert all URLs in a page of HTML from relative to absolute:</p>
<pre>''' &lt;summary&gt;
''' converts all relative url references
'''    href="myfolder/mypage.htm"
''' into absolute url references
'''    href="http://mywebsite/myfolder/mypage.htm"
''' &lt;/summary&gt;
Private Function ConvertRelativeToAbsoluteRefs(ByVal html As String) As String
Dim r As Regex
Dim urlPattern As String = _
"(?&lt;attrib&gt;shref|ssrc|sbackground)s*?=s*?" &amp; _
"(?&lt;delim1&gt;[""']{0,2})(?!#|http|ftp|mailto|javascript)" &amp; _
"/(?&lt;url&gt;[^""'&gt;]+)(?&lt;delim2&gt;[""']{0,2})"
Dim cssPattern As String = _
"@imports+?(url)*['""(]{1,2}" &amp; _
"(?!http)s*/(?&lt;url&gt;[^""')]+)['"")]{1,2}"
'-- href="/anything" to href="http://www.web.com/anything"
r = New Regex(urlPattern, _
RegexOptions.IgnoreCase Or RegexOptions.Multiline)
html = r.Replace(html, "${attrib}=${delim1}" &amp; _HtmlFile.UrlRoot &amp; "/${url}${delim2}")
'-- href="anything" to href="http://www.web.com/folder/anything"
r = New Regex(urlPattern.Replace("/", ""), _
RegexOptions.IgnoreCase Or RegexOptions.Multiline)
html = r.Replace(html, "${attrib}=${delim1}" &amp; _HtmlFile.UrlFolder &amp; "/${url}${delim2}")
'-- @import(/anything) to @import url(http://www.web.com/anything)
r = New Regex(cssPattern, _
RegexOptions.IgnoreCase Or RegexOptions.Multiline)
html = r.Replace(html, "@import url(" &amp; _HtmlFile.UrlRoot &amp; "/${url})")
'-- @import(anything) to @import url(http://www.web.com/folder/anything)
r = New Regex(cssPattern.Replace("/", ""), _
RegexOptions.IgnoreCase Or RegexOptions.Multiline)
html = r.Replace(html, "@import url(" &amp; _HtmlFile.UrlFolder &amp; "/${url})")
Return html
End Function
</pre>
<p>Each regex is repeated because I have to resolve relative URLs starting with forward slashes to the webroot first--and then all remaining relative URLs to the current web folder.</p>
<p>One of the BCL team recently <a href="http://blogs.msdn.com/bclteam/archive/2005/03/15/396450.aspx">recommended pretty-printing regular expressions</a>, eg, using whitespace to make regexes more readable with <strong>RegexOptions.IgnorePatternWhitespace</strong>. I agree completely. We do this all the time with SQL. I can think of a half-dozen tools that will block of SQL and pretty format it-- but I am not aware of any regex tools that offer this functionality. I guess I'll email the author of <a href="http://www.regexbuddy.com/cgi-bin/affref.pl?aff=jatwood">Regexbuddy</a> and see what he has to say.</p>
<p>And here's an interesting bit of trivia: did you know that <a href="http://weblogs.asp.net/cazzu/archive/2005/01/10/RegexParsing.aspx">the ASP.NET page parser uses regular expressions?</a></p>
<!--kg-card-end: markdown-->
            </content>
<pubDate>2005-03-22T12:00:00.000Z</pubDate>
<guid>https://blog.codinghorror.com/if-you-like-regular-expressions-so-much-why-dont-you-marry-them/</guid>
</item>
</channel>
</rss>
