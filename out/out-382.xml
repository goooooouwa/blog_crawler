<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
<channel>
<title>Coding Horror</title>
<description>programming and human factors</description>
<link>https://blog.codinghorror.com/</link>
<pubDate>Sun, 19 Apr 2020 00:00:01 GMT</pubDate>
<!-- other elements omitted from this example -->
<item>
<title>Everything I Needed to Know About Programming I Learned from BASIC</title>
<link>https://blog.codinghorror.com/everything-i-needed-to-know-about-programming-i-learned-from-basic/</link>
<content>
                <!--kg-card-begin: markdown--><p>
<a href="http://en.wikipedia.org/wiki/Edsger_Dijkstra">Edsger Dijkstra </a> had <a href="http://www.cs.virginia.edu/~evans/cs655-S00/readings/ewd498.html">this</a> to say about Beginner's All Purpose Symbolic Instruction Code:
</p>
<blockquote>
It is practically impossible to teach good programming style to students that have had prior exposure to BASIC; as potential programmers they are mentally mutilated beyond hope of regeneration.
</blockquote>
<p>
I'm sure he was exaggerating here for effect; as much as I admire his <a href="http://www.codinghorror.com/blog/archives/000051.html">1972 "The Humble Programmer" paper</a>, it's hard to square that humility with the idea that choosing the wrong programming language will damage the programmer's mind. Although <a href="http://www.codinghorror.com/blog/archives/000686.html">computer languages continue to evolve</a>, the largest hurdle I see isn't any particular choice of language, but the fact that <a href="http://www.codinghorror.com/blog/archives/000272.html">programmers can write FORTRAN in any language</a>. To quote Pogo, we have met the enemy, and <a href="http://upload.wikimedia.org/wikipedia/en/4/49/Pogo_-_Earth_Day_1971_poster.jpg">he is us</a>.
</p>
<p>
Dismissing BASIC does seem rather elitist. Like many programmers of a certain age, <strong>I grew up with BASIC</strong>.
</p>
<p>
I mentioned in <a href="http://www.codinghorror.com/blog/archives/001096.html">an earlier post</a> the curious collision of early console gaming and programming that was the <a href="http://www.atariage.com/software_page.html?SoftwareLabelID=15">Atari 2600 BASIC Programming cartridge</a>. I had to see this for myself, so I bought a copy on eBay.
</p>
<p>
<img class="at-xid-6a0120a85dcdae970b0120a86dddcf970b" src="https://blog.codinghorror.com/content/images/uploads/2008/04/6a0120a85dcdae970b0120a86dddcf970b-pi.jpg" border="0" alt="Atari 2600 basic programming cartridge" width="490" height="367">
</p>
<p>
I also bought a set of the Atari 2600 <a href="http://www.atariage.com/controller_page.html?SystemID=2600&amp;ControllerID=4">keypad controllers</a>. The overlays come with the cartridge, and the controllers mate together to make a primitive sort of keyboard. (Also, if you were wondering what kinds of things I do with my ad revenue, buying crap like this is a big part of it, sadly.)
</p>
<p>
<img class="at-xid-6a0120a85dcdae970b0120a86dde02970b" src="https://blog.codinghorror.com/content/images/uploads/2008/04/6a0120a85dcdae970b0120a86dde02970b-pi.jpg" border="0" alt="Atari 2600 BASIC programming keypads" width="600" height="498">
</p>
<p>
Surprisingly, the manual isn't available anywhere online, so <a href="http://www.flickr.com/photos/25885309@N02/sets/72157604661612578/">I scanned it in myself</a>. Take a look. It's <em>hilarious</em>. There is a <a href="http://www.atariage.com/manual_html_page.html?SoftwareLabelID=15">transcribed HTML version of the manual</a>, but it's much less fun to read without the pictures and diagrams.
</p>
<p>
I booted up a copy of the <a href="http://www.atariage.com/2600/roms/BasicProgramming.zip">Basic Programming ROM</a> in the <a href="http://stella.sourceforge.net/">Stella Atari 2600 emulator</a>, then followed along with the manual and wrote a little BASIC program.
</p>
<p>
<img class="at-xid-6a0120a85dcdae970b0120a86dde2c970b" src="https://blog.codinghorror.com/content/images/uploads/2008/04/6a0120a85dcdae970b0120a86dde2c970b-pi.png" border="0" alt="Atari 2600 BASIC Programming Screenshot" width="640" height="420">
</p>
<p>
You'll notice that all the other screenshots of Atari 2600 Basic Programming on the web are essentially blank. That's probably because <strong>I'm the only person crazy enough to actually try <em>programming</em> in this thing</strong>. It may look painful, but you have no idea until you've tried to work with this funky "IDE". It's hilariously bad. I could barely stop laughing while punching away at my virtual keypads. But I have to confess, after writing my first "program", I got that same visceral little thrill of bending the machine to my will that I've always gotten.
</p>
<p>
The package I got from eBay included a few hand-written programming notes that I assume are from the 1980s.
</p>
<p>
<img class="at-xid-6a0120a85dcdae970b0120a86dde59970b" src="https://blog.codinghorror.com/content/images/uploads/2008/04/6a0120a85dcdae970b0120a86dde59970b-pi.jpg" border="0" alt="Atari 2600 sample code" width="641" height="324">
</p>
<p>
Isn't that what BASIC – even this horribly crippled, elephant man Atari 2600 version of BASIC – is all about? Discovering fundamental programming concepts?
</p>
<p>
Of course, if you were at all interested in computers, you wouldn't bother programming on a dinky Atari 2600. There were much better options for gaming <em>and</em> programming in the form of home computers. And for the longest time, <strong>every home computer you could buy had BASIC burned into the ROM.</strong> Whether it was the Apple //, Commodore 64, or the Atari 800, you'd boot up to be greeted by a BASIC prompt. It became the native language of the hobbyist programmer.
</p>
<p>
<img class="at-xid-6a0120a85dcdae970b0120a86dde85970b" src="https://blog.codinghorror.com/content/images/uploads/2008/04/6a0120a85dcdae970b0120a86dde85970b-pi.png" border="0" alt="basic on the Apple // series" width="562" height="127">
</p>
<p>
<img class="at-xid-6a0120a85dcdae970b0120a86ddeb7970b" src="https://blog.codinghorror.com/content/images/uploads/2008/04/6a0120a85dcdae970b0120a86ddeb7970b-pi.png" border="0" alt="basic on the Atari 8-bit series" width="640" height="105">
</p>
<p>
<img src="https://blog.codinghorror.com/content/images/uploads/2008/04/6a0120a85dcdae970b017c38018624970b-pi.png" border="0" alt="basic on the Commodore 64" width="640" height="80">
</p>
<p>
Even the IBM PC had <a href="http://en.wikipedia.org/wiki/BASICA">BASICA</a>, <a href="http://en.wikipedia.org/wiki/Microsoft_GW-BASIC_interpreter">GW-BASIC</a> and finally <a href="http://en.wikipedia.org/wiki/QBasic">QBasic</a>, which was phased out with Windows 2000.
</p>
<p>
It's true that if you wanted to do anything remotely cutting-edge with those old 8-bit Apple, Commodore and Atari home computers, you had to pretty much learn assembly language. I don't recall any compiled languages on the scene until the IBM PC and DOS era, primarily <a href="http://en.wikipedia.org/wiki/Turbo_Pascal">Turbo Pascal</a>. Compiled languages were esoteric and expensive until the great democratization of Turbo Pascal at its low, low price point of $49.99.*
</p>
<p>
Even if you lacked the programming skills to become the next <a href="http://en.wikipedia.org/wiki/David_Crane_(programmer)">David Crane</a> or <a href="http://en.wikipedia.org/wiki/Will_Wright_(game_designer)">Will Wright</a>, there were still a lot of interesting games and programs you could still write in good old BASIC. Certainly more than enough to figure out if you enjoyed programming, and if you had any talent. The <a href="http://www.codinghorror.com/blog/archives/000414.html">Creative Computing compilations</a> were like programming bibles to us.
</p>
<p>
<a href="http://www.atariarchives.org/basicgames/"><img class="at-xid-6a0120a85dcdae970b0120a86ddeee970b" src="https://blog.codinghorror.com/content/images/uploads/2008/04/6a0120a85dcdae970b0120a86ddeee970b-pi.png" border="0" alt="BASIC Computer Games" width="364" height="483"></a> <a href="http://www.atariarchives.org/morebasicgames/"><img class="at-xid-6a0120a85dcdae970b0120a86ddf1c970b" src="https://blog.codinghorror.com/content/images/uploads/2008/04/6a0120a85dcdae970b0120a86ddf1c970b-pi.png" border="0" alt="More BASIC Computer Games" width="359" height="485"></a>
</p>
<p>
For a long, long time, <strong>if you were interested in computers at all, you programmed in BASIC.</strong> It was as unavoidable and inevitable as the air you breathed. Every time you booted up, there was that command prompt blinking away at you. Why <em>not </em> type in some BASIC commands and see what happens? And then the sense of wonder, of possibility, of being able to unlock the infinitely malleable universe inside your computer. Thus the careers of millions of programmers were launched.
</p>
<p>
BASIC didn't mutilate the mind, as Dijkstra claimed. If anything, BASIC opened the minds of millions of young programmers. It was perhaps the earliest test to determine whether you were <a href="http://www.codinghorror.com/blog/archives/000635.html">a programming sheep or a non-programming goat</a>. Not all will be good, of course, but some inevitably <a href="http://jamesshore.com/Articles/Quality-With-a-Name.html">will go on to be great</a>.
</p>
<p>
Whether we're still programming in it or not, <strong>the spirit of BASIC lives on in all of us.</strong>
</p>
<p>
* as an aside, you may notice that <a href="http://en.wikipedia.org/wiki/Anders_Hejlsberg">Anders Hejlsberg</a> was the primary author of Turbo Pascal and later Delphi; he's now a <a href="http://www.microsoft.com/presspass/exec/techfellow/Hejlsberg/default.mspx">Technical Fellow at Microsoft</a> and the chief designer of the C# language. That's a big reason why so many longtime geeks, such as myself, are so gung-ho about .NET.
</p>
<!--kg-card-end: markdown-->
            </content>
<pubDate>2008-04-21T12:00:00.000Z</pubDate>
<guid>https://blog.codinghorror.com/everything-i-needed-to-know-about-programming-i-learned-from-basic/</guid>
</item>
</channel>
</rss>
