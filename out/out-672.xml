<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
<channel>
<title>Coding Horror</title>
<description>programming and human factors</description>
<link>https://blog.codinghorror.com/</link>
<pubDate>Sun, 19 Apr 2020 00:00:01 GMT</pubDate>
<!-- other elements omitted from this example -->
<item>
<title>Boyd's Law of Iteration</title>
<link>https://blog.codinghorror.com/boyds-law-of-iteration/</link>
<content>
                <!--kg-card-begin: markdown--><p><a href="http://blogs.vertigosoftware.com/scott/default.aspx">Scott Stanfield</a> forwarded me a link to Roger Sessions' <a href="http://msdn2.microsoft.com/en-us/library/aa479371.aspx">A Better Path to Enterprise Architecture</a> yesterday. Even though it's got <a href="http://www.codinghorror.com/blog/archives/000227.html">the snake-oil word "Enterprise"</a> in the title, the article is surprisingly good.</p>
<p>I particularly liked the unusual analogy Roger chose to illustrate the difference between iterative and recursive approaches to software development. It starts with Air Force <a href="http://en.wikipedia.org/wiki/John_Boyd_(military_strategist)">Colonel John Boyd</a> researching a peculiar anomaly in the performance of 1950's era jet fighters:</p>
<blockquote>
<p>Colonel John Boyd was interested not just in any dogfights, but specifically in dogfights between <a href="http://en.wikipedia.org/wiki/Mikoyan-Gurevich_MiG-15">MiG-15s</a> and <a href="http://en.wikipedia.org/wiki/F-86_Sabre">F-86s</a>. As an ex-pilot and accomplished aircraft designer, Boyd knew both planes very well. He knew the MiG-15 was a better aircraft than the F-86. The MiG-15 could climb faster than the F-86. The MiG-15 could turn faster than the F-86. The MiG-15 had better distance visibility.</p>
<p>The F-86 had two points in its favor. First, it had better side visibility. While the MiG-15 pilot could see further in front, the F-86 pilot could see slightly more on the sides. Second, the F-86 had a hydraulic flight control. The MiG-15 had a manual flight control.</p>
<p>The standing assumption on the part of airline designers was that maneuverability was the key component of winning dogfights. Clearly, the MiG-15, with its faster turning and climbing ability, could outmaneuver the F-86.</p>
<p>There was just one problem with all this. Even though the MiG-15 was considered a superior aircraft by aircraft designers, the F-86 was favored by pilots. The reason it was favored was simple: in one-on-one dogfights with MiG-15s, the F-86 won nine times out of ten.</p>
</blockquote>
<p>How can an inferior aircraft consistently win over a superior aircraft? Boyd, who was himself one of the best dogfighters in history, had a theory:</p>
<blockquote>
<p>Boyd decided that the primary determinant to winning dogfights was not observing, orienting, planning, or acting better. The primary determinant to winning dogfights was observing, orienting, planning, and acting <i>faster</i>. In other words, how quickly one could iterate. <i>Speed of iteration</i>, Boyd suggested, <i>beats quality of iteration</i>.</p>
<p>The next question Boyd asked is this: why would the F-86 iterate faster? The reason, he concluded, was something that nobody had thought was particularly important. It was the fact that the F-86 had a hydraulic flight stick whereas the MiG-15 had a manual flight stick.</p>
<img alt="jet cockpit" border="0" class="at-xid-6a0120a85dcdae970b0120a86d7cd0970b" height="382" src="https://blog.codinghorror.com/content/images/uploads/2007/02/6a0120a85dcdae970b0120a86d7cd0970b-pi.jpg" width="372">
<p>Without hydraulics, it took slightly more physical energy to move the MiG-15 flight stick than it did the F-85 flight stick. Even though the MiG-15 would turn faster (or climb higher) once the stick was moved, the amount of energy it took to move the stick was greater for the MiG-15 pilot.</p>
<p>With each iteration, the MiG-15 pilot grew a little more fatigued than the F-86 pilot. And as he gets more fatigued, it took just a little bit longer to complete his OOPA loop. The MiG-15 pilot didn't lose because he got outfought. He lost because he got out-OOPAed.</p>
</blockquote>
<p>This leads to <b>Boyd's Law of Iteration: speed of iteration beats quality of iteration.</b></p>
<p>You'll find this same theme echoed throughout every discipline of modern software engineering:</p>
<ul>
<li>Unit tests should be <a href="http://www.artima.com/weblogs/viewpost.jsp?thread=126923">small and fast</a>, so you can run them with every build.</li>
<li>Usability tests work best if you <a href="http://www.uie.com/articles/fast_iterations/">make small changes every two weeks and quickly discard what isn't working</a>.</li>
<li>Most agile approaches recommend iterations <a href="http://www.mountaingoatsoftware.com/article/view/30">no longer than 4 weeks</a>.</li>
<li>Software testing is about <a href="http://blogs.msdn.com/micahel/archive/2005/08/17/FailFast.aspx">failing early and often</a>.</li>
<li>Functional specifications are best when they're <a href="http://www.codinghorror.com/blog/archives/000448.html">concise and evolving</a>.</li>
</ul>
<p>When in doubt, <i>iterate faster</i>.</p>
<!--kg-card-end: markdown-->
            </content>
<pubDate>2007-02-07T12:00:00.000Z</pubDate>
<guid>https://blog.codinghorror.com/boyds-law-of-iteration/</guid>
</item>
</channel>
</rss>
