<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
<channel>
<title>Coding Horror</title>
<description>programming and human factors</description>
<link>https://blog.codinghorror.com/</link>
<pubDate>Sun, 19 Apr 2020 00:00:01 GMT</pubDate>
<!-- other elements omitted from this example -->
<item>
<title>Filesystem Metadata Doesn't Scale</title>
<link>https://blog.codinghorror.com/filesystem-metadata-doesnt-scale/</link>
<content>
                <!--kg-card-begin: markdown--><p>
Although I always use <a href="http://en.wikipedia.org/wiki/CDDB">CDDB metadata</a> in my self-ripped MP3 files, <b>the quality of the <a href="http://en.wikipedia.org/wiki/ID3">ID3 tags</a> in my MP3 files lags far behind the quality of the file and folder names</b>.
</p>
<p>
File and folder naming is immediately visible and easy to change.
</p>
<p>
</p>
<pre>
C:MusicBeatlesThe White AlbumDisc 1ï¿½1 - Back in the USSR.mp3
</pre>
<p>
Metadata tucked away inside a binary file.. isn't.
</p>
<p>
<img alt="Windows XP mp3 file properties dialog, summary tag, advanced button" border="0" class="at-xid-6a0120a85dcdae970b0120a86d71f4970b" height="502" src="https://blog.codinghorror.com/content/images/uploads/2006/08/6a0120a85dcdae970b0120a86d71f4970b-pi.png" width="367">
</p>
<p>
But Windows Media Player doesn't care a whit about my painstakingly constructed file names and folder trees. It ignores them completely in favor of the metadata <i>inside</i> the MP3 file to categorize music in its "media library". I've never used iTunes, but from what I've read, I understand it works the same way. To ignore obvious, simple external filesystem metadata in favor of complex internal ID3 metadata is doing a disservice to the user. But that's exactly how most media applications work!
</p>
<p>
It's also a case study in <b>the difference between text and binary files</b>. In the Googleland of web pages, everything is text, and therefore it's possible for everything to be self-describing and self-indexing. That's why <a href="http://www.codinghorror.com/blog/archives/000455.html">Google ignores metadata on the web</a>. Text files don't need metadata. Or even a filename. The words inside the text file describe it better than any human generally will. Human metadata is highly suspect; people <a href="http://www.well.com/~doctorow/metacrap.htm">aren't capable of creating objective metadata for their own content</a>. Plus, there's money to be made, and a dozen other reasons <a href="http://www.codinghorror.com/blog/archives/000455.html">the &lt;meta&gt; tag is all but irrelevant these days</a>.
</p>
<p>
In the world of binary data-- music, pictures, and video-- there's no text inside the file to work with. <b>For binary files, metadata isn't an optional nice to have. It's <i>required</i>.</b> For example, when you <a href="http://images.google.com/images?q=wozniak">perform a Google image search on "Wozniak"</a>, you're really searching the image <i>metadata</i>. If you get results, it's because..
</p>
<p>
</p>
<ul>
<li>Some text near the image contains the word "wozniak"
</li>
<li>The alt tag for the image contains "wozniak"
</li>
<li>The filename for the image contains "wozniak"
</li>
</ul>
<p>
Given how little metadata the image search has to work with, it's amazing that it works as well as it does..
</p>
<p>
<img alt="Steve Wozniak and David Lee Roth" border="0" class="at-xid-6a0120a85dcdae970b0120a86d71fa970b" height="300" src="https://blog.codinghorror.com/content/images/uploads/2006/08/6a0120a85dcdae970b0120a86d71fa970b-pi.jpg" width="448">
</p>
<p>
.. but it still doesn't work very well. <b>You just can't search binary content properly without structured metadata.</b>
</p>
<p>
And <i>that's</i> why iTunes and Windows Media Player are so insistent about using the ID3 tags inside the MP3 files. Folders and filenames get awkward quickly. Everyone has a different organization method. One folder per Genre? Folders A-Z? One folder per Artist? Dashes, underscores, or semicolons for delimiters? Should filenames contain the information, or just the folders? Should the artist or the album come first? <b>The larger your music library grows, the more unwieldy it is to organize using folders and filenames.</b>
</p>
<p>
ID3 tags are more work, but they're far more effective. If you have proper ID3 tags, you can synthesize any file and folder structure you want. And searching your music collection is easy and fast, too.
</p>
<p>
That's why I've decided to buckle down and standardize all the ID3 tags in my MP3 collection. It's giant-- currently 10,970 songs and 733 albums in 48.9 gigabytes. I'm maniacal about <a href="http://www.codinghorror.com/blog/archives/000470.html">ripping my own MP3 files with VBR encoding</a> using Audiograbber and LAME. Proper ID3 tagging and album art also means my library will (finally) show up nicely in the music browser for my always-on, low-power optimized <a href="http://www.codinghorror.com/blog/archives/000221.html">home theater PC</a> running Windows Media Center.
</p>
<p>
<a href="http://www.microsoft.com/windowsxp/mediacenter/default.mspx"><img alt="Windows Media Center, My Music" border="0" class="at-xid-6a0120a85dcdae970b0120a86d71fe970b" height="300" src="https://blog.codinghorror.com/content/images/uploads/2006/08/6a0120a85dcdae970b0120a86d71fe970b-pi.jpg" width="400"></a>
</p>
<p>
<a href="http://www.newegg.com/Product/ProductList.asp?N=2010150014+103530113&amp;Submit=ENE&amp;SubCategory=14">Large hard drives</a> have come down a lot in price, so it's now feasible to consolidate all my media storage on the HTPC with a single quiet 500gb data drive.
</p>
<p>
With this many songs to organize, going into a properties dialog for each file is clearly out of the question. The two ID3 tag organizing utilities I saw recommended most were <a href="http://www.softpointer.com/tr.htm">Tag &amp; Rename</a> and <a href="http://www.mediamonkey.com/product.htm">MediaMonkey</a>. I didn't get around to trying Tag &amp; Rename, because I was blown away by <b>how amazingly great MediaMonkey is.</b> I can't recommend it strongly enough. The free version includes all the essential ID3 tag maintenance functions you'd ever need:
</p>
<p>
</p>
<ul>
<li>An easy way to grab all album information from Amazon, including cover art, track details, year, and artist information.
</li>
<li>Flexible translation back and forth between filesystem metadata and ID3 metadata, with a real time "as you type" preview of what will happen. This is a killer feature!
</li>
<li>Visualize your library by folder or metadata to quickly find errors, typos, and miscategorizations. Then drag and drop to fix them.
</li>
<li>Built-in tools to fix common stuff like Title/Artist reversal (depressingly common), casing problems, duplicate content, etcetera.
</li>
<li>Designed for large music libraries. It's super fast at writing tags. It also queues updates intelligently; I did complete updates of 10,000+ tags several times.
</li>
</ul>
<p>
It's an incredibly well-written app. It does <i>everything</i> right, including little stuff like automatic population of autocomplete drop-downs for every ID3 field based on your existing library. However, I do recommend switching to ASCII tags; it defaults to Unicode by default, which most people won't need, and this doubles the size of the tags.
</p>
<p>
Even with a great tool, fixing this much metadata was an incredibly tedious and thankless task. I don't even want to think about how much time I've spent on this. There's <a href="http://www.jonathansblog.net/gracenote_cddb">a lot of human error enshrined in the CDDB data</a>:
</p>
<ul>
<li>Track and Title reversed
</li>
<li>Spelling errors
</li>
<li>Grammar errors
</li>
<li>Casing problems; all lower case is common
</li>
<li>Missing important tags
</li>
</ul>
<p>
Very few things in CDDB are totally wrong, however. If Wikipedia can work, so can CDDB (or <a href="http://en.wikipedia.org/wiki/CDDB#Alternatives">something like it</a>). It's a question of making the editing process as easy and obvious as possible, so these minor mistakes get fixed over time.
</p>
<p>
Beyond minor mistakes, <b>metadata is a vast, grey wasteland of indeterminisms.</b> Which of these is correct?
</p>
<p>
</p>
<ul>
<li>"Eno, Brian" or "Brian Eno"?
</li>
<li>"Cardigans" or "The Cardigans"?
</li>
<li>"Earth Wind &amp; Fire", or "Earth, Wind &amp; File", or "Earth, Wind and Fire"?
</li>
<li>"Rock" or "Pop"?
</li>
<li>Does the Year field mean year of original song release or year of album release?
</li>
</ul>
<p>
The correct answer is "all of the above". And then some.
</p>
<p>
Although I've been generally happy with the results of the ID3 tagging, there is one notable piece of ID3 metadata missing. I own lots of multi-disc sets. Unfortunately, <b>there's no ID3 tag for disc number</b>, eg, "Disc 3 of 12". I can't find any ID3 tag (at least, none that are visible in MediaMonkey) that looks appropriate. So I end up tacking the disc number on to the album title, which seems a little hokey. *
</p>
<p>
I suppose the true lesson here is that <b>I should have been more diligent about editing metadata at the time I ripped the albums instead of deferring all the work until now.</b> Trying to infer metadata through the filesystem seems like a workable solution, but it isn't. Filesystem metadata just doesn't scale.
</p>
<p>
* Update: this is the TPOS tag, and it's exposed in the UI for iTunes and Tag &amp; Rename. It does not appear anywhere in MediaMonkey, which is an odd oversight.
</p>
<p>
</p>
<p></p>
<!--kg-card-end: markdown-->
            </content>
<pubDate>2006-08-06T12:00:00.000Z</pubDate>
<guid>https://blog.codinghorror.com/filesystem-metadata-doesnt-scale/</guid>
</item>
</channel>
</rss>
