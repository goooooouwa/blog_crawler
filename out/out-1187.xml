<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
<channel>
<title>Coding Horror</title>
<description>programming and human factors</description>
<link>https://blog.codinghorror.com/</link>
<pubDate>Sun, 19 Apr 2020 00:00:01 GMT</pubDate>
<!-- other elements omitted from this example -->
<item>
<title>Searching all Craigslist.org Cities</title>
<link>https://blog.codinghorror.com/searching-all-craigslistorg-cities/</link>
<content>
                <!--kg-card-begin: markdown--><p>
If you've ever used <a href="http://www.craigslist.org/about/">Craigslist.org</a>-- a fantastic and rather odd resource-- you may have noticed that it's heavily biased towards per-city searches. This is a pain if you want to do a national search across all cities that Craigslist.org operates sites for. A while back, I found <a href="http://www.clsearch.org/">a web page offering an all-city search</a>, but I wasn't happy with the performance. And now it's been perma-banned by the Craigslist.org brass, so.. time to roll up my sleeves and implement <a href="http://www.codinghorror.com/craigslist/">my own improved Craigslist.org "all cities" jobs search</a>.
</p>
<p>
<a href="http://www.codinghorror.com/craigslist/">My search</a> is dramatically faster than <a href="http://www.chovy.com/">Chovy's</a>, because I use HTTP compressed queries and progressive <code>Response.Write</code> and <code>Response.Flush</code> output rendering as the queries are returned. This is one of my major beefs with ASP.NET; <b>there's no way to do any kind of progressive page rendering using the ASP.NET architecture</b>. (And no, iframes do not count.) The entire page renders to a buffer, then-- and <i>only</i> then-- it is all displayed at once. Not exactly an ideal web experience if you're building large pages.
</p>
<p>
Progressive output is particularly critical for a long-running web page process like this one. Otherwise you'd be sitting there looking at a whole lot of nothing until all ~30 cities were queried. Technically it takes the same amount of time, but <b>there's a huge psychological difference between seeing immediate, if partial, results, and waiting the same amount of time looking at a blank screen.</b> I always try my best to design for progressive rendering, <a href="http://www.codinghorror.com/blog/archives/000177.html">even in Windows Forms</a>.
</p>
<p>
Interestingly, I had to disable IIS6 dynamic compression to get <code>Response.Flush</code> to behave as expected. The good news is that disabling IIS6 compression <a href="http://www.windowsforms.net/Forums/ShowPost.aspx?tabIndex=1&amp;tabId=41&amp;PostID=14142">can be done on a per-website per-folder basis</a>:
</p>
<blockquote>
<i>
I used the following commands from the InetpubAdminScripts directory:
</i><p>
cscript adsutil.vbs set w3svc/{site#}/root/{vdir name}/DoStaticCompression False<br>
cscript adsutil.vbs set w3svc/{site#}/root/{vdir name}/DoDynamicCompression False<br>
</p>
<p>
To get the {site#}, click on the "Web Sites" node in the IIS manager and note the "Identifier" number in the right-hand Detail pane for the top-level website that contains the NTD application.
</p>
</blockquote>
<p>
My favorite Craigslist posting, by the way, is <a href="http://filtersweep.shackspace.com/58988662.html">this one</a>.
</p>
<p>
</p>
<p></p>
<!--kg-card-end: markdown-->
            </content>
<pubDate>2005-03-31T11:00:00.000Z</pubDate>
<guid>https://blog.codinghorror.com/searching-all-craigslistorg-cities/</guid>
</item>
</channel>
</rss>
