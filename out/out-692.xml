<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
<channel>
<title>Coding Horror</title>
<description>programming and human factors</description>
<link>https://blog.codinghorror.com/</link>
<pubDate>Sun, 19 Apr 2020 00:00:01 GMT</pubDate>
<!-- other elements omitted from this example -->
<item>
<title>The Power of Defaults</title>
<link>https://blog.codinghorror.com/the-power-of-defaults/</link>
<content>
                <!--kg-card-begin: markdown--><p>
In <a href="http://www.codinghorror.com/blog/archives/000766.html">Typing Trumps Pointing</a>, I extolled the virtues of the full-text search included in Vista's new Start Menu. As many commenters pointed out, the feature itself is nothing new:
</p>
<p>
</p>
<blockquote>
I love keyboard searching, but basically you say you are installing Vista, an entire operating system, just so you don't have to install <a href="http://colibri.leetspeak.org/">Colibri</a>, <a href="http://www.bayden.com/SlickRun/">SlickRun</a>, <a href="http://www.launchy.net/">Launchy</a>, or one of the <a href="http://www.hanselman.com/blog/ReplacingStartRunTheQuestContinues.aspx">many other similar and fully functional tools</a> that give similar results for 10% cost and 1% hassle.
</blockquote>
<p>
It's true. There are dozens of third-party solutions that deliver very similar interactive full-text search UI experiences. But there's one key difference between those solutions and the one in Vista: <b>I have to install them</b>. You may argue that, in the near term, I also have to install Vista. Fair enough. But over the next five years, <i>millions</i> of users will buy computers with Vista pre-installed. And they'll immediately benefit from the built-in, default full-text search UI that's accessible right out of the box with a single press of the Windows key.
</p>
<p>
There's nothing to install. There's nothing to configure. <i>It just works</i>.
</p>
<p>
That's the power of defaults.
</p>
<p>
<b>Defaults are arguably the most important design decisions you'll ever make as a software developer.</b> Choose good defaults, and users will sing the praises of your software and how easy it is to use. Choose poor defaults, and you'll face down user angst over configuration, and probably a host of tech support calls as well.
</p>
<p>
Furthermore, once a default becomes a well-accepted standard, it's an expectation. Other vendors will be peer pressured into at least matching that default. And to truly succeed, they'll have to come up with an even <i>better</i> default. <b>Defaults are how the software industry evolves.</b> It also highlights a problem with the Linux and Unix models; because they're infinitely configurable, it's impossible to tell what you're comparing the next version of the software with. There's no baseline, no standard, only <a href="http://www.codinghorror.com/blog/archives/000382.html">the giant cop-out of endless user configuration</a>.
</p>
<p>
Defaults aren't just important to software developers; they're incredibly important to UI designers, too.  Jakob Nielsen <a href="http://www.useit.com/alertbox/defaults.html%0A">elaborates</a>:
</p>
<p>
</p>
<blockquote>
Users rely on defaults in many other areas of user interface design. For example, they rarely utilize fancy <a href="http://www.useit.com/alertbox/981004.html">customization features</a>, making it important to optimize the default user experience, since that's what most users stick to.
<p>
In forms and applications, pre-populate fields with the most common value if you can determine it in advance. For example, on the registration form for my usability conference, if people register for an event in Boston, the country field will say "United States" by default, but if they register for London, it will say "United Kingdom." Obviously, many people come from other countries, and they'll have to change this entry to specify their own country -- but they'd have to specify it anyway if we'd left it blank. By choosing the most common country as the default, we save many users that bit of work.
</p>
<p>
Defaults make two essential contributions to usability:
</p>
<p>
</p>
<ul>
<li>By showing a representative value, they serve as just-in-time instructions to help users understand how to complete a field.
</li>
<li>By showing a frequent value, they help users understand the commonly expected response, as opposed to more atypical ones. You can use this knowledge for sales purposes -- for example, by pre-selecting the one-year option in a subscription interface that also offers monthly payments. But, if you consistently pick the most expensive option as the default, you'll lose credibility, so don't overdo it.
</li>
</ul>
<p>
By educating and guiding users, default values help reduce errors. It's therefore important to select helpful defaults, rather than those based on the first letter of the alphabet or whatever the first option on your original list happened to be.
</p>
</blockquote>
<p>
Defaults can also affect your company's bottom line. That's why Google, Microsoft, and Yahoo are willing to pay <a href="http://news.com.com/2100-1032_3-6077051.html">millions of dollars</a> to influence the defaults on a user's desktop.
</p>
<p>
For most users, <b>the default value is the only value</b>. Your choice of default values will have a profound impact on how your application is used. You should agonize over every default in your software. If you aren't, you're doing the user, and yourself, a disservice.
</p>
<p>
</p>
<p></p>
<!--kg-card-end: markdown-->
            </content>
<pubDate>2007-01-10T12:00:00.000Z</pubDate>
<guid>https://blog.codinghorror.com/the-power-of-defaults/</guid>
</item>
</channel>
</rss>
