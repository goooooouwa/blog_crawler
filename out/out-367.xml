<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
<channel>
<title>Coding Horror</title>
<description>programming and human factors</description>
<link>https://blog.codinghorror.com/</link>
<pubDate>Sun, 19 Apr 2020 00:00:01 GMT</pubDate>
<!-- other elements omitted from this example -->
<item>
<title>Twitter: How Not To Crash Responsibly</title>
<link>https://blog.codinghorror.com/twitter-how-not-to-crash-responsibly/</link>
<content>
                <!--kg-card-begin: markdown--><p>
In yesterday's post on <a href="http://www.codinghorror.com/blog/archives/001118.html">Crashing Responsibly</a>, I outlined a few ways to improve your application's crash behavior. In the event that your application crashes -- and oh, it will -- why not turn that crash into something that:
</p>
<p>
</p>
<ul>
<li>Records lots of diagnostic information <b>developers</b> can use to improve the application over time.
</li>
<li>Reassures <b>users</b> and provides them with helpful information.
</li>
</ul>
<p>
With that in mind, let's take a look at the <a href="http://twitter.com/">Twitter</a> crash page. How does it serve developers and users?
</p>
<p>
<img alt="Twitter: Something is Technically Wrong" border="0" class="at-xid-6a0120a85dcdae970b0120a86dd849970b" height="512" src="https://blog.codinghorror.com/content/images/uploads/2008/05/6a0120a85dcdae970b0120a86dd849970b-pi.png" width="600">
</p>
<p>
I don't mean to pick on Twitter; their bouts of downtime are near legendary at this point. Frankly, it's been <a href="http://www.codinghorror.com/blog/archives/000838.html">discussed to death</a>.
</p>
<p>
It's unfortunate, because I love Twitter. Like Michael Lopp, I'm <a href="http://www.randsinrepose.com/archives/2008/05/15/we_travel_in_tribes.html">dangerously close to being a Twitter fanboy</a>.
</p>
<p>
</p>
<blockquote>
The answer comes down to value. In the time that I've been using Twitter, it's transformed from a curiosity to an essential service. What were seemingly random status updates have now become organized into organic conversational threads that bring a steady flow of relevant content across my desktop.
</blockquote>
<p>
An "essential service" is exactly the kind of thing you <i>don't</i> want to see error pages on. So, then, how does the Twitter error page fare?
</p>
<p>
Not so badly at first glance. It's an attractive error page, styled to match Twitter, with some basic links and navigational elements. Let's be generous and assume that the notification and logging of errors behind the scenes is taken care of. The Twitter developers must have access to a voluminous set of error logs by now.
</p>
<p>
But Twitter's error page is <b>conspicuously lacking any real <i>information</i></b>. As an enthusiastic Twitter user presented with this error page, I am anything but reassured. Instead, I have some nagging questions:
</p>
<p>
</p>
<ul>
<li>Is this an ephemeral, temporary error or some kind of scheduled downtime? How do I tell the difference?
</li>
<li>If this is scheduled downtime, when will it be over? Can I view the maintenance schedule, or the current status of the maintenance work?
</li>
<li>Is Twitter <a href="http://downforeveryoneorjustme.com/">down for everyone, or just me</a>? Is there a place I can go to check Twitter's current system health?
</li>
<li>Twitter has a reputation for unreliability. Where can I find out about Twitter's ongoing efforts to improve their reliability?
</li>
</ul>
<p>
There's absolutely no mention of <i>any</i> of these things on the error page, the exact place I would care the most. Clicking through to the blog provides no relief, no mention of any availability work or maintenance schedules.
</p>
<p>
Furthermore, it's difficult to take the glib claim that "we're going to fix it up and have things back to normal soon" seriously. I've seen so much of the Twitter error page in the last year that I've lost confidence that these errors mean anything to anyone -- or that they're even recorded. This is the static error page that <a href="http://en.wikipedia.org/wiki/The_Boy_Who_Cried_Wolf">cried wolf</a>. Where's the improvement over time from the collection and analysis of these errors?
</p>
<p>
I understand that Twitter has scaling problems I can only dream of. I don't envy the amount of work they'll have to undertake to fix this pernicious, systemic problem of massive scale.
</p>
<p>
But <b>I sure wish they could be a lot more transparent about it</b>.
</p>
<p>
Isn't that what <a href="http://www.codinghorror.com/blog/archives/001118.html">crashing responsibly</a> is all about -- establishing an honest, open dialog between users and developers, even at the worst possible moment of that relationship?
</p>
<p>
</p>
<p></p>
<!--kg-card-end: markdown-->
            </content>
<pubDate>2008-05-19T12:00:00.000Z</pubDate>
<guid>https://blog.codinghorror.com/twitter-how-not-to-crash-responsibly/</guid>
</item>
</channel>
</rss>
