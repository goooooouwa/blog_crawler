<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
<channel>
<title>Coding Horror</title>
<description>programming and human factors</description>
<link>https://blog.codinghorror.com/</link>
<pubDate>Sun, 19 Apr 2020 00:00:01 GMT</pubDate>
<!-- other elements omitted from this example -->
<item>
<title>Low-Fi Usability Testing</title>
<link>https://blog.codinghorror.com/low-fi-usability-testing/</link>
<content>
                <!--kg-card-begin: markdown--><p>
Pop quiz, hotshot. <b>How do you know if your application <i>works?</i></b> Sure, maybe your app compiles. Maybe it passes all the unit tests. Maybe it ran the QA gauntlet successfully. Maybe it was successfully deployed to the production server, or packaged into an installer. Maybe your beta testers even signed off on it.
</p>
<p>
But that doesn't mean it works.
</p>
<p>
Can users actually <i>understand</i> your application? Can they <i>get their work done</i> in your application? That's what defines a working application. All the other stuff I listed is just noise. <b>You don't know if your application truly works until you've performed usability tests on it with actual users.</b>
</p>
<p>
And you regularly do usability testing on your application, right?
</p>
<p>
That's what I thought. One of the central concepts in Steve Krug's book <a href="http://www.amazon.com/exec/obidos/ASIN/0321344758/codihorr-20">Don't Make Me Think</a> is that usability testing is essential to any software project. Krug calls his simplified approach to usability testing <i>lost our lease, going-out-of-business-sale usability testing</i>:
</p>
<p>
</p>
<blockquote>
Usability testing has been around for a long time, and the basic idea is pretty simple: If you want to know whether your software or your Web site or your VCR remote control is easy enough to use, watch some people while they try to use it and note where they run into trouble. Then fix it, and test it again.
<p>
In the beginning, though, usability testing was a very expensive proposition. You had to have a usability lab with an observation room behind a one-way mirror, and at least two video cameras so you could record the users' reactions and the thing they were using. You had to recruit a lot of people so you could get results that were statistically significant. It was Science. It cost $20,000 to $50,000 a shot. It didn't happen very often.
</p>
<p>
But in 1989 Jakob Nielsen wrote a paper titled <a href="http://www.useit.com/papers/guerrilla_hci.html">"Usability Engineering at a Discount"</a> and pointed out that it didn't have to be that way. You didn't need a usability lab, and you could achieve the same results with a lot fewer users. The idea of discount usability testing was a huge step forward. The only problem is that a decade later most people still perceive testing as a big deal, hiring someone to conduct a test still costs $5,000 to $15,000, and as a result it doesn't happen nearly often enough.
</p>
<p>
What I'm going to commend to you in this chapter is something even more drastic: Lost our lease, going-out-of-business-sale usability testing.
I'm going to try to explain how to do your own testing when you have no money and no time. If you can afford to hire a professional to do your testing, by all means do it --  but <i>don't</i> do it if it means you'll do less testing.
</p>
</blockquote>
<p>
Krug points out that <b>usability testing is only as difficult as you make it</b>. It's possible to get useful results from a usability test with a <i>single user</i>, even:
</p>
<p>
</p>
<blockquote>
[Usability] testing always works, and even the worst test with the wrong user will show you things you can do to improve your site. I make a point of always doing a live user test at my workshops so that people can see it's very easy to do and it always produces an abundance of valuable insights. I ask for a volunteer and have him try to perform a task on a site belonging to one of the other attendees. These tests last less than ten minutes, but the person whose site is being tested usually scribbles several pages of notes. And they always ask if they can have the recording of the test to show their team back home. Once person told me that after his team saw the recording, they made one change to their site which they later calculated had resulted in $100,000 in savings.
</blockquote>
<p>
For more proof that you don't need a lot of users to have an effective usability test, Jakob Neilsen offers <a href="http://www.useit.com/alertbox/20000319.html">the following graph</a>:
</p>
<p>
<img alt="usability-problems-found-graph" border="0" class="at-xid-6a0120a85dcdae970b0120a86d8273970b" height="377" src="https://blog.codinghorror.com/content/images/uploads/2007/01/6a0120a85dcdae970b0120a86d8273970b-pi.png" width="631">
</p>
<p>
Obviously, not doing any usability testing at all is a disaster. But what's not so obvious is that usability testing with just a few users is remarkably effective. And it can be relatively painless if you follow Krug's broad guidelines for low-fidelity usability testing:
</p>
<p>
</p>
<ul>
<li>
<b>When should I test?</b> Ideally, once per month. You should be running small usability tests continuously throughout the development process. The tests should be short and simple, so you can conduct them almost any time with little advance planning.
</li>
<li>
<b>How many users do I need?</b> Three or four max.
</li>
<li>
<b>What kind of users?</b> Grab some people. Anyone who can use a computer will do. The best-kept secret of usability testing is that <i>it doesn't much matter who you test</i>. It's a good idea to get representative users, but it's much more important to test early and often. Don't be embarrassed to ask friends and neighbors.
</li>
<li>
<b>How much time will it take?</b> 45 minutes to an hour per user. Keep it simple. Keep it small. Although it does take extra time to conduct usability tests, even simple ones, ultimately you will save time. The results of the usability tests will prevent you from <a href="http://www.codinghorror.com/images/dont_make_me_think_pg_131_smaller.png">wasting time arguing endlessly</a>, or redoing things at the end of a project.
</li>
<li>
<b>Where do I conduct the test?</b> Any office or conference room. All you need is a room with a desk, a computer, and two chairs where you won't be interrupted.
</li>
<li>
<b>Who should do the testing?</b> Any reasonably patient human being. Choose someone who tends to be patient, calm, emphathetic, and a good listener. With a little practice, most people can get quite good at it.
</li>
<li>
<b>What equipment do I need?</b> All you need is <a href="http://www.codinghorror.com/blog/archives/000721.html">some form of screen recording software</a>, such as <a href="http://www.techsmith.com/products/studio/default.asp">Camtasia</a>. If you want to get really fancy you can bring in a camcorder to record the person and the screen.
</li>
<li>
<b>How do I prepare for the tests?</b> Decide what you want to show. Have <a href="http://www.sensible.com/Downloads/script.doc">a short script</a> (doc) ready to guide the participants through the test.
</li>
<li>
<b>How much will it cost?</b> Minus the moderator's time, a $50-$100 stipend per user.
</li>
<li>
<b>How do we interpret the results?</b> Debrief the development team and any interested stakeholders over lunch the same day. One of the nicest things about usability testing is that the results tend to be obvious to everyone who's watching. The serious problems are hard to miss.
</li>
</ul>
<p>
If you don't already own a copy of <a href="http://www.amazon.com/exec/obidos/ASIN/0321344758/codihorr-20">Don't Make Me Think</a>, shame on you. In the meantime, I highly recommend <a href="http://sensible.com/Downloads/DMMTchapter09_for_personal_use_only.pdf">downloading Chapter 9 of Steve Krug's Don't Make Me Think</a> (pdf), which has much more detail than the summary I've presented.
</p>
<p>
Usability testing doesn't have to be complicated. If you really want to know if what you're building works, <b>ask someone to use it while you watch</b>. If nothing else, grab Joe from accounting, Sue from marketing, <i>grab anyone nearby who isn't directly involved with the project</i>, and have them try it. Don't tell them what to do. Give them a task, and remind them to think out loud while they do it. Then quietly sit back and <i>watch what happens</i>. I can tell you from personal experience that the results are often eye-opening.
</p>
<p>
The benefits of usability testing are clear. You just have to <i>do it</i> to realize any of those benefits.
</p>
<p>
</p>
<p></p>
<!--kg-card-end: markdown-->
            </content>
<pubDate>2007-01-31T12:00:00.000Z</pubDate>
<guid>https://blog.codinghorror.com/low-fi-usability-testing/</guid>
</item>
</channel>
</rss>
