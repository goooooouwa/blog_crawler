<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
<channel>
<title>Coding Horror</title>
<description>programming and human factors</description>
<link>https://blog.codinghorror.com/</link>
<pubDate>Sun, 19 Apr 2020 00:00:01 GMT</pubDate>
<!-- other elements omitted from this example -->
<item>
<title>Is Worse Really Better?</title>
<link>https://blog.codinghorror.com/is-worse-really-better/</link>
<content>
                <!--kg-card-begin: markdown--><p>
You may think of Steve Martin as a stereotypical family friendly comedian today-- the center of saccharine movies like <a href="http://www.imdb.com/title/tt0098067/">Parenthood</a> and <a href="http://www.imdb.com/title/tt0101862/">Father of the Bride</a>. But it wasn't always this way. Steve hit his stride in the early 80's. At that time, I don't think there were any popular comedians exploring the ragged edge of humor in quite the same way Steve Martin was. I'll forever remember finding a copy of his book <a href="http://www.amazon.com/exec/obidos/ASIN/0399123040/codihorr-20">Cruel Shoes</a> as an impressionable teenager. It's a collection of very strange short stories. At my tender young age, I had certainly never read anything like it. It's hard to explain. Read for yourself. Here's the complete text of the eponymous <i>Cruel Shoes</i> short story:
</p>
<p>
</p>
<blockquote>
Anna knew she had to have some new shoes today, and Carlo had helped her try on every pair in the store. Carlo spoke wearily, "Well, that's every pair of shoes in the place."
<p>
"Oh, you must have one more pair ..."
</p>
<p>
"No, not one more pair...Well, we have the cruel shoes, but no one would want..."
</p>
<p>
Anna interrupted, "Oh yes, let me see the cruel shoes!"
</p>
<p>
Carlo looked incredulous. "No, Anna, you don't understand, you see, the cruel shoes are..."
</p>
<p>
"Get them!"
</p>
<p>
Carlo disappeared into the back room for a moment, then returned with an ordinary shoebox. He opened the lid and removed a hideous pair of black and white pumps. But these were not an ordinary pair of black and white pumps; both were left feet, one had a right angle turn with seperate compartments that pointed the toes in impossible directions. The other shoe was six inches long and was curved inward like a rocking chair with a vise and razor blades to hold the foot in place. Carlo spoke hesitantly, "...Now you see why...they're not fit for humans..."
</p>
<p>
"Put them on me."
</p>
<p>
"But..."
</p>
<p>
"Put them on me!"
</p>
<p>
Carlo knew all arguments were useless. He knelt down before her and forced the feet into the shoes.
</p>
<p>
The screams were incredible.
</p>
<p>
Anna crawled to the mirror and held her bloody feet up where she could see.
</p>
<p>
"I like them."
</p>
<p>
She paid Carlo and crawled out of the store into the street.
</p>
<p>
Later that day, Carlo was overheard saying to a new customer, "Well, that's every shoe in the place. Unless, of course, you'd like to try the cruel shoes."
</p>
</blockquote>
<p>
Funny, yes, but also disturbing-- you feel vaguely uncomfortable while laughing at <i>Cruel Shoes</i>. That awkward feeling is what makes Steve's humor so subversive and thought provoking. I previously cited my lifelong <a href="http://www.codinghorror.com/blog/archives/001034.html">fascination with the subversive humor of Mad Magazine</a>, and I'd hold Steve Martin's brand of strange, experimental comedy right up there next to it. I distinctly remember seeing <a href="http://www.imdb.com/title/tt0079367/">The Jerk</a> in 1979. I could only make sense of about half of it at the time, but the half I <i>did</i> understand blew my young mind. I've been slowly deciphering the genius of this Steve Martin movie ever since.
</p>
<p>
In <a href="http://www.smithsonianmag.com/arts-culture/funny-martin-200802.html?c=y&amp;page=1">a recent interview with Smithsonian Magazine</a>, Steve explains some of the philosophy behind his unique comedy. It's a fantastic article, but one particular passage stood out:
</p>
<p>
</p>
<blockquote>
At the end of my closing-night show at the Troubadour, I stood onstage and took out five bananas. I peeled them, put one on my head, one in each pocket and squeezed one in each hand. Then I read the last line of my latest bad review: "Sharing the bill with Poco this week is comedian Steve Martin ... his 25-minute routine failed to establish any comic identity that would make the audience remember him or the material." Then I walked off the stage.
<p>
<img alt="Steve Martin, comedian" border="0" class="at-xid-6a0120a85dcdae970b0120a86dc07f970b" height="355" src="https://blog.codinghorror.com/content/images/uploads/2008/01/6a0120a85dcdae970b0120a86dc07f970b-pi.jpg" width="479">
</p>
<p>
The consistent work enhanced my act. I learned a lesson: <b>it was easy to be great</b>. Every entertainer has a night when everything is clicking. These nights are accidental and statistical: like lucky cards in poker, you can count on them occurring over time. <b>What was hard was to be good, consistently good, night after night, no matter what the circumstances.</b>
</p>
</blockquote>
<p>
Steve's insistence that greatness isn't something you can count on, or even something you should strive for, resonates deeply for me. Greatness is far too difficult, too abstract, too daunting. Being good-- <i>consistently</i> good-- is the real goal, and that takes hard work and discipline. Being good-- that's something concrete you can roll up your sleeves and accomplish. Forget greatness. Can we even define what greatness truly is? Like Steve Martin, you <i>become</i> great through applying yourself at being reliably good, night after night, venue after venue, time after time.
</p>
<p>
Voltaire originally said <i>better is the enemy of good</i>; at the risk of creating another <a href="http://en.wikipedia.org/wiki/Snowclone">snowclone</a>, Steve's advice is essentially that <b>great is the enemy of good.</b> It's not exactly a message about software development, but it strongly reminds me of <a href="http://www.codinghorror.com/blog/archives/000047.html">worse is better</a>, at least from where I'm sitting. There's a fascinating history behind this classic essay that I glossed over in <a href="http://www.codinghorror.com/blog/archives/000047.html">my original post on the topic</a>. After doing a bit more research, I found that Richard Gabriel wrote a detailed article <a href="http://www.dreamsongs.com/WorseIsBetter.html">explaining the rich history of worse is better</a>:
</p>
<p>
</p>
<blockquote>
The concept known as "worse is better" holds that in software making (and perhaps in other arenas as well) it is better to start with a minimal creation and grow it as needed. Christopher Alexander might call this "piecemeal growth." This is the story of the evolution of that concept.
<p>
From 1984 until 1994 I had a Lisp company called "Lucid, Inc." In 1989 it was clear that the Lisp business was not going well, partly because the AI companies were floundering and partly because those AI companies were starting to blame Lisp and its implementations for the failures of AI. One day in Spring 1989, I was sitting out on the Lucid porch with some of the hackers, and <b>someone asked me why I thought people believed C and Unix were better than Lisp. I jokingly answered, "because, well, worse is better."</b> We laughed over it for a while as I tried to make up an argument for why something clearly lousy could be good.
</p>
</blockquote>
<p>
The idea being, of course, that enough goodness slowly accreted over time usually trumps any epic (and usually ill-fated) plans to create any brand new great thing. I completely agree, and I think history bears this lesson out a hundredfold. <b>But even the original author, Richard Gabriel, can't decide if worse really is better.</b> He's written a slew of pro and con articles over the years, vacillating back and forth, playing Devil's Advocate to his own position, representing both the "worse" and "better" sides in equal measure:
</p>
<p>
</p>
<ul>
<li>
<a href="http://www.dreamsongs.com/WIB.html">Lisp: Good News, Bad News, How to Win Big</a> (original "Worse is Better" talk, 1991)
</li>
<li>
<a href="http://www.dreamsongs.com/Files/worse-is-worse.pdf">Worse Is Better is Worse</a> (pdf, 1991)
</li>
<li>
<a href="http://www.dreamsongs.com/Files/IsWorseReallyBetter.pdf">Is Worse Really Better?</a> (pdf, 1992)
</li>
<li>
<a href="http://www.dreamsongs.com/Files/AcceptanceModels.pdf">Models of Software Acceptance: How Winners Win</a> (pdf presentation, 1995)
</li>
<li>
<a href="http://www.dreamsongs.com/Files/Innovation.pdf">Money Through Innovation Reconsidered</a> (pdf, 1995)
</li>
<li>
<a href="http://www.dreamsongs.com/Files/WorseIsBetterPositionPaper.pdf">Back to the Future: Is Worse (Still) Better?</a> (pdf, 2000)
</li>
<li>
<a href="http://www.dreamsongs.com/Files/ProWorseIsBetterPosition.pdf">Back to the Future: Worse (Still) is Better!</a> (pdf, 2000)
</li>
</ul>
<p>
Richard's final statement on the matter is a bit of a cop out: <i>decide for yourselves</i>. I'm not sure if worse is better or not. Personally, I'm inclined to follow Steve Martin's advice here: <b>strive to be consistently good, and the greatness takes care of itself</b>.
</p>
<p>
</p>
<p></p>
<!--kg-card-end: markdown-->
            </content>
<pubDate>2008-01-30T12:00:00.000Z</pubDate>
<guid>https://blog.codinghorror.com/is-worse-really-better/</guid>
</item>
</channel>
</rss>
