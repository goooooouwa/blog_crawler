<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
<channel>
<title>Coding Horror</title>
<description>programming and human factors</description>
<link>https://blog.codinghorror.com/</link>
<pubDate>Sun, 19 Apr 2020 00:00:01 GMT</pubDate>
<!-- other elements omitted from this example -->
<item>
<title>Font Rendering: Respecting The Pixel Grid</title>
<link>https://blog.codinghorror.com/font-rendering-respecting-the-pixel-grid/</link>
<content>
                <!--kg-card-begin: markdown--><p>
I've finally determined <a href="http://www.codinghorror.com/blog/archives/000884.html">What's Wrong With Apple's Font Rendering</a>. As it turns out, there actually <i>wasn't</i> anything wrong with Apple's font rendering, per se. Apple simply chose a different font rendering philosophy, <a href="http://www.joelonsoftware.com/items/2007/06/12.html">as Joel Spolsky explains</a>:
</p>
<p>
</p>
<blockquote>
<b>Apple</b> generally believes that the goal of the algorithm should be to preserve the design of the typeface as much as possible, even at the cost of a little bit of blurriness.
<p>
<b>Microsoft</b> generally believes that the shape of each letter should be hammered into pixel boundaries to prevent blur and improve readability, even at the cost of not being true to the typeface.
</p>
</blockquote>
<p>
So we answer the question with another question. <b>What do you respect more: the pixel grid, or the font designer?</b> It's not surprising that Apple would side with the font designer, because <a href="http://www.codinghorror.com/blog/archives/000769.html">Steve Jobs thinks Microsoft has no taste</a>. But me, I'm a pragmatist. Given the ubiquity of relatively low DPI displays, <a href="http://mezzoblue.com/archives/2007/06/12/a_subpixel_s/">I'm with Dave Shea</a>. I side with the pixel grid.
</p>
<p>
</p>
<blockquote>
Joel talks about the pixel grid, and how Microsoft's type rendering pays more attention to it. Speaking as someone who <a href="http://www.mezzoblue.com/icons/chalkwork/">thinks a lot</a> about <a href="http://mezzoblue.com/archives/2007/02/21/icon_design/">the pixel grid</a>, I have to say I think I'm coming around to the idea that Microsoft's ClearType simply works better.
<p>
Alright, I'd better qualify that quickly. Think about it this way – as a designer, you don't just set type in Photoshop and let it go, right? You tweak. You kern. You attempt to <a href="http://www.mezzoblue.com/archives/2004/01/18/type_the_ex/">match the letters to the pixel grid</a> as closely as possible to reduce the blurriness. Sometimes spacing suffers, and you have to choose between a slightly blurry letter with perfect spacing, or a more precise fit within the pixel grid with just slightly off spacing. I can't be the only one that leans toward the latter most times.
</p>
<p>
And that's the difference here. ClearType is a closer match to what I do manually already. Yes, I prefer the way type on OS X looks; ClearType seems too sharp and overly blocky, the subtleties of the curves are lost and it's overly chunky. But, for the medium in which it's being rendered, it seems like a more ideal solution.
</p>
</blockquote>
<p>
Dave's opinion carries a lot of weight here, not just because he's <a href="http://mezzoblue.com">a well-known designer</a>, but because the three citations he provides demonstrate just how common it is for designers to do exactly the kind of manual, per-pixel tweaks that ClearType does for us automatically. And it's not just an aesthetic choice, either – there's plenty of hard data to support the assertion that <a href="http://blogs.msdn.com/fontblog/archive/2005/12/13/503236.aspx">snapping fonts to the pixel grid improves reading accuracy</a>.
</p>
<p>
A fascinating greyscale-only variant of this rendering techique, <a href="http://web.archive.org/web/20070706034446/http://artofcode.com/fontfocus/">FontFocus</a>, illustrates beautifully how subtle tweaks can "snap" fonts to the pixel grid for better readability:
</p>
<p>
<img alt="imagination, 9ppem Helvetica, FontFocus on" border="0" class="at-xid-6a0120a85dcdae970b0120a86d971d970b" height="110" src="https://blog.codinghorror.com/content/images/uploads/2007/06/6a0120a85dcdae970b0120a86d971d970b-pi.png" width="495">
</p>
<p>
<img alt="imagination, 9ppem Helvetica, FontFocus off" border="0" class="at-xid-6a0120a85dcdae970b0120a86d972f970b" height="110" src="https://blog.codinghorror.com/content/images/uploads/2007/06/6a0120a85dcdae970b0120a86d972f970b-pi.png" width="500">
</p>
<p>
Typography, if you haven't figured this out by now, is really complicated. It's one of the few areas of "computer science" that actually <a href="http://www.microsoft.com/typography/ctfonts/WordRecognition.aspx">justifies the title</a>. I highly recommend reading <a href="http://web.archive.org/web/20070706034446/http://artofcode.com/fontfocus/">the entire FontFocus article</a>, as it's very instructive.
</p>
<p>
Dave Shea thinks <b>the pixel grid will be moot once high resolution displays become ubiquitious</b>. I wholeheartedly agree, although I'm unsure when exactly that will be. The history of display resolution increases have been quite modest so far. Ten years ago I was using a single 17" 1024x768 display; now I'm using three 20" 1600x1200 displays. So you'll forgive me if I'm not overly optimistic about this theoretical jump from 100 DPI to 200 DPI.
</p>
<p>
I don't understand why Apple is asking us to sacrifice the present at the altar of the future. <b>Can't we have hinting at low resolutions, and accuracy at high resolutions, too?</b> Snapping fonts to a pixel grid may very well be irrelevant when everyone is luxuriating in the glow of their 200 DPI monitors. Until that glorious day arrives, respecting the pixel grid certainly makes text a lot more readable for those of us stuck in the here and now.
</p>
<p>
<!--kg-card-end: markdown-->
            </p></content>
<pubDate>2007-06-12T12:00:00.000Z</pubDate>
<guid>https://blog.codinghorror.com/font-rendering-respecting-the-pixel-grid/</guid>
</item>
</channel>
</rss>
