<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
<channel>
<title>Coding Horror</title>
<description>programming and human factors</description>
<link>https://blog.codinghorror.com/</link>
<pubDate>Sun, 19 Apr 2020 00:00:01 GMT</pubDate>
<!-- other elements omitted from this example -->
<item>
<title>Practicing the Fundamentals: The New Turing Omnibus</title>
<link>https://blog.codinghorror.com/practicing-the-fundamentals-the-new-turing-omnibus/</link>
<content>
                <!--kg-card-begin: markdown--><p>
While researching <a href="http://www.codinghorror.com/blog/archives/000951.html">Classic Computer Science Puzzles</a>, our CEO Scott Stanfield turned me on to A.K. Dewdney's <a href="http://www.amazon.com/exec/obidos/ASIN/0805071660/codihorr-20">The New Turing Omnibus: 66 Excursions in Computer Science</a>.
</p>
<p>
<a href="http://www.amazon.com/exec/obidos/ASIN/0805071660/codihorr-20"><img alt="The New Turing Omnibus: 66 Excursions in Computer Science" border="0" class="at-xid-6a0120a85dcdae970b0120a86d9fe9970b" height="436" src="https://blog.codinghorror.com/content/images/uploads/2007/09/6a0120a85dcdae970b0120a86d9fe9970b-pi.png" width="307"></a>
</p>
<p>
This is an incredibly fun little book. Sure, it's got Towers of Hanoi, but it's also got so much more:
</p>
<p>
</p>
<blockquote>
<b>The book is designed to appeal both to the educated layperson and to the student of computer science</b>. But how is that possible? The answer lies in the variety of treatments as well as topics. Some of the topics are inherently easy or I have been lucky enough to stumble upon just the right expository mechanisms. Some of the topics are inherently deep or complicated and there is no way around a certain rigor, including occasional mathematical symbolism.
<p>
For students of computer science, the 66 chapters that follow will give a sneak preview of the major ideas and techniques they will encounter in their undergraduate careers and some they may only encounter as graduate students. For professors of computer science, my colleagues, the 66 chapters will amount to a sneak review. Trying to remember how the Boyer-Moore string-matching algorithm went? It's right there in Chapter 61, Searching Strings. As for your lectures, if you like to deliver your own material this book may be what you've been looking for.
</p>
<p>
At one end of its spectrum of uses, <a href="http://www.amazon.com/exec/obidos/ASIN/0805071660/codihorr-20">The (New) Turing Omnibus</a> may be ideal in bringing students from diverse backgrounds "up to speed." At the other end of the spectrum, you retain creative control but draw a few (or many) of your lectures from this book. Finally, for educated laypersons, the book provides a brief roadmap of computability.
</p>
</blockquote>
<p>
I have no idea why I hadn't heard of this book, originally published in 1988 and updated with a second edition in 1993, until now. <b>The New Turing Omnibus is is probably the single closest published equivalent to what I do on this very blog.</b> It's a grab-bag of computing topics. Each chapter is the equivalent of a short blog post examining a particular topic, peppered with tables, diagrams, and illustrations. And the topics aren't presented in any particular order. Browse and find something you like; discard the rest. Here's a short excerpt from Chapter 33, Shannon's Theory - The Elusive Codes:
</p>
<p>
<img alt="The New Turing Omnibus, page 330" border="0" class="at-xid-6a0120a85dcdae970b0120a86d9ff3970b" height="546" src="https://blog.codinghorror.com/content/images/uploads/2007/09/6a0120a85dcdae970b0120a86d9ff3970b-pi.png" width="387">
Â 
<img alt="The New Turing Omnibus, page 331" border="0" class="at-xid-6a0120a85dcdae970b0120a86d9ffe970b" height="546" src="https://blog.codinghorror.com/content/images/uploads/2007/09/6a0120a85dcdae970b0120a86d9ffe970b-pi.png" width="387">
</p>
<p>
A <a href="http://www.everything2.com/index.pl?node_id=1387467">complete table of contents</a> for all 66 chapters of The New Turing Omnibus is enumerated at Everything2. I think there's a very high probability that if you enjoy reading this blog on a regular basis, you'll also enjoy this remarkable little book. As promised, it's a great way to <a href="http://headrush.typepad.com/creating_passionate_users/2006/03/dont_forget_squ.html">keep practicing the fundamentals</a> for professionals:
</p>
<p>
</p>
<blockquote>
Bert Bates (my co-author) is a blackbelt level go player, one of the best amateur players in the state. But when a visiting expert-- four belt levels above Bert-- showed up at the local go tournament, Bert was surprised to see the guy reading a book on fundamental go problems that Bert had read much earlier in his learning. The expert said, "I must have read this at least a hundred times. My goal each time is to see how much more quickly I can solve all the problems in the book than I did the last time."
<p>
Some of the best athletes never forget the fundamentals-- whether it's Tiger Woods practicing the basics, or a pro basketball player working on free throws. A good musician might still practice arpeggios. A programmer might... I don't know, actually. <b>What would be the fundamentals that a good programmer might forget?</b> I'll have to think about that one.
</p>
</blockquote>
<p>
But it's not just a book for programmers; it's also got a broad, down-to-earth appeal. It's an intriguing collection of thought puzzles for laypeople with at least a passing interest in the field of computer science.
</p>
<p>
If you'd like to see more, you can <a href="http://www.amazon.com/gp/reader/0805071660/ref=sib_dp_pt/102-9499370-6371302#reader-link">browse through a few pages of the book at Amazon</a>. A few more pages are available <a href="http://books.google.com/books?id=XW7fICYtkg8C&amp;dq=&amp;pg=PP1&amp;ots=fWQL2tqxMH&amp;sig=xYri8q7TNdxEokZE0M5cfhT1TA8">in Google books</a>, but beware the randomly inserted "copyrighted image" placeholder instead of the many illustrations and diagrams throughout the book.
</p>
<p>
</p>
<p></p>
<!--kg-card-end: markdown-->
            </content>
<pubDate>2007-09-17T12:00:00.000Z</pubDate>
<guid>https://blog.codinghorror.com/practicing-the-fundamentals-the-new-turing-omnibus/</guid>
</item>
</channel>
</rss>
