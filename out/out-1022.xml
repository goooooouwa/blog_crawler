<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
<channel>
<title>Coding Horror</title>
<description>programming and human factors</description>
<link>https://blog.codinghorror.com/</link>
<pubDate>Sun, 19 Apr 2020 00:00:01 GMT</pubDate>
<!-- other elements omitted from this example -->
<item>
<title>Copying Visual Studio Code Snippets to the Clipboard as HTML</title>
<link>https://blog.codinghorror.com/copying-visual-studio-code-snippets-to-the-clipboard-as-html/</link>
<content>
                <!--kg-card-begin: markdown--><p>
As I mentioned in <a href="http://www.codinghorror.com/blog/archives/000319.html">Formatting HTML code snippets with Ten Ton Wrecking Balls</a>, <b>copying code to your clipboard in Visual Studio is often an excercise in futility if you want anything more than plain vanilla text.</b> VS copies code to the clipboard with bizarro-world RTF formatting instead of the sane, simple HTML markup you might expect. This is true even of <a href="http://blogs.msdn.com/somasegar/archive/2005/10/27/485665.aspx">the brand spanking new VS.NET 2005</a>.
</p>
<p>
I previously developed a macro that converted highlighted code to simple HTML on the clipboard using two different methods. I've since removed the <a href="http://addressof.com/blog/archive/2004/10/06/966.aspx">Word interop method</a> entirely because it's clunky. And <b>I have improved the RTF-to-HTML conversion method substantially</b>. Take this code, for example:
</p>
<p>
<img alt="Some sample C# code to copy to the clipboard" border="0" class="at-xid-6a0120a85dcdae970b0120a86d5c9d970b" height="273" src="https://blog.codinghorror.com/content/images/uploads/2005/10/6a0120a85dcdae970b0120a86d5c9d970b-pi.png" width="296">
</p>
<p>
Let's highlight the code execute the <a href="http://www.codinghorror.com/blog/files/FormatToHtml-042006.zip">FormatToHtml.Modern macro</a>, and then paste the contents of the clipboard into something like <a href="http://www.freetextbox.com/">FreeTextBox</a>:
</p>
<p>
</p>
<div style="font-family:monospace;font-size: 9pt;background-color: white;color: black;">
<span style="color:Navy">namespace</span><span style="color:black"> </span><span style="color:Maroon">TotallyUnnecessaryNamespace<br>
</span><span style="color:black">{<br>
    </span><span style="color:Gray">///</span><span style="color:Green"> </span><span style="color:Gray">&lt;summary&gt;<br>
</span><span style="color:black">    </span><span style="color:Gray">///</span><span style="color:Green"> I heart GUIDs<br>
</span><span style="color:black">    </span><span style="color:Gray">///</span><span style="color:Green"> </span><span style="color:Gray">&lt;/summary&gt;<br>
</span><span style="color:black">    </span><span style="color:Navy">public</span><span style="color:black"> </span><span style="color:Navy">class</span><span style="color:black"> </span><span style="color:Maroon">MyClass<br>
</span><span style="color:black">    {<br>
        </span><span style="color:Navy">public</span><span style="color:black"> </span><span style="color:Navy">void</span><span style="color:black"> </span><span style="color:Maroon">test</span><span style="color:black">()<br>
        {<br>
            </span><span style="color:Navy">string</span><span style="color:black"> </span><span style="color:Maroon">s</span><span style="color:black"> = "test";<br>
            </span><span style="color:Navy">int</span><span style="color:black"> </span><span style="color:Maroon">i</span><span style="color:black"> = 1234;<br>
        }<br>
    }<br>
}<br>
</span>
</div>
<p>
That's extra clean, well-formatted &lt;span&gt; colored HTML wrapped in a simple &lt;div&gt;. It preserves the color scheme and indentation from your IDE exactly*, although it does substitute a standard monospace IDE font. View source on this post to see the raw markup.
</p>
<p>
Now compare this with the craptacular results you'll get when you do a traditional copy and paste! This is how VS.NET 2005's CTRL+C copy functionality should behave. You could even map the CTRL+C shortcut to the macro if you like.
</p>
<p>
My favorite new feature, however, is that <b>the macro now dynamically removes excessive indenting from copied code</b>. That makes it a lot cleaner when copying code snippets <a href="http://www.codinghorror.com/blog/archives/000188.html">from the TotallyUnnecessaryNamespace namespace</a>. As Cartman would say, <i>super sweet.</i> And it works in Visual Studio 2002, 2003, and 2005. Try it yourself!
</p>
<p>
</p>
<p>
<a href="http://www.codinghorror.com/blog/files/FormatToHtml-042006.zip">Download the FormatToHtml macro</a> (5kb) <span style="color:red; font-weight:bold;">Updated 4/2006</span>
</p>
<p>
Here's how to get started with this macro
</p>
<p>
</p>
<ol>
<li>go to Tools - Macros - IDE
</li>
<li>create a new Module named "FormatToHtml" under "MyMacros"
</li>
<li>paste the downloaded code into the module
</li>
<li>add references to System.Drawing and System.Web via the Add Reference menu
</li>
<li>save and close the macro IDE window
</li>
<li>go to Tools - Macros - Macro Explorer
</li>
<li>Four new macros will be under "FormatToHtml"; double-click to run the macro, then paste away..
</li>
</ol>
<p>
* Background colors are lost, but that's because the RTF markup VS.NET places in the clipboard doesn't contain the background colors, either. Total bummer.
</p>
<p>
</p>
<p></p>
<!--kg-card-end: markdown-->
            </content>
<pubDate>2005-10-27T12:00:00.000Z</pubDate>
<guid>https://blog.codinghorror.com/copying-visual-studio-code-snippets-to-the-clipboard-as-html/</guid>
</item>
</channel>
</rss>
