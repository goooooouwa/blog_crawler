<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
<channel>
<title>Coding Horror</title>
<description>programming and human factors</description>
<link>https://blog.codinghorror.com/</link>
<pubDate>Sun, 19 Apr 2020 00:00:01 GMT</pubDate>
<!-- other elements omitted from this example -->
<item>
<title>Did YouTube Cut the Gordian Knot of Video Codecs?</title>
<link>https://blog.codinghorror.com/did-youtube-cut-the-gordian-knot-of-video-codecs/</link>
<content>
                <!--kg-card-begin: markdown--><p>
Playing video on a computer has always been a crapshoot. You must have the correct video codec installed, the same video codec that the clip was encoded with. If you don't, the video won't play.  You'll have to find, download, and install the proper codec first. It's even more of a problem on the web, where users can run any combination of operating system and browser. Just take a look at all the choices in Yahoo's web-based Media Helper:
</p>
<p>
<img alt="web-video-format-selector.png" border="0" class="at-xid-6a0120a85dcdae970b0128776fe47d970c" height="278" src="https://blog.codinghorror.com/content/images/uploads/2006/12/6a0120a85dcdae970b0128776fe47d970c-pi.png" width="379">
</p>
<p>
As the old saying goes, we love standards: that's why we have <a href="http://en.wikipedia.org/wiki/List_of_codecs#Video_codecs">so many of them</a>. Here are a few of the more popular video codecs you're likely to encounter out in the wild:
</p>
<p>
</p>
<ul>
<li>Windows Media Video
</li>
<li>QuickTime
</li>
<li>MPEG-1
</li>
<li>MPEG-2
</li>
<li>MPEG-4
</li>
<li>x264
</li>
</ul>
<p>
It doesn't seem like such a large list, until you consider that there are <b>dozens of variants for each codec</b>. What version of QuickTime? What version of Windows Media? Which MPEG-4 implementation? And this is only a partial list of the <i>popular</i> codecs. Imagine a poor user trying to view a RealVideo clip in this day and age.
</p>
<p>
That's why we call it <a href="http://btfaq.com/serve/cache/69.html">codec hell</a>. It makes the current format war between Blu-Ray and HD-DVD look like a walk in the park.
</p>
<p>
In this hostile environment, it's no wonder that <b>YouTube elected to cut the gordian knot of video codecs: they chose Flash Video, which "just works" on most computers</b>. Even if Flash isn't present on your computer, it's an easy in-place browser download, unlike, say, a QuickTime install. It's the same reason Google Video <a href="http://www.kaourantin.net/2005/09/google-video-pragmatism-at-work.html">switched to Flash in September 2005</a>, long before Google purchased YouTube. Tinic Uro explains:
</p>
<p>
</p>
<blockquote>
<a href="http://en.wikipedia.org/wiki/FLV">The .FLV file format</a> uses the KISS (keep it simple stupid) approach. It offers neither the high fidelity or the flexibility of file formats like QuickTime or Windows Media. But it does what it does well: playing back simple video streams with some meta information.
</blockquote>
<p>
The availability of a common, simple video playback format across all browsers and platforms has ushered in a new era of video sharing on the web. And that's a very good thing.
</p>
<p>
But we've paid an extraordinarily heavy price for this universality: <b>Flash Video quality is, in a word, <i>hideous</i></b>. Let's compare the <a href="http://movies.yahoo.com/feature/transformers_hd.html">Transformers Movie trailer</a>, which is available in a variety of different video formats.
</p>
<p>
<a href="http://www.youtube.com/watch?v=mwyzSNk8Fu8">YouTube</a> version:
</p>
<p>
<a href="http://www.youtube.com/watch?v=mwyzSNk8Fu8"><img alt="transformers-trailer-youtube" border="0" class="at-xid-6a0120a85dcdae970b0128776fe495970c" height="369" src="https://blog.codinghorror.com/content/images/uploads/2006/12/6a0120a85dcdae970b0128776fe495970c-pi.jpg" width="450"></a>
</p>
<p>
Windows Media Video streaming version:
</p>
<p>
<img alt="transformers-trailer-stream-wmv.jpg" border="0" class="at-xid-6a0120a85dcdae970b0128776fe4af970c" height="348" src="https://blog.codinghorror.com/content/images/uploads/2006/12/6a0120a85dcdae970b0128776fe4af970c-pi.jpg" width="407">
</p>
<p>
QuickTime streaming version:
</p>
<p>
<img alt="transformers-trailer-stream-qt.jpg" border="0" class="at-xid-6a0120a85dcdae970b0128776fe4cc970c" height="216" src="https://blog.codinghorror.com/content/images/uploads/2006/12/6a0120a85dcdae970b0128776fe4cc970c-pi.jpg" width="480">
</p>
<p>
QuickTime 480p version:
</p>
<p>
<img alt="transformers-trailer-480p.jpg" border="0" class="at-xid-6a0120a85dcdae970b0128776fe4ea970c" height="370" src="https://blog.codinghorror.com/content/images/uploads/2006/12/6a0120a85dcdae970b0128776fe4ea970c-pi.jpg" width="852">
</p>
<p>
The Flash Video version of the Transformers movie trailer is a bottom of the barrel, least common denominator experience. It is painfully bad. But I'd also argue that <b>quality is largely irrelevant for <i>most</i> video content on the web</b>. Having video you can embed, play, and link everywhere-- without worrying about whether the video will play back properly on someone's computer-- is far more important than quality alone. Flash Video "just works", and it's never more than one click away from 98% of the web browsers on the planet. It'll never win any quality awards, but it's still recognizable as video. Therefore it wins by default.
</p>
<p>
The codec wars are over, at least for web clips. <b>Flash Video is the new internet video standard.</b> Sometimes <a href="http://www.codinghorror.com/blog/archives/000047.html">worse really is better</a>.
</p>
<p>
That said, I do wish we hadn't cut out ten years of video codec progress to get to this point. When watching YouTube clips, I sometimes feel like I'm watching ancient <a href="http://en.wikipedia.org/wiki/Video_for_Windows">Video for Windows</a> clips circa 1993. Here's hoping the Flash developers can incorporate more modern, higher quality codecs without re-introducing codec hell along the way.
</p>
<p>
</p>
<p></p>
<!--kg-card-end: markdown-->
            </content>
<pubDate>2006-12-27T12:00:00.000Z</pubDate>
<guid>https://blog.codinghorror.com/did-youtube-cut-the-gordian-knot-of-video-codecs/</guid>
</item>
</channel>
</rss>
