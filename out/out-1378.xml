<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
<channel>
<title>Coding Horror</title>
<description>programming and human factors</description>
<link>https://blog.codinghorror.com/</link>
<pubDate>Sun, 19 Apr 2020 00:00:01 GMT</pubDate>
<!-- other elements omitted from this example -->
<item>
<title>Throwing better SOAP exceptions</title>
<link>https://blog.codinghorror.com/throwing-better-soap-exceptions/</link>
<content>
                <!--kg-card-begin: markdown--><p>
I'm fairly happy with my <a href="http://www.codeproject.com/dotnet/ExceptionHandling.asp">global unhandled exception handler</a> for WinForms and console apps. I also successfully adapted <a href="http://www.codeproject.com/aspnet/ASPNETExceptionHandling.asp">a version of it for use in ASP.NET apps</a>, where it interfaces with the <b>Application_Error</b> event in global.asax:
</p>
<p>
</p>
<pre>
Sub Application_Error(ByVal sender As Object, ByVal e As EventArgs)
' Fires when an error occurs
Dim ueh As New AspUnhandledExceptionHandler(True)
ueh.HandleException(Server.GetLastError.GetBaseException())
End Sub
</pre>
<p>
What I haven't been able to do, however, is get it to work with NET web services. Application_Error never fires for a web service. <a href="http://groups.google.com/groups?hl=en&amp;lr=&amp;ie=UTF-8&amp;oe=UTF-8&amp;th=84391715cb4bf9ad&amp;seekm=OxcOFv%24jBHA.1576%40tkmsftngp04&amp;frame=off">According to my research</a>, <b>there really is no good way to generically handle unhandled exception in .NET web services.</b> All the alternatives are.. well,  bad. Here's what you can do:
</p>
<ul>
<li>Put a try..catch around every WebService method. These methods tend to be wrappers around other classes, so this isn't quite as bad as it sounds, but it's still not good.
</li>
<li>use a Facade design pattern to derive all objects from parent objects that.. basically do a try..catch on the .Execute method. Uh, thanks but no thanks.
</li>
<li>Write a custom SOAP Extension or HttpModule. This sounds reasonable but.. hard. If it's such a cool, important extension or HttpModule, wouldn't someone have written it already?
</li>
</ul>
Are there any good answers here? I would definitely like feedback if anyone has any suggestions. After some further poking around, I located this Microsoft documentation on <a href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/cpguide/html/cpconhandlingraisingexceptionsinxmlwebservices.asp">Handling and Throwing Exceptions in XML Web Services</a>. While it doesn't offer any advice on the above, it did illuminate one problem: by default, <b>.NET doesn't throw very good SOAP Exceptions!</b> You need to re-throw exceptions with some additional data to get the "optional", but quite helpful, SOAP &lt;detail&gt; error element populated-- like so:
<p>
</p>
<pre>
Private Sub WebServiceExceptionHandler(ByVal ex As Exception)
Dim ueh As New AspUnhandledExceptionHandler
ueh.HandleException(ex)
'-- Build the detail element of the SOAP fault.
Dim doc As New System.Xml.XmlDocument
Dim node As System.Xml.XmlNode = doc.CreateNode(XmlNodeType.Element, _
SoapException.DetailElementName.Name, _
SoapException.DetailElementName.Namespace)
'-- append our error detail string to the SOAP detail element
Dim details As System.Xml.XmlNode = doc.CreateNode(XmlNodeType.Element, _
"ExceptionInfo", _
SoapException.DetailElementName.Namespace)
details.InnerText = ueh.ExceptionToString(ex)
node.AppendChild(details)
'-- re-throw the exception so we can package additional info
Throw New SoapException("Unhandled Exception: " &amp; ex.Message, _
SoapException.ClientFaultCode, _
Context.Request.Url.ToString, node)
End Sub
</pre>
<p>
And it really does work. This is a capture of a generic exception using <a href="http://www.etherdetect.com">a network sniffer</a>, so we're looking at raw HTTP traffic here. Before:
</p>
<p>
</p>
<pre>
HTTP/1.1 500 Internal Server Error.
Date: Wed, 26 May 2004 05:12:08 GMT
Server: Microsoft-IIS/6.0
X-Powered-By: ASP.NET
X-AspNet-Version: 1.1.4322
Cache-Control: private
Content-Type: text/xml; charset=utf-8
Content-Length: 488
&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"&gt;
&lt;soap:Body&gt;
<span style="color:red;">
&lt;soap:Fault&gt;
&lt;faultcode&gt;soap:Server&lt;/faultcode&gt;
&lt;faultstring&gt;Server was unable to process request. --&gt; Object reference not set to an instance of an object.&lt;/faultstring&gt;
&lt;detail /&gt;
&lt;/soap:Fault&gt;
</span>
&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;
</pre>
<p>
After:
</p>
<p>
</p>
<pre>
HTTP/1.1 500 Internal Server Error.
Date: Wed, 26 May 2004 05:09:20 GMT
Server: Microsoft-IIS/6.0
X-Powered-By: ASP.NET
X-AspNet-Version: 1.1.4322
Cache-Control: private
Content-Type: text/xml; charset=utf-8
Content-Length: 782
&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"&gt;
&lt;soap:Body&gt;
<span style="color:red;">
&lt;soap:Fault&gt;
&lt;faultcode&gt;soap:Server&lt;/faultcode&gt;
&lt;faultstring&gt;SoapException&lt;/faultstring&gt;
&lt;faultactor&gt;http://192.168.168.10/WebService1/Service1.asmx&lt;/faultactor&gt;
&lt;detail&gt;
&lt;ExceptionType&gt;System.NullReferenceException&lt;/ExceptionType&gt;
&lt;ExceptionMessage&gt;Object reference not set to an instance of an object.&lt;/ExceptionMessage&gt;
&lt;ExceptionTrace&gt;at WebService1.Service1.HelloException2() in HOMESERVERwwwroot$WebService1Service1.asmx.vb:line 70&lt;/ExceptionTrace&gt;
&lt;/detail&gt;
&lt;/soap:Fault&gt;
</span>
&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;
</pre>
<p>
Notice the &lt;detail&gt; element is fully populated, and the entire &lt;soap:Fault&gt; element is much more informative-- cool!
</p>
<p>
</p>
<p></p>
<!--kg-card-end: markdown-->
            </content>
<pubDate>2004-08-17T12:00:00.000Z</pubDate>
<guid>https://blog.codinghorror.com/throwing-better-soap-exceptions/</guid>
</item>
</channel>
</rss>
