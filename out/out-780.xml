<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
<channel>
<title>Coding Horror</title>
<description>programming and human factors</description>
<link>https://blog.codinghorror.com/</link>
<pubDate>Sun, 19 Apr 2020 00:00:01 GMT</pubDate>
<!-- other elements omitted from this example -->
<item>
<title>Software: It's a Gas</title>
<link>https://blog.codinghorror.com/software-its-a-gas/</link>
<content>
                <!--kg-card-begin: markdown--><p>
<a href="http://en.wikipedia.org/wiki/Nathan_Myhrvold">Nathan Myhrvold</a>, the former CTO of Microsoft, is also a bona-fide physicist. He holds physics degress from UCAL and Princeton. He even had a postdoctoral fellowship under the famous Stephen Hawking. Thus, as you might expect, his 1997 ACM keynote presentation, <a href="http://www.research.microsoft.com/acm97/nm/sld001.htm">The Next Fifty Years of Software</a> is full of physics and science metaphors.
</p>
<p>
It starts with Nathan's four Laws of Software:
</p>
<p>
</p>
<ol>
<li>
<b>Software is a gas</b><br>
Software always expands to fit whatever container it is stored in.
<p>
</p>
</li>
<li>
<b>Software grows until it becomes limited by Moore's Law</b><br>
The initial growth of software is rapid, like gas expanding, but is inevitably limited by the rate of increase in hardware speed.
<p>
</p>
</li>
<li>
<b>Software growth makes Moore's Law possible</b><br>
People buy new hardware because the software requires it.
<p>
</p>
</li>
<li>
<b>Software is only limited by human ambition and expectation</b><br>
We'll always find new algorithms, new applications, and new users.
</li>
</ol>
<p>
Myhrvold goes on to describe software development as a state of <b>Perpetual Crisis</b>. The size and complexity of software is constantly rising, with no limit in sight. As we develop more advanced software-- and as we develop solutions to manage the ever-increasing complexity of this software-- the benefits of the new software are absorbed by the rising tide of customer expectations. Software development will never be easy; new software always has to push against the current complexity boundary if it wants to be commercially successful.
</p>
<p>
This was all written in 1997. Nearly ten years later, are his points still valid? Software is certainly still a gas. Now that we're <a href="http://software.ericsink.com/entries/LarryO.html">entering the multi-core era</a>, there is one crucial difference. Historically hardware has gotten more complex because of limitations in the ability of software to scale; now the software needs to get more complex because of limitations in the ability of hardware to scale. <b>The burden of scaling now falls on the software.</b>
</p>
<p>
Myhrvold then makes an interesting point about the amount of storage required to capture human diversity. If..
</p>
<p>
</p>
<ul>
<li>the human Genome is approximately 1 gigabyte of data;
</li>
<li>the individual difference between any two humans is 0.25% of their Genome;
</li>
<li>we assume a lossless compression rate of 2:1;
</li>
</ul>
<p>
The individually unique part of the human Genome can be stored in ~1.2 megabytes. Thus, <b>you fit on a 3.5" floppy disk.</b>
</p>
<p>
In fact, the entirety of human genetic diversity for every living human being could be stored in a 3.7 terabyte drive array. And the entire genetic diversity of <i>every living thing on earth</i> could be stored in roughly the size of the internet circa 2001.
</p>
<p>
I'm not sure what that means, exactly, but I love the idea that I can fit myself on a 3.5" floppy disk.
</p>
<p>
</p>
<p></p>
<!--kg-card-end: markdown-->
            </content>
<pubDate>2006-09-06T12:00:00.000Z</pubDate>
<guid>https://blog.codinghorror.com/software-its-a-gas/</guid>
</item>
</channel>
</rss>
