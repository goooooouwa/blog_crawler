<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
<channel>
<title>Coding Horror</title>
<description>programming and human factors</description>
<link>https://blog.codinghorror.com/</link>
<pubDate>Sun, 19 Apr 2020 00:00:01 GMT</pubDate>
<!-- other elements omitted from this example -->
<item>
<title>Don't Use ZIP, Use RAR</title>
<link>https://blog.codinghorror.com/dont-use-zip-use-rar/</link>
<content>
                <!--kg-card-begin: markdown--><p>
When I wrote <a href="http://www.codinghorror.com/blog/archives/000735.html">Today is "Support Your Favorite Small Software Vendor Day"</a>, I made a commitment to spend at least $20 per month supporting my fellow independent software developers. <a href="http://www.win-rar.com/rarproducts.html">WinRAR</a> has become increasingly essential to my toolkit over the last year, so this month, <a href="http://www.win-rar.com/125.html?prod=winrar">I'm buying a WinRAR license</a>.
</p>
<p>
Sure, ZIP support is built into most operating systems, but the support is rudimentary at best. I particularly dislike the limited "compressed folder wizard" I get by default in XP and Vista. In contrast, WinRAR is full-featured, powerful, and integrates seamlessly with the shell. There's a reason <a href="http://www.donationcoder.com/Reviews/Archive/ArchiveTools/index.html">WinRAR won the best archive tool roundup at DonationCoder</a>. And WinRAR is very much a living, breathing piece of software. It's frequently updated with neat little feature bumps and useful additions; two I noticed over the last year were dual-core support and real-time stats while compressing, such as estimated compression ratio and predicted completion time.
</p>
<p>
WinRAR fully supports creating and extracting ZIP archives, so choosing WinRAR doesn't mean you'll be forced into using the RAR compression format. But you should use it, because <b>RAR, as a compression format, <i>clobbers</i> ZIP. It produces much smaller archives in roughly the same time</b>. If you're worried the person on the receiving end of the archive won't have a RAR client, you can create a self-extracting executable archive (or SFX) at a minimal cost of about 60 KB additional filesize.
</p>
<p>
RAR also supports <a href="http://www.win-rar.com/solidarchive.html">solid archives</a>, so it can exploit intra-file redundancies. ZIP does not. This is a big deal, because it can result in a substantially smaller archive when you're compressing a lot of files. When I <a href="http://www.codinghorror.com/blog/archives/000522.html">compressed all the C# code snippets</a>, the difference was enormous:
</p>
<p>
</p>
<table width="150">
<tr>
<td>ZIP</td>
<td align="right">229 KB
</td>
</tr>
<tr>
<td>RAR</td>
<td align="right">73 KB
</td>
</tr>
</table>
<p>
But even in an apples-to-apples comparison, RAR offers some of the very best "bang for the byte" of all compression algorithms. Consider this recent, comprehensive <a href="http://www.maximumcompression.com/data/summary_mf3.php">multiple file compression benchmark</a>. The author measured both compression size and compression time to produce an efficiency metric:
</p>
<p>
</p>
<blockquote>
The most efficient (read: useful) program is calculated by multiplying the compression time (in seconds) it took to produce the archive with the power of the archive size divided by the lowest measured archive size.
<p>
2 ^ (((Size/SmallestSize)) - 1) / 0.1) * ArchiveTime
</p>
<p>
The lower the score, the better. The basic idea is a compressor X has the same efficiency as compressor Y if X can compress twice as fast as Y and resulting archive size of X is 10% larger than size of Y.
</p>
</blockquote>
<p>
And sure enough, if you sort the results by efficiency, WinRAR rises directly to the top. Its scores of 1871 (Good) and 1983 (Best) rank third and fourth out of 200. The top two spots are held by an archiver I've never heard of, <a href="http://www.geocities.com/sbcarchiver/">SBC</a>.
</p>
<p>
</p>
<blockquote>
WinRAR and SBC 0.970 score very well on efficiency. Both SBC and WinRK are capable of compressing the 301 MB testset down to 82 MB [a ~73% compression ratio] in under 3 minutes. People looking for good (but not ultimate) and fast compression should have a look at those two programs.
</blockquote>
<p>
The <a href="http://www.maximumcompression.com/data/summary_mf3.php">raw data on the comparison page</a> is a little hard to parse, so I pulled the data into Excel and created some alternative views of it. Here's a graph of <b>compression ratio versus time</b>, sorted by compression ratio, for all compared archive programs:
</p>
<p>
<img alt="Compression Time vs. Compression Ratio graph" border="0" height="562" src="https://blog.codinghorror.com/content/images/uploads/2007/02/compressiontimeversusraei8.png" width="775">
</p>
<p>
What I wanted to illustrate with this graph is that beyond about 73% compression ratio, <a href="http://www.codinghorror.com/blog/archives/000313.html">performance falls off a cliff</a>. This is something I've <a href="http://www.codinghorror.com/blog/archives/000313.html">noted before</a> in previous compression studies.  You don't just hit the point of diminishing returns in compression, you slam into it like a brick wall. That's why <b>the time scale is logarithmic</b> in the above graph. Look at the massive differences in time as you move toward the peak compression ratio:
</p>
<p>
</p>
<table width="300">
<tr>
<td>72.58%</td>
<td align="right">02:54</td>
<td align="right">WinRAR 3.62
</td>
</tr>
<tr>
<td>75.24%</td>
<td align="right">11:20</td>
<td align="right">UHARC 0.6b
</td>
</tr>
<tr>
<td>77.16%</td>
<td align="right">30:38</td>
<td align="right">DRUILCA 0.5
</td>
</tr>
<tr>
<td>78.83%</td>
<td align="right">05:51:19</td>
<td align="right">PAQ8H
</td>
</tr>
<tr>
<td>79.70%</td>
<td align="right">08:30:03</td>
<td align="right">WinRK 3.0.3
</td>
</tr>
</table>
<p>
Note that I cherry-picked the most efficient archivers out of this data, so this represents <i>best case</i> performance. Is an additional two percent of compression worth taking five times longer? Is an additional four percent worth <i>ten</i> times longer? Under the right conditions, possibly. But the penalty is severe, and the reward miniscule.
</p>
<p>
If you're interested in crunching <a href="http://www.maximumcompression.com/data/summary_mf3.php">the multiple file compression benchmark study data</a> yourself, I converted it to a few different formats for your convenience:
</p>
<p>
</p>
<ul>
<li>
<a href="http://www.codinghorror.com/blog/files/compression-comparison-excel-file.zip">Download Excel spreadsheet</a> (36 KB)
</li>
<li>
<a href="http://spreadsheets.google.com/pub?key=pKxDW35algYclyZXMRfMLOA">Google Spreadsheet</a> (view-only)
</li>
<li>
<a href="http://spreadsheets.google.com/ccc?key=pKxDW35algYclyZXMRfMLOA&amp;hl=en_US">Google Spreadsheet</a> (editable, but need Google login)
</li>
</ul>
<p>
Personally, I recommend the Excel version. I had major performance problems with the Google spreadsheet version.
</p>
<p>
After poring over this data, I'm more convinced than ever. RAR offers a nearly perfect blend of compression efficiency and speed across all modern compression formats. And WinRAR is an exemplary GUI implementation of RAR. It's almost a no-brainer. Except in cases where backwards compatibility trumps all other concerns, <b>we should abandon the archaic ZIP format-- and switch to the power and flexibility of WinRAR.</b>
</p>
<p>
</p>
<p></p>
<!--kg-card-end: markdown-->
            </content>
<pubDate>2007-02-22T12:00:00.000Z</pubDate>
<guid>https://blog.codinghorror.com/dont-use-zip-use-rar/</guid>
</item>
</channel>
</rss>
