<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
<channel>
<title>Coding Horror</title>
<description>programming and human factors</description>
<link>https://blog.codinghorror.com/</link>
<pubDate>Sun, 19 Apr 2020 00:00:01 GMT</pubDate>
<!-- other elements omitted from this example -->
<item>
<title>On Interviewing Programmers</title>
<link>https://blog.codinghorror.com/on-interviewing-programmers/</link>
<content>
                <!--kg-card-begin: markdown--><p>How do you recognize talented software developers in a 30 minute interview? There's a <a href="http://www.artima.com/wbc/interprog.html">roundtable article</a> on this topic at Artima Developer with some good ideas from a group of well known developers:</p>
<ul>
<li>Explore an area of expertise </li>
<li>Have them critique something </li>
<li>Ask them to solve a problem (but not a puzzle) </li>
<li>Look at their code </li>
<li>Find out what books they read </li>
<li>Ask about a people problem </li>
<li>Bring them on for a trial basis </li>
</ul>
<p>Joel Spolsky has an opinion or two on <a href="http://www.joelonsoftware.com/articles/fog0000000073.html">interviewing developers</a>, which he summarizes as <strong>Smart/Gets Things Done</strong>:</p>
<ol>
<li>Introduction </li>
<li>Question about recent project </li>
<li>An Impossible Question </li>
<li>Write some C Functions </li>
<li>Are you satisfied with that code? </li>
<li>Design Question </li>
<li>The Challenge </li>
<li>Do you have any questions? </li>
</ol>
<p>I definitely don't agree with a few of the things Joel asks here –  particularly the low-level C functions. That may have been appropriate for the Excel developers Joel was hiring in 1997, but not these days. I'm also not a huge fan of those abstract impossible questions, eg, "how many optometrists are there in Seattle?", but I suppose that's a matter of taste. If you absolutely must, at least ask an impossible question that has some relevance to a problem your very real customers might encounter. I just can't muster any enthusiasm for completely random arbitrary problems in the face of so many <em>actual</em> problems.</p>
<p>Joel recently posted an update questioning the commonly held belief that <a href="http://www.joelonsoftware.com/items/2005/01/27.html">"we're only hiring the top 0.5%"</a>:</p>
<blockquote>It's pretty clear to me that just because you're hiring the top 0.5% of all applicants for a job, doesn't mean you're hiring the top 0.5% of all software developers. You could be hiring from the top 10% or the top 50% or the top 99% and it would still look, to you, like you're rejecting 199 for every 1 that you hire.
<p>By the way, it's because of this phenomenon  –  the fact that many of the great people are never on the job market  –  that we are so aggressive about hiring summer interns. This may be the last time these kids ever show up on the open market. In fact we hunt down the smart CS students and individually beg them to apply for an internship with us, because if you wait around to see who sends you a resume, you're already missing out.</p>
</blockquote>
<p>I concur. I've worked with a few interns who were amazing developers. It's a bit like playing the slots, but when you hit the jackpot, you win big. If your company isn't taking advantage of intern programs, start immediately.</p>
<p>Chris Sells also has a mini-blog of sorts <a href="http://www.sellsbrothers.com/fun/msiview/">entirely dedicated to interview questions and interview articles</a>; I highly recommend it. I'm glad  to hear that Microsoft doesn't ask those stupid puzzle questions any more. Who are they trying to hire, <a href="http://www.crosswordtournament.com/articles/ct0398.htm">Will Shortz</a>?</p>
<p>I have my own theory about the ideal way to interview developers: <strong>have the candidate give a 20 minute presentation to your team on their area of expertise.</strong> I think this is a far better indicator of success than a traditional interview, because you'll quickly ascertain..</p>
<ul>
<li>Is this person passionate about what they are doing? </li>
<li>Can they communicate effectively to a small group? </li>
<li>Do they have a good handle on their area of expertise? </li>
<li>Would your team enjoy working with this person? </li>
</ul>
<p>Jobs may come and go, but it's the people I've worked with that I always remember.</p>
<!--kg-card-end: markdown-->
            </content>
<pubDate>2005-03-01T12:00:00.000Z</pubDate>
<guid>https://blog.codinghorror.com/on-interviewing-programmers/</guid>
</item>
</channel>
</rss>
