<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
<channel>
<title>Coding Horror</title>
<description>programming and human factors</description>
<link>https://blog.codinghorror.com/</link>
<pubDate>Sun, 19 Apr 2020 00:00:01 GMT</pubDate>
<!-- other elements omitted from this example -->
<item>
<title>The Rise and Fall of Homo Logicus</title>
<link>https://blog.codinghorror.com/the-rise-and-fall-of-homo-logicus/</link>
<content>
                <!--kg-card-begin: markdown--><p>
Of all the professional hubris I've observed in software developers, perhaps the greatest sin of all is that <b>we consider ourselves typical users</b>. We use the computer obsessively, we know a lot about how it works, we even give advice to friends and relatives. We are experts. Who could possibly design software better than us superusers? What most developers don't realize is how freakishly outside the norm we are. We're not even remotely average-- we are the edge conditions. I've often told program managers: <a href="http://www.cooper.com/content/insights/newsletters/2003_08/Can_Programmers_Do_Interaction_Design.asp">if you are letting me design your software, your project is in trouble.</a>
</p>
<p>
In <a href="http://www.amazon.com/exec/obidos/ASIN/0672316498/codihorr-20">The Inmates Are Running the Aslum</a>, Alan Cooper labels this phenomenon <i>Homo Logicus</i>:
</p>
<p>
</p>
<blockquote>
Homo logicus desires to have control over things that interest them, and the things that interest them are complex, deterministic systems. People are complex, but they don't behave in a logical and predictable way, like machinery. The best machinery is digital, because it can be the most complex, sophisticated, and easily changed by the programmer.
<p>
The price of control is always more effort and increased complexity. Most people are willing to make a moderate effort, but what differentiates programmers from most people is their willingness and ability to master extreme complexity. It is a satisfying part of the programmer's job to know and manage systems composed of many interacting forces. Flying airplanes is the archetypal programmer's avocation. The cockpit control panel of an airplane is packed with gauges, knobs, and levers, but programmers thrive on those daunting complexities. Homo logicus finds it fun and engaging, despite (because of!) the months of rigorous study required. Homo sapiens would rather ride along as passengers.
</p>
<p>
For Homo logicus, control is their goal and complexity is the price they will pay for it. For normal humans, simplicity is their goal, and relinquishing control is the price they will pay. In software-based products, control translates into features. For example, in Windows 95, the "Find File" function gives me lots of control over the procedure. I can specify which area of my disk to search, the type of file to search for, whether to search by file name or by file contents, and several other parameters. From a programmer's point of view, this is very cool. For some extra up-front effort and understanding, he gets to make the search faster and more efficient. Conversely, the user's point of view is less rosy because he has to specify the area of the search, the type of file to search for, and whether to search by name or contents. Homo sapiens would gladly sacrifice the odd extra minute of compute time if they didn't have to know how the search function works. To them, each search parameter is just another opportunity to enter something incorrectly. The probability of making a mistake and the search function failing is higher, not lower, with the added flexibility. They would gladly sacrifice all that unnecessary complexity, control, and understanding in order to make their job simpler.
</p>
<p>
<b>Homo logicus are driven by an irresistible desire to understand how things work. By contrast, Homo sapiens have a strong desire for success.</b> While programmers also want to succeed, they will frequently accept failure as the price to pay for understanding. There's an old joke about engineers that gives some insight into this need to understand.
</p>
<p>
</p>
<blockquote><i>
Three people are scheduled for execution: a priest, an attorney, and an engineer. First, the priest steps up to the gallows. The executioner pulls the lever to drop the hatch, but nothing happens. The priest claims divine intervention and demands his release, so he is set free. Next, the attorney takes a stand at the gallows. The executioner pulls the lever, but again nothing happens. The attorney claims another attempt would be double jeopardy and demands release, so he is set free. Finally, the engineer steps up to the gallows, and begins a careful examination of the scaffold. Before the executioner can pull the lever, he looks up and declares, "Aha, here's your problem."
</i></blockquote>
</blockquote>
<p>
Cooper goes on to list a few more traits of Homo Logicus:
</p>
<ul>
<li>trades simplicity for control
</li>
<li>exchanges success for understanding
</li>
<li>focuses on what is possible to the exclusion of what is probable
</li>
<li>acts like a jock
</li>
</ul>
Pity the poor user, merely a Homo Sapiens, who isn't interested in computers or complexity; he just wants to get his job done.
<p>
Anybody can build a complex application that nobody can figure out how to use. That's easy. Building an application that's simple to use.. well, now that takes actual skill. I'm not sure you need high priced <a href="http://www.eleganthack.com/">interaction designers</a> to achieve this goal, but <b>you do have to stop thinking like Homo Logicus-- and start thinking like Homo Sapiens.</b>
</p>
<p>
</p>
<p></p>
<!--kg-card-end: markdown-->
            </content>
<pubDate>2004-09-27T12:00:00.000Z</pubDate>
<guid>https://blog.codinghorror.com/the-rise-and-fall-of-homo-logicus/</guid>
</item>
</channel>
</rss>
