<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
<channel>
<title>Coding Horror</title>
<description>programming and human factors</description>
<link>https://blog.codinghorror.com/</link>
<pubDate>Sun, 19 Apr 2020 00:00:01 GMT</pubDate>
<!-- other elements omitted from this example -->
<item>
<title>The Ultimate Unit Test Failure</title>
<link>https://blog.codinghorror.com/the-ultimate-unit-test-failure/</link>
<content>
                <!--kg-card-begin: markdown--><p>
We programmers are <a href="http://www.codinghorror.com/blog/archives/000490.html">obsessive by nature</a>. But I often get frustrated with the depth of our obsession over things like code coverage. Unit testing and code coverage are <a href="http://www.codinghorror.com/blog/archives/000640.html">good</a> <a href="http://www.codinghorror.com/blog/archives/000265.html">things</a>. But perfectly executed code coverage doesn't mean users will use your program. Or that it's even <i>worth</i> using in the first place. <b>When users can't figure out how to use your app, when users <a href="http://www.codinghorror.com/blog/archives/000882.html">pass over your app</a> in favor of something easier or simpler to use, <i>that's</i> the ultimate unit test failure.</b> <i>That's</i> the problem you should be trying to solve.
</p>
<p>
I want to run up to my fellow programmers and physically shake them: think bigger!
</p>
<p>
A perfect example of <i>thinking bigger</i> is Alan Cooper's <a href="http://interaction08.ixda.org/">Interaction 08</a> keynote, <b>An Insurgency of Quality</b>.
</p>
<p>
<a href="http://www.brightcove.tv/title.jsp?title=1416866797&amp;channel=1274129191"><img alt="Alan Cooper's Insurgency Talk video" border="0" class="at-xid-6a0120a85dcdae970b0120a86dbc15970b" height="279" src="https://blog.codinghorror.com/content/images/uploads/2008/02/6a0120a85dcdae970b0120a86dbc15970b-pi.jpg" width="374"></a>
</p>
<p>
There's <a href="http://ajaxian.com/archives/interaction08-ixds-in-savannah-alan-cooper">a transcript of his keynote available</a>, or you can <a href="http://www.brightcove.tv/title.jsp?title=1416866797&amp;channel=1274129191">view a video of his keynote video</a> with the slides in place.
</p>
<p>
Alan is a well known <a href="http://www.cooper.com/">interaction designer </a>, and the author of several classic books in the field, such as <a href="http://www.codinghorror.com/blog/archives/000897.html">About Face</a>, and a few others that are on my <a href="http://www.codinghorror.com/blog/archives/000020.html">recommended reading list</a>. In the Q&amp;A after the talk, he had this to say:
</p>
<p>
</p>
<blockquote>
"We are not very important because we don't cut code." (A boo and hiss from the audience.) In the world of high-technology, if you cut code, you control things. It's the power to destroy the spice, it's the power to control the spice. It's not a fine kind of control: it's bruce-force kind of things. [Interaction designers are] largely marginalized. We're constantly asking for permission from the folks who shouldn't be in a position to grant permission. We should be working with business folks and marshalling the technology to meet the solutions to business problems.
<p>
But when it comes time to marshal the solution to the problems, we find ourselves slamming into this kind of Stay-Puft Marshmallow Man of software development.
</p>
<p>
<img alt="Stay-Puft marshmallow man, from Ghostbusters" border="0" class="at-xid-6a0120a85dcdae970b0120a86dbc43970b" height="331" src="https://blog.codinghorror.com/content/images/uploads/2008/02/6a0120a85dcdae970b0120a86dbc43970b-pi.jpg" width="397">
</p>
<p>
<b>We don't need to change interaction design; we need to re-orient organizations to build things right.</b> When we come to programmers and say, "Look at the people I've talked to; look at the personas I've created" and present them with research, programmers understand that, and that's how we will influence.
</p>
</blockquote>
<p>
It pains me to hear that <b>Cooper considers most programmers twenty-story marshmallow barriers to good interaction design</b>. Please don't be one of those programmers. Learn about the science of interaction design. Pick up a copy of <a href="http://www.codinghorror.com/blog/archives/000377.html">Don't Make Me Think</a> as an introduction if you haven't already. There's a reason this book is at the top of my recommended reading list. Keep your unit testing and code coverage in perspective -- the <i>ultimate</i> unit test is whether or not users want to use your application. All the other tests you write are totally irrelevant until you can get that one to pass.
</p>
<p>
</p>
<p></p>
<!--kg-card-end: markdown-->
            </content>
<pubDate>2008-02-14T12:00:00.000Z</pubDate>
<guid>https://blog.codinghorror.com/the-ultimate-unit-test-failure/</guid>
</item>
</channel>
</rss>
