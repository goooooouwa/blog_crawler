<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
<channel>
<title>Coding Horror</title>
<description>programming and human factors</description>
<link>https://blog.codinghorror.com/</link>
<pubDate>Sun, 19 Apr 2020 00:00:01 GMT</pubDate>
<!-- other elements omitted from this example -->
<item>
<title>The Problem With Code Folding</title>
<link>https://blog.codinghorror.com/the-problem-with-code-folding/</link>
<content>
                <!--kg-card-begin: markdown--><p>
When you join a team, it's important to <b>bend your preferences a little to accommodate the generally accepted coding practices of that team.</b> Not everyone has to agree on every miniscule detail of the code, of course, but it's a good idea to dicuss it with your team and decide on overall approaches and philosophy beforehand. It promotes team harmony, and more than that, it's just common courtesy. As they say, <i><a href="http://en.wikipedia.org/wiki/When_in_Rome">when in Rome</a>, do as the Romans do.</i>
</p>
<p>
I've always been wary of cowboy coders who rolled into an ongoing project on fresh horses and immediately started dictating terms. It's a very short trip indeed from there to <a href="http://www.codinghorror.com/blog/archives/000992.html">Who Wrote This Crap</a>, and the predictable, inevitable finger-pointing at the foolhardy programmers who came before you begins. Don't be that guy or gal. <a href="http://www.yafla.com/dennisforbes/Effectively-Integrating-Into-Software-Development-Teams/Effectively-Integrating-Into-Software-Development-Teams.html">Work with your team</a>, not against it.
</p>
<p>
Still, there are some coding preferences people may feel.. <i>strongly</i>.. about. If that's the case, try to clear the air and address those strong preferences up front, as early as possible. Don't let them simmer. For me, the use of <a href="http://www.google.com/search?q=c%23+region">#region</a> is one of those things. I tried to make myself clear in <a href="http://twitter.com/codinghorror/statuses/837284151">this twitter message</a>:
</p>
<p>
<a href="http://twitter.com/codinghorror/statuses/837284151"><img alt="Twitter message from codinghorror about #regions" border="0" class="at-xid-6a0120a85dcdae970b012877705fc0970c" height="220" src="https://blog.codinghorror.com/content/images/uploads/2008/07/6a0120a85dcdae970b012877705fc0970c-pi.png" width="571"></a>
</p>
<p>
So what is <code>#region</code>? It's a named hint you place in C# or VB.NET code to set a <b>code folding point</b>. Any code placed inside that region is, by default, collapsed when you re-open it in the editor. Here's a random example from the <a href="http://logging.apache.org/log4net/download.html">Log4Net project</a>:
</p>
<p>
<img alt="C# region example, log4net.Util.NativeError" border="0" class="at-xid-6a0120a85dcdae970b012877705fd7970c" height="517" src="https://blog.codinghorror.com/content/images/uploads/2008/07/6a0120a85dcdae970b012877705fd7970c-pi.png" width="465">
</p>
<p>
Immediately I have a problem: <b>I can't see anything!</b> I have to manually expand those sections to browse any of the code in this class. It is possible to configure the Visual Studio IDE to not fold any of the regions when files are opened, but this is the out of box behavior, so that's what most developers will see. And of course there are keyboard shortcuts to deal with the regions:
</p>
<p>
</p>
<table cellpadding="4" cellspacing="4">
<tr>
<td>
Ctrl+M, Ctrl+M
</td>
<td>
Collapse or expand the block you're currently in.
</td>
</tr>
<tr>
<td>
Ctrl+M, Ctrl+O
</td>
<td>
Collapse all blocks in the file
</td>
</tr>
<tr>
<td>
Ctrl+M, Ctrl+L
</td>
<td>
Expand all blocks in the file
</td>
</tr>
<tr>
<td>
Ctrl+M, Ctrl+P
</td>
<td>
Stop outlining mode. (Ctrl+M, Ctrl+O resumes)
</td>
</tr>
</table>
<p>
Here's the really sick part: once you expand the above log4net code there's <b>literally three pages worth of code there!</b> After you strip out all the massive XMLDoc comments and the dozen or so #region directives, you <i>could</i> have had all the code at your fingertips with a minor flick of the mouse wheel, in a simple scrollable layout.
</p>
<p>
I daresay being able to <i>see the damn code</i> is more important than having it meticulously segmented into six pointless little named buckets, but apparently a lot of programmers can't get enough of stuffing their code into pointless little named buckets. It's as if they've forgotten what the scroll bar -- and <a href="http://www.codinghorror.com/blog/archives/000432.html">incremental search</a> -- is for.
</p>
<p>
The <code>#region</code> directive drives me bonkers. It's not evil, per se, but I feel it is criminally overused in practice and heavily prone to abuse. I strongly urge you to think about how you're using code folding, because as I see it, there are a lot of downsides:
</p>
<p>
</p>
<ol>
<li>
<b>Folding directives are glorified comments</b>. <code>#region</code> has zero meaning to the compiler; it's a hint to the editor to allow code folding. It doesn't do any namespacing or scoping. Why, exactly, are we writing code to accommodate the editor? It boggles my mind that we'd add significant lines of code to our project that do nothing but offer organizational hints to the editor. Even traditional comments are a better value for your keystroke, because they can be more expressive. And folding is certainly no substitute at all for bona-fide refactoring.
<p>
</p>
</li>
<li>
<b>Folding is used to sweep code under the rug</b>. Got a bunch of boring boilerplate code that makes your eyes water? A slew of ugly, gnarly code that nobody in their right mind wants to look at? Hide it in a region and fold that sucker into oblivion! Problem solved, right? Hardly. Your project is now full of crappy code that <i>you can't see</i>. That's worse. Much worse! Code that hides from you is code that will rot in the most putrescent and painful way possible. Your code should be front and center at all times -- exposed to as many programmers' eyes, and as much healing light, as possible.
<p>
</p>
</li>
<li>
<b>Folding is used to mask excessive length.</b> The presence of folded code can lull developers into a false sense of what clean code looks like. Under the cover of folding, you can end up writing long, horrible spaghetti code blocks. If the code needs the crutch of folding to <i>look</i> organized, it's bad code.
<p>
</p>
</li>
<li>
<b>Folding can hide deficiencies in your editor.</b> The presence of so-called "standard" boilerplate regions like "Public Constructors" and "Public Properties" and "Events" is not a feature. It's a bug. The editor should <i>automatically</i> offer to fold up these common structural blocks for you! I'm continually amazed that programmers spend time doing this scutwork when they could be writing useful code. Or at least demanding a smarter code editor.
</li>
</ol>
<p>
I urge developers to <b>write code that doesn't <i>need</i> folding to be readable, clear, and concise</b>. I'm sure there are sane uses for code folding out there somewhere, but I rarely see them.
</p>
<p>
</p>
<p></p>
<!--kg-card-end: markdown-->
            </content>
<pubDate>2008-07-06T12:00:00.000Z</pubDate>
<guid>https://blog.codinghorror.com/the-problem-with-code-folding/</guid>
</item>
</channel>
</rss>
