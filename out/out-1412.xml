<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
<channel>
<title>Coding Horror</title>
<description>programming and human factors</description>
<link>https://blog.codinghorror.com/</link>
<pubDate>Sun, 19 Apr 2020 00:00:01 GMT</pubDate>
<!-- other elements omitted from this example -->
<item>
<title>DEVELOPERS^3</title>
<link>https://blog.codinghorror.com/developers3/</link>
<content>
                <!--kg-card-begin: markdown--><p>
There's an <a href="http://www.webservicespipeline.com/23900832">interesting article</a> documenting the dramatic uptake of .NET
</p>
<blockquote>
<i>
Want more proof .Net is taking off? Consider the following: In May, Forrester Research released a report that found 56 percent of developers polled consider .Net their primary development environment for 2004, compared with 44 percent for J2EE. In certain verticals, the percentage gap grows even wider; for example, 65 percent of developers working on public-sector projects said .Net was their primary platform vs. 35 percent for J2EE, while 64 percent of business-services developers led with .Net over 36 percent who led with J2EE. In VARBusiness' own State of Application Development survey, also completed in May, 53 percent of solution providers polled reported developing a .Net application in the past year, and 66 percent said they planned to build one in the next 12 months.
</i><p>
"Frankly, we were surprised to see [.Net] as dominant as it was," says Nick Wilcox, a research analyst at Forrester.
</p>
<p>
Credit a down economy for something, if you will, but the fact is that much of the .Net adoption is fueled by a thirst for business efficiency. A grassroots legion of developers see .Net as their ticket to creating software they can get to market quickly and cheaply, a must in this continued era of short-term projects and calls for instant ROI. In VARBusiness' State of Application Development survey, the No. 1 and No. 2 reasons respondents said they chose .Net as their primary development platform were ease of use and quicker time to market, respectively.
</p>
</blockquote>
This really isn't surprising to me, for a couple reasons.
<ol>
<li>.NET has an incredible pedigree, particularly for those of us who were exposed to <a href="http://delphi.about.com/cs/azindex/a/dhistory.htm">Borland's Delphi</a> in 1995. Delphi was the darling of windows developers everywhere, and .NET is basically <b>Delphi Reloaded</b> (that's what you get when you <a href="http://sys-con.com/story/?storyid=38783">hire Anders Hejlsberg away from Borland</a>). It's even better!
</li>
<li>The Visual Studio .NET IDE is <u>the</u> gold standard in developer productivity. I'm not aware of any other IDE that even comes close. Yes, <b>the most usable product</b> is the one people end up using. Go figure.
</li>
<li>Where Microsoft goes, so go the Visual Basic developers-- the largest group of developers in the world.
</li>
</ol>
However, It was critical for Microsoft to get .NET out there when they did.  Java was threatening to take over the world with its (arguably, somewhat unrealistic) promises of open, platform agnostic development with a managed version of C. If Microsoft had been just a few years later with .NET, I think they would have run a very real risk of losing the bulk of enterprise developers, possibly forever. And in the end, what is it all about?
<p>
Just ask Steve Ballmer: <a href="http://www.stronglytyped.com/archives/2004/06/23/developers-developers-developers/">DEVELOPERS, DEVELOPERS, DEVELOPERS</a>. Own that mindshare, and you own the world. The great thing about .NET is that, whatever your opinion of company, Microsoft is gaining mindshare the old fashioned way: <b>by producing a quality product.</b> Gotta love that.
</p>
<p>
</p>
<p></p>
<!--kg-card-end: markdown-->
            </content>
<pubDate>2004-07-23T12:00:00.000Z</pubDate>
<guid>https://blog.codinghorror.com/developers3/</guid>
</item>
</channel>
</rss>
