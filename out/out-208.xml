<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
<channel>
<title>Coding Horror</title>
<description>programming and human factors</description>
<link>https://blog.codinghorror.com/</link>
<pubDate>Sun, 19 Apr 2020 00:00:01 GMT</pubDate>
<!-- other elements omitted from this example -->
<item>
<title>Scaling Up vs. Scaling Out: Hidden Costs</title>
<link>https://blog.codinghorror.com/scaling-up-vs-scaling-out-hidden-costs/</link>
<content>
                <!--kg-card-begin: markdown--><p>
In <a href="http://www.codinghorror.com/blog/archives/001195.html">My Scaling Hero</a>, I described the amazing scaling story of plentyoffish.com. It's impressive by any measure, but also particularly relevant to us because we're on the Microsoft stack, too. I was intrigued when Markus <a href="http://plentyoffish.wordpress.com/2009/06/14/upgrades-themes-date-night/">posted this recent update</a>:
</p>
<p>
</p>
<blockquote>
Last monday we upgraded our core database server after a power outage knocked the site offline. I haven't touched this machine since 2005 so it was a major undertaking to do it last minute. We upgraded from a machine with 64 GB of ram and 8 CPUs to <b>a HP ProLiant DL785 with 512 GB of ram and 32 CPUs</b> ...
</blockquote>
<p>
The <a href="http://h10010.www1.hp.com/wwpc/us/en/en/WF05a/15351-15351-3328412-241644-3328423-3716072.html">HP ProLiant DL785 G5</a> <i>starts</i> at $16,999 -- and that's barebones, with nothing inside. Fully configured, as Markus describes, it's <a href="http://h18004.www1.hp.com/products/quickspecs/13046_na/13046_na.html">kind of a monster</a>:
</p>
<p>
</p>
<ul>
<li>7U size (a typical server is 2U, and mainstream servers are often 1U)
</li>
<li>8 CPU sockets
</li>
<li>64 memory sockets
</li>
<li>16 drive bays
</li>
<li>11 expansion slots
</li>
<li>6 power supplies
</li>
</ul>
<p>
It's unclear if they bought it pre-configured, or added the disks, CPUs, and memory themselves. The most expensive configuration shown on the HP website is $37,398 and that includes only 4 processors, no drives, and a paltry 32 GB memory. When topped out with ultra-expensive 8 GB memory DIMMs, 8 high end Opterons, 10,000 RPM hard drives, and everything else -- by my estimates, it probably <b>cost closer to $100,000</b>. That might even be a lowball number, considering that <a href="http://www.tpc.org/results/individual_results/HP/HP_DL785_300G_11-17-2008_ES.pdf">the DL785 submitted to the TPC benchmark website</a> (pdf) had a "system cost" of $186,700. And that machine only had 256 GB of RAM. (But, to be fair, that total included another major storage array, and a bunch of software.)
</p>
<p>
At any rate, let's assume $100,000 is a reasonable ballpark for the monster server Markus purchased. It is the very definition of <b>scaling up</b> -- a seriously big iron single server.
</p>
<p>
But what if you <b>scaled out</b>, instead -- <a href="http://hadoop.apache.org/">Hadoop</a> or <a href="http://labs.google.com/papers/mapreduce.html">MapReduce</a> style, across lots and lots of inexpensive servers? After some initial configuration bumps, I've been happy with the inexpensive Lenovo ThinkServer RS110 servers we use. They're no match for that DL785 -- but they aren't exactly chopped liver, either:
</p>
<p>
</p>
<table width="400">
<tr>
<td>Lenovo ThinkServer RS110 barebones</td>
<td>$600</td>
</tr>
<tr>
<td>8 GB RAM</td>
<td>$100</td>
</tr>
<tr>
<td>2 x eBay <a href="http://www.codinghorror.com/blog/archives/001200.html">drive brackets</a>
</td>
<td>$50</td>
</tr>
<tr>
<td>2 x 500 GB SATA hard drives, mirrored</td>
<td>$100</td>
</tr>
<tr>
<td>Intel Xeon X3360 2.83 GHz quad-core CPU</td>
<td>$300</td>
</tr>
</table>
<p>
Grand total of <b>$1,150</b> per server. Plus another 10 percent for tax, shipping, and so forth. I replace the bundled CPU and memory that the server ships with, and then resell the salvaged parts on eBay for about $100 -- so let's call the total price per server $1,200.</p>
<p>
Now, assuming a <b>fixed spend of $100,000</b>, we could build <b>83</b> of those 1U servers. Let's compare what we end up with for our money:
</p>
<p>
</p>
<table width="400">
<tr>
<td> 
</td>
<td align="right">
<b>Scaling Up</b>
</td>
<td align="right">
<b>Scaling Out</b>
</td>
</tr>
<tr>
<td>CPUs
</td>
<td align="right">32
</td>
<td align="right">332
</td>
</tr>
<tr>
<td>RAM
</td>
<td align="right">512 GB
</td>
<td align="right">664 GB
</td>
</tr>
<tr>
<td>Disk
</td>
<td align="right">4 TB
</td>
<td align="right">40.5 TB
</td>
</tr>
</table>
<p>
<i>Now</i> which approach makes more sense?
</p>
<p>
(These numbers are a bit skewed because that DL785 is at the absolute extreme end of the big iron spectrum. You pay a hefty premium for fully maxxing out. It is possible to build a slightly less powerful server with <i>far</i> better bang for the buck.)
</p>
<p>
But there's something else to consider: software licensing.
</p>
<p>
</p>
<table width="400">
<tr>
<td> 
</td>
<td align="right">
<b>Scaling Up</b>
</td>
<td align="right">
<b>Scaling Out</b>
</td>
</tr>
<tr>
<td>OS
</td>
<td align="right">$2,310
</td>
<td align="right">$33,200*
</td>
</tr>
<tr>
<td>SQL
</td>
<td align="right">$8,318
</td>
<td align="right">$49,800*
</td>
</tr>
</table>
<p>
(If you're using all open source software, then of course these costs will be very close to zero. We're assuming a Microsoft shop here, with the necessary licenses for Windows Server 2008 and SQL Server 2008.)
</p>
<p>
<i>Now</i> which approach makes more sense?
</p>
<p>
What about the power costs? Electricity and rack space isn't free.
</p>
<p>
</p>
<table width="400">
<tr>
<td> 
</td>
<td align="right">
<b>Scaling Up</b>
</td>
<td align="right">
<b>Scaling Out</b>
</td>
</tr>
<tr>
<td>Peak Watts
</td>
<td align="right">1,200w
</td>
<td align="right">16,600w
</td>
</tr>
<tr>
<td>Power Cost / Year
</td>
<td align="right">$1,577
</td>
<td align="right">$21,815
</td>
</tr>
</table>
<p>
<i>Now</i> which approach makes more sense?
</p>
<p>
I'm not picking favorites. This is presented as food for thought. There are at least a dozen other factors you'd want to consider depending on the particulars of your situation. Scaling up and scaling out are <i>both</i> viable solutions, depending on what problem you're trying to solve, and what resources (financial, software, and otherwise) you have at hand.
</p>
<p>
That said, I think it's fair to conclude that <b>scaling out is only frictionless when you use open source software</b>. Otherwise, you're in a bit of a conundrum: scaling up means paying less for licenses and a lot more for hardware, while scaling out means paying less for the hardware, and a <i>whole</i> lot more for licenses.
</p>
<p>
<small>* I have <i>no</i> idea if these are the right prices for Windows Server 2008 and SQL Server 2008, because <a href="http://www.microsoft.com/Sqlserver/2005/en/us/licensing.aspx">reading about the licensing models makes my brain hurt</a>. If anything, it could be substantially more.</small>
</p>
<p>
</p>
<p></p>
<!--kg-card-end: markdown-->
            </content>
<pubDate>2009-06-23T12:00:00.000Z</pubDate>
<guid>https://blog.codinghorror.com/scaling-up-vs-scaling-out-hidden-costs/</guid>
</item>
</channel>
</rss>
