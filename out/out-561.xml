<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
<channel>
<title>Coding Horror</title>
<description>programming and human factors</description>
<link>https://blog.codinghorror.com/</link>
<pubDate>Sun, 19 Apr 2020 00:00:01 GMT</pubDate>
<!-- other elements omitted from this example -->
<item>
<title>Building a PC, Part III - Overclocking</title>
<link>https://blog.codinghorror.com/building-a-pc-part-iii-overclocking/</link>
<content>
                <!--kg-card-begin: markdown--><p>Now that we have <a href="http://www.codinghorror.com/blog/archives/000905.html">Scott Hanselman's computer</a> completely built up and stable -- or at least <a href="http://www.codinghorror.com/blog/archives/000907.html">that's what our torture tests told us yesterday</a>-- it's time to see how far we can overclock this system.</p>
<p>Overclocking a computer sounds complicated, but it really isn't. We'll use four tools:</p>
<p> </p>
<ol>
<li>The motherboard's BIOS settings </li>
<li>
<a href="http://www.cpuid.com/cpuz.php">CPU-Z</a> </li>
<li>
<a href="http://www.mersenne.org/freesoft.htm">Prime95</a> </li>
<li>
<a href="http://www.thecoolest.zerobrains.com/CoreTemp/">CoreTemp</a> </li>
</ol>
<p>While overclocking, <strong>CPU-Z will become your new best friend</strong>. It tells us exactly what's happening inside our PC. Let's start with a shot of CPU-Z showing the <strong>stock settings</strong> for this Core 2 Quad 6600.</p>
<p> </p>
<table>
<tbody>
<tr>
<td><img class="at-xid-6a0120a85dcdae970b012877701718970c" src="https://blog.codinghorror.com/content/images/uploads/2007/07/6a0120a85dcdae970b012877701718970c-pi.png" alt="CPU-Z, stock settings, EIST low" width="381" height="423"></td>
<td><img class="at-xid-6a0120a85dcdae970b012877701730970c" src="https://blog.codinghorror.com/content/images/uploads/2007/07/6a0120a85dcdae970b012877701730970c-pi.png" alt="CPU-Z, stock settings, EIST high" width="381" height="423"></td>
</tr>
</tbody>
</table>
<p> </p>
<p>The left side is idle, and the right side is under load. Notice how the system automatically and dynamically adjusts the multiplier and voltage (the areas highlighted in red) to reduce power consumption. On the Intel platform, this technique is known as <a href="http://en.wikipedia.org/wiki/SpeedStep">EIST</a>, Enhanced Intel SpeedStep Technology.</p>
<p>First, a little basic math. This Core 2 Quad is clocked at 2.4 GHz, or 2400 MHz. The CPU speed is a function of the front side bus speed times a multiplier.</p>
<p> </p>
<table cellspacing="4" cellpadding="4">
<tbody>
<tr>
<td>Bus Speed</td>
<td>Front Side Bus Speed</td>
<td>Multiplier</td>
<td> </td>
<td>CPU Speed</td>
</tr>
<tr>
<td>266 MHz</td>
<td>1066 MHz</td>
<td>x9</td>
<td>=</td>
<td>2400 MHz</td>
</tr>
<tr>
<td>266 MHz</td>
<td>1066 MHz</td>
<td>x6</td>
<td>=</td>
<td>1600 MHz</td>
</tr>
<tr>
<td>333 MHz</td>
<td>1333 MHz</td>
<td>x9</td>
<td>=</td>
<td><span style="color: red;">3000 MHz</span></td>
</tr>
</tbody>
</table>
<p> </p>
<p>As you can see, increasing the front side bus speed from 266 MHz to 333 Mhz increases the speed of the CPU. It's also theoretically possible to increase the CPU's speed by changing the multiplier, but Intel locked down multiplier changes years ago at the silicon level. So the only way to increase the CPU's speed is to increase the front side bus speed. (There are exceptions, but they're rare.)</p>
<p>Armed with that knowledge, let's go into the BIOS (by pressing DELETE while the system is booting) and start adjusting the CPU's speed. On the MSI P6N, the CPU speed options are tucked away under a menu titled "Cell Menu". This varies from BIOS to BIOS, but the gist of the settings is the same.</p>
<p><img class="at-xid-6a0120a85dcdae970b012877701749970c" src="https://blog.codinghorror.com/content/images/uploads/2007/07/6a0120a85dcdae970b012877701749970c-pi.jpg" alt="PC build, BIOS settings" width="759" height="576"></p>
<p>I covered overclocking briefly last year when I <a href="http://www.codinghorror.com/blog/archives/000697.html">built my last home computer</a>. The principles are still the same. To overclock, we simply <strong>bump up the front side bus speed from 1066 MHz to something larger</strong>. To give ourselves additional headroom for overclocking, we also need to bump up the memory and CPU voltages a tad.</p>
<p>Note that this particular motherboard allows me to overclock the CPU front side bus independently of the memory front side bus. The memory bus speed is expressed as a ratio of the FSB, eg, 5:4 or 3:2. Modern motherboards offer a wide range of ratios, so almost any memory bus speed is achievable within a few MHz. I had terrible results overclocking the memory in this system, so the memory is staying locked at its stock 800 MHz speed.</p>
<p>Successful overclocking is a game of inches, not yards. Start small. Increase voltage slightly and the FSB slightly, then reboot. Remember-- we started from a stable system. <strong>If your system shows any sign of instability, no matter how small, you've definitely overclocked too far.</strong></p>
<p>And if your system fails to boot, or if you can't enter the BIOS to set things back, don't fret. This is why vendors include the "reset CMOS" function on the motherboard. On the MSI P6N, it's a small button; on other motherboards it's a jumper. If all else fails, you can also pop out the CMOS battery and let the system sit for a minute or so. That'll definitely clear the BIOS settings. <span style="color: red;">However, make sure you disconnect the power <em>before</em> clearing the CMOS</span>.</p>
<p><img class="at-xid-6a0120a85dcdae970b012877701776970c" src="https://blog.codinghorror.com/content/images/uploads/2007/07/6a0120a85dcdae970b012877701776970c-pi.jpg" alt="PC build, CMOS reset button" width="500" height="425"></p>
<p>If you successfully boot into Windows, that doesn't mean your overclock is stable. You have to run Prime95 torture test for at <em>least</em> an hour to see if things are truly working, and ideally overnight to be completely sure.</p>
<p>Overclocking ability varies widely per sample of CPU and even per motherboard. Some overclock well, some don't. It's largely the luck of the draw, although most Core 2 chips have reputations as solid overclockers for good reason. The Core 2 Quad Q6600 and MSI P6N combo in <em>this</em> system were able to deliver a <strong>successful overclock from 2.4 GHz to 3.0 GHz</strong>, as shown in this CPU-Z screenshot:</p>
<p><img class="at-xid-6a0120a85dcdae970b012877701797970c" src="https://blog.codinghorror.com/content/images/uploads/2007/07/6a0120a85dcdae970b012877701797970c-pi.png" alt="PC build, overclocked CPU-Z results" width="382" height="424"></p>
<p>But <strong>is it stable?</strong> I ran four instances of Prime95 torture test, alongside CoreTemp to make sure the CPU temperatures stayed under control. CPU temperatures are the enemy of speed-- all other things being equal, the higher the CPU temperature, the less likely it is your system will be stable. (This is also why extreme overclockers use water cooling and liquid nitrogen.) That's one reason why we have a fancy aftermarket CPU cooler.</p>
<p>Once the torture test is running, you can minimize Prime95. The taskbar icon should stay <span style="color: red;">red</span> if things are working properly. If you see a yellow icon, that means Prime95 bombed out and your overclock isn't stable.</p>
<p><img class="at-xid-6a0120a85dcdae970b0128777017a2970c" src="https://blog.codinghorror.com/content/images/uploads/2007/07/6a0120a85dcdae970b0128777017a2970c-pi.jpg" alt="PC build, overclocking torture test" width="786" height="522"></p>
<p>After a few hours of heavy Prime95 load on each core, I was satisfied that the system was nominally stable.</p>
<p>Here are the benchmark results reflecting the newly overclocked CPU:</p>
<p><img class="at-xid-6a0120a85dcdae970b0128777017aa970c" src="https://blog.codinghorror.com/content/images/uploads/2007/07/6a0120a85dcdae970b0128777017aa970c-pi.png" alt="PC build, overclocking windows experience score" width="563" height="178"></p>
<p> </p>
<table cellspacing="4" cellpadding="4">
<tbody>
<tr>
<td> </td>
<td>Stock</td>
<td>Overclocked</td>
</tr>
<tr>
<td>
<a href="http://www.futuremark.com/download/3dmark06/">3DMark2006</a> (@1024x768)</td>
<td>7217</td>
<td>7398</td>
</tr>
<tr>
<td><a href="http://www.futuremark.com/download/pcmark05/">PCmark2005</a></td>
<td>7353</td>
<td>8432</td>
</tr>
</tbody>
</table>
<p> </p>
<p>Yes, overclocking is a lot of manual effort, a lot of tedious trial and error tweaking. Is the risk of instability and all that effort worth it for a tiny speed bump? Why bother? Well, judge for yourself:</p>
<p> </p>
<table cellspacing="4" cellpadding="4">
<tbody>
<tr>
<td>Core 2 Quad Q6600 (stock)</td>
<td>2.40 GHz</td>
<td align="right">$480</td>
</tr>
<tr>
<td>Core 2 Extreme QX6800</td>
<td>2.93 GHz</td>
<td align="right">$1,345</td>
</tr>
<tr>
<td>Core 2 Quad Q6600 (overclocked)</td>
<td>3.0 GHz</td>
<td align="right">$480</td>
</tr>
</tbody>
</table>
<p> </p>
<p>I'd say <strong>saving nearly a thousand bucks</strong> is a pretty good argument in favor of overclocking.</p>
<!--kg-card-end: markdown-->
            </content>
<pubDate>2007-07-11T12:00:00.000Z</pubDate>
<guid>https://blog.codinghorror.com/building-a-pc-part-iii-overclocking/</guid>
</item>
</channel>
</rss>
