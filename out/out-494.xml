<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
<channel>
<title>Coding Horror</title>
<description>programming and human factors</description>
<link>https://blog.codinghorror.com/</link>
<pubDate>Sun, 19 Apr 2020 00:00:01 GMT</pubDate>
<!-- other elements omitted from this example -->
<item>
<title>Virtual Machine Server Hosting</title>
<link>https://blog.codinghorror.com/virtual-machine-server-hosting/</link>
<content>
                <!--kg-card-begin: markdown--><p>
My employer, <a href="http://www.vertigo.com/">Vertigo Software</a>, graciously hosted this blog for the last year. But as blog traffic has grown, it has put a noticeable and increasing strain on our bandwidth. Even on an average day, blog traffic consumes a solid 30 percent of our internet connection-- and much more if <a href="http://www.codinghorror.com/blog/archives/000781.html">something happens to be popular</a>. And that's <i>after</i> factoring in <a href="http://www.codinghorror.com/blog/archives/000807.html">all the bandwidth-reducing tricks I could think of</a>.
</p>
<p>
While I greatly appreciate my employer's generosity, I don't like causing all my coworkers' internet connections to slow to a crawl. So when my friend and <a href="http://www.codinghorror.com/blog/archives/000971.html">co-author</a> Phil Haack mentioned that we could share a dedicated server through a contact of his, I jumped at the chance.
</p>
<p>
I'm a <a href="http://www.codinghorror.com/blog/archives/000491.html">big believer in virtualization</a>, so I wanted a beefy physical server that could handle running at least four virtual servers. And I wanted it to run a 64-bit host operating system, as <a href="http://www.codinghorror.com/blog/archives/000435.html">64-bit offers huge performance benefits for servers</a>. Nobody in their right mind should build up a 32-bit server today.
</p>
<p>
The contact he was referring to works at <a href="http://crystaltech.com/dedicated-windows.aspx?uid=101">CrystalTech</a>. And boy, did CrystalTech <i>ever</i> hook us up:
</p>
<p>
</p>
<ul>
<li>Windows Server 2003 R2 x64
</li>
<li>Quad-core Xeon X3210 @ 2.13 Ghz
</li>
<li>4 GB RAM
</li>
<li>300 GB RAID-5 array
</li>
</ul>
<p>
Not too shabby. It is, of course, an obscene amount of power for our relatively modest needs. Have I mentioned how much I like my new friends at CrystalTech? Or what <a href="http://crystaltech.com/dedicated-windows.aspx?uid=101">great deals they have on hosting?</a>
</p>
<p>
<a href="http://crystaltech.com/dedicated-windows.aspx?uid=101"><img alt="Powered by CrystalTech" border="0" class="at-xid-6a0120a85dcdae970b0120a86dae37970b" height="150" src="https://blog.codinghorror.com/content/images/uploads/2007/10/6a0120a85dcdae970b0120a86dae37970b-pi.gif" width="150"></a>
</p>
<p>
But in all seriousness, it's effectively a new sponsor for this blog, so welcome aboard.
</p>
<p>
I was already hosting this server as a VM, so here's what I did to switch over to completely new hardware:
</p>
<p>
</p>
<ol>
<li>shut down my VM
</li>
<li>compacted and compressed it
</li>
<li>transferred it to the new server
</li>
<li>booted it up again
</li>
</ol>
<p>
All I had to do was change the IP address in the VM and I was up and running as if nothing had changed. That's the easiest server migration I've ever experienced, all thanks to virtualization.
</p>
<p>
Phil and I are both Windows ecosystem developers, so we went with what we knew. But virtualization provides total flexibility. I could spin up a new Linux server at a moment's notice if I decided to switch this blog over to the LAMP stack. Or I could play with the latest release candidate of Windows Server 2008. And they can all run in parallel, assuming we have enough memory. That's what I love most about virtualization-- the freedom.
</p>
<p>
Although Phil and I share admin access to the host machine, we have our own private playgrounds in our virtual servers. We're completely isolated from each other's peculiarities and weirdnesses: nothing we do (well, <i>almost</i> nothing) can affect the other person's virtual machine. Reboot? No problem. Install some stupid software I can't stand? Go for it. Format the drive and start over? Don't care. It's your machine. Do whatever.
</p>
<p>
The only downside to virtual machine server hosting is that <b>it can be difficult to share IPs between virtual machines</b>. CrystalTech has provided us with a block of 6 public IP addresses, so fortunately we don't have to worry about this. One IP is occupied by the host, but that still leaves five IPs for virtual machines of our creation. That's plenty.
</p>
<p>
But let's say we only had two public IP addresses-- or we wanted to run lots and lots of virtual machines with a small pool of public IP addresses. What then?  How could <a href="http://www.codinghorror.com/blog/">codinghorror.com</a> and <a href="http://haacked.com/">haacked.com</a> share the same IP address (and port 80), when they're on two different virtual machines? They clearly can't occupy the same IP.
</p>
<p>
</p>
<pre>
codinghorror.com   10.0.0.1:80
haacked.com        10.0.0.1:80
</pre>
<p>
On a single physical server, the answer is easy-- <a href="http://httpd.apache.org/docs/1.3/vhosts/">virtual hosting</a>, or <a href="http://www.microsoft.com/technet/prodtechnol/WindowsServer2003/Library/IIS/288bd8ef-c12d-43bc-9b66-264bc572c87a.mspx?mfr=true">host header routing</a>. But that requires our websites to live side by side on the same server. Phil and I don't share our wives, so why would we share a server? No offense intended to either of our wives-- or our respective servers-- but sharing is an unacceptable solution. I like you, Phil... but not <i>that</i> much.
</p>
<p>
If you want two different machines (physical or virtual) to share an IP, it takes some clever trickery. In the Windows ecosystem, that clever trickery often comes in the form of Microsoft's <a href="http://www.microsoft.com/isaserver/default.mspx">ISA Server</a>. (I'm not sure what the open source equivalent is, but I'm confident it's out there.)
</p>
<p>
ISA Server acts as our public interface to the world, talking through a public IP address. All DNS entries, and thus HTTP traffic, would be directed to that single public IP address. As our gatekeeper, ISA Server is in a unique position to do lots of cool stuff for us, like firewalling, caching, and so on. But we only care about one particular feature right now: the ability to share an IP address between multiple machines. This is known as a "web rule" in ISA parlance. With appropriate web rules in effect for both of our sites, ISA Server will shuttle the HTTP requests back and forth to the correct private IP addresses based on the host headers. It basically extends the host header routing concepts we saw in Apache and IIS outside the confines of a particular machine.
</p>
<p>
</p>
<pre>
ISA Server         10.0.0.1:80
codinghorror.com   192.168.0.1:80
haacked.com        192.168.0.2:80
</pre>
<p>
That's one way you can host fifty websites, all running on fifty different machines, with a single public IP address. It's a very clever trick indeed. Unfortunately, ISA Server isn't the simplest of products to configure and administer. I'm glad we have enough public IPs that we don't have to worry about sharing them between multiple machines. But it's definitely something you should be aware of, as virtual servers become increasingly commonplace.. and <a href="http://www.networkworld.com/news/2007/062807-ipv6-deadline.html">the pool of available IP addresses continues to dwindle</a>.
</p>
<p>
</p>
<p></p>
<!--kg-card-end: markdown-->
            </content>
<pubDate>2007-10-23T12:00:00.000Z</pubDate>
<guid>https://blog.codinghorror.com/virtual-machine-server-hosting/</guid>
</item>
</channel>
</rss>
