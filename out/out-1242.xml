<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
<channel>
<title>Coding Horror</title>
<description>programming and human factors</description>
<link>https://blog.codinghorror.com/</link>
<pubDate>Sun, 19 Apr 2020 00:00:01 GMT</pubDate>
<!-- other elements omitted from this example -->
<item>
<title>RegexBuddy and Friends</title>
<link>https://blog.codinghorror.com/regexbuddy-and-friends/</link>
<content>
                <!--kg-card-begin: markdown--><p>
Jan Goyvaerts released a new version of <a href="http://www.regexbuddy.com/cgi-bin/affref.pl?aff=jatwood">RegexBuddy</a> today. I've talked about this tool <a href="http://www.codinghorror.com/blog/archives/000027.html">before</a>-- it's easily the best regex tool available. Some feature highlights <a href="http://www.regexbuddy.com/cgi-bin/affref.pl?aff=jatwood&amp;targeturl=history.html">for this version</a> are:
</p>
<ul>
<li>Built in <b>GREP tool</b>
</li>
<li>Visual <b>regular expression debugging</b> support
</li>
<li>Full unicode support
</li>
</ul>
<p>
The GREP tool is an unexpected bonus; it's a mini version of his full <a href="http://www.powergrep.com/cgi-bin/affref.pl?aff=jatwood">PowerGrep</a> application, which I use occasionally. GREP is a natural (and very UNIX-y) progression once you've mastered regular expressions; consider the utility of regexes on files and folders instead of strings and you've got the idea. Jan also maintains the excellent and free <a href="http://www.regular-expressions.info/">www.regular-expressions.info</a> tutorial site. It's a great reference.
</p>
<p>
Have you noticed that <b>the Visual Studio .NET find dialog supports regular expression searches</b>? That's the good news. The bad news is, Microsoft decided to use <a href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/vsintro7/html/vxgrfregularexpressionss.asp">bizarro world regular expression syntax</a>. Many of the key regex tokens are the same, but they behave in ways I wouldn't expect from a regex search. For example, searching for "[a-z]+" results in a match on entire words, but it <i>also</i> results in per-character matches in the word unless you tick the "Match whole word" option. So be prepared for some trial and error. Why couldn't Microsoft just use standard regex syntax, like the built in .NET regex classes? If it's a compatibility issue, why not let us select between bizarro and standard regex syntax? I also heard that the VS.NET 2005 find dialog has the same problem, which is disappointing.
</p>
<p>
There is at least one add-in that provides <a href="http://www.codeproject.com/csharp/SearcherAddIn.asp">standard regex find support in VS.NET 2003</a>. I've tried it, and it needs a bit of polishing, but it's functional.
</p>
<p>
</p>
<p></p>
<!--kg-card-end: markdown-->
            </content>
<pubDate>2005-01-25T12:00:00.000Z</pubDate>
<guid>https://blog.codinghorror.com/regexbuddy-and-friends/</guid>
</item>
</channel>
</rss>
