<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
<channel>
<title>Coding Horror</title>
<description>programming and human factors</description>
<link>https://blog.codinghorror.com/</link>
<pubDate>Sun, 19 Apr 2020 00:00:01 GMT</pubDate>
<!-- other elements omitted from this example -->
<item>
<title>Training Your Users</title>
<link>https://blog.codinghorror.com/training-your-users/</link>
<content>
                <!--kg-card-begin: markdown--><p>
When it comes to user interface design, I'm no guru, but I do have one golden rule that I always try to follow:
</p>
<p>
</p>
<blockquote>
Make the right thing easy to do and the wrong thing awkward to do.
</blockquote>
<p>
The things you <i>want</i> users to do should be straightforward and clear -- as simple as <a href="http://www.codinghorror.com/blog/archives/000940.html">falling into the pit of success</a>. Make your software easy to use. Duh. Everyone knows that. The less obvious part of this rule is that <b>sometimes there are things you <i>don't</i> want users to do</b>. In those cases, you actually want your application, or at least certain areas of it, to be <i>harder to use</i>. For example, operations that are risky or dangerous should take more steps.
</p>
<p>
What you're doing with this design technique is <a href="http://www.nytimes.com/2006/06/25/fashion/25love.html?_r=2">training your users</a>:
</p>
<p>
</p>
<blockquote>
The central lesson I learned from exotic animal trainers is that I should reward behavior I like and ignore behavior I don't. After all, you don't get a sea lion to balance a ball on the end of its nose by nagging.
</blockquote>
<p>
When you make features easy to use, you are <b>rewarding user behavior you like</b>. You are guiding users through your application, giving them a clear and obvious path of least resistance. And when you intentionally choose <i>not</i> to make a feature easy to use, you are effectively <b>ignoring user behavior you don't like</b>. You are indirectly discouraging users from utilizing those features.
</p>
<p>
<img alt="poster trained seals" border="0" class="at-xid-6a0120a85dcdae970b0120a86e17ce970b" height="490" src="https://blog.codinghorror.com/content/images/uploads/2009/04/6a0120a85dcdae970b0120a86e17ce970b-pi.jpg" width="401">
</p>
<p>
If you aren't taking advantage of both techniques in your user interface -- rewarding with simplicity, and (judiciously) ignoring with complexity where necessary -- you aren't properly <b>training your users</b>.
</p>
<p>
</p>
<p></p>
<!--kg-card-end: markdown-->
            </content>
<pubDate>2009-04-09T12:00:00.000Z</pubDate>
<guid>https://blog.codinghorror.com/training-your-users/</guid>
</item>
</channel>
</rss>
