<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
<channel>
<title>Coding Horror</title>
<description>programming and human factors</description>
<link>https://blog.codinghorror.com/</link>
<pubDate>Sun, 19 Apr 2020 00:00:01 GMT</pubDate>
<!-- other elements omitted from this example -->
<item>
<title>Automated Continuous Integration and the BetaBrite LED Sign</title>
<link>https://blog.codinghorror.com/automated-continuous-integration-and-the-betabrite-led-sign/</link>
<content>
                <!--kg-card-begin: markdown--><p>
In the spirit of <a href="http://www.artima.com/weblogs/viewpost.jsp?thread=67492">Java Lava Lamp build monitoring</a>:
</p>
<blockquote>
<i>
A few months ago, on April 1 2004 to be precise, I posted <a href="http://www.developertesting.com/managed_developer_testing/000036.html">an article on eXtreme Feedback</a>.
</i><p>
The article was on a relatively serious subject: "How do you get your team to pay attention to the software/project status and metrics that you care about?", but one of my solutions for getting the team to pay attention was to "invent" and implement eXtreme Feedback Devices (XFDs) that would be very visible, fun, and hard to ignore.
</p>
<p>
One of these XFDs consists of a pair of Lava lamps (one green and one red) remotely connected to our build and test system in such a way that <b>a successful build (all tests pass) turns on the green lava lamp, and a failed build (or failed tests) turns on the red one</b>.
</p>
<p>
The original Java Lava Lamps have been glowing red and green for the past several months in our offices, and have achieved something of a cult status. They are included in Mike Clark's excellent book <a href="http://www.amazon.com/exec/obidos/ASIN/0974514039/002-1437771-2723220">Pragmatic Project Automation</a>, and have recently received a fair amount of <a href="http://developers.slashdot.org/developers/04/08/26/1550255.shtml">buzz on Slashdot</a>.
</p>
<p>
The interesting thing, for me, is that something that I started as something of a joke (it was April 1st after all) actually turned out to be a very useful tool in more ways than one. Sure, I could go to our CruiseControl page to see if they build is broken, or set-up email alerts, but keeping track of the lamps (which are centrally located in our development area) is easier, faster, and gives me an ongoing view into the current status and ebb-and-flow of our build and test cycles.
</p>
</blockquote>
<p>
And Michael Swanson's <a href="http://blogs.msdn.com/mswanson/articles/169058.aspx">Automated Continuous Integration and the Ambient Orb</a>:
</p>
<p>
</p>
<blockquote>
<i>
So I had this idea that we could configure <a href="http://www.ambientdevices.com/cat/orb/">an Ambient Orb</a> to reflect the current status of our <a href="http://www.microsoft.com/presspass/features/2004/Jan04/01-21NxOpinion.asp">NxOpinion</a> continuous integration build. <b>A slowly pulsing green would mean that the build is currently okay, and a quickly pulsing red would indicate a build failure. I planned to put the Orb in the middle of our project team so that everyone would be aware of the build status.</b> I hoped that by raising its visibility, everyone on the project team (including the customer) would be more aware of the project "health."
</i><p>
Now, when the build breaks and the Orb pulses red, it's like a fire alarm around here. The first question out of everyone's mouth is "who broke it?" After appropriate developer guilt has been piled on by the development team (all in good fun, of course), it's usually a relatively trivial matter to discover and fix the problem. Because we continuously integrate our code and the automated build potentially runs every 15 minutes, determining what caused the failure is as simple as looking at what has been checked-in since the last successful build. Fortunately, CruiseControl.NET includes this information (along with check-in comments) in its e-mail and web page summaries.
</p>
<p>
To-date, our solutions contain approximately 175,000 lines of C# code and over 600 unit tests. Since we consider the failure of a single unit test to be a failure of the entire build, if one test fails, the Orb pulses red. As you'd guess, CruiseControl.NET also includes unit test results in its e-mail and web page summaries which makes it easy to identify the problem.
</p>
</blockquote>
<p>
These things are all cool, but I think we can do better. I've been playing with the <a href="http://www.betabrite.com/Pages/products.htm">BetaBrite one-line electronic LED sign</a>:
</p>
<p>
<img alt="BetaBrite LED sign" class="at-xid-6a0120a85dcdae970b0128776fb901970c" height="138" src="https://blog.codinghorror.com/content/images/uploads/2005/03/6a0120a85dcdae970b0128776fb901970c-pi.jpg" width="470">
</p>
<p>
This thing, for my money (and it was my money, for the record) beats the heck out of retro-kitsch novelty status indicators. You can put full text build status information on there, in eight colors and 12 different font styles. Including animations! It's way cool; I have yet to see someone walk by my desk who isn't mesmerized by its hypnotic animation and colors. <a href="http://www.samsclub.com/eclub/main_shopping.jsp?oidPath=0%3a-23541%3a-28666%3a-38016%3a-38020%3a718800">Sam's Club has the BetaBrite sign</a> for a reasonable $160, and that includes the serial communication cable, remote, and software.
</p>
<p>
I'm currently working on some .NET classes that wrap a BetaBrite-specific subset of the <a href="http://www.ams-i.com/Pages/97088061.htm">Alpha Sign Communications Protocol</a>. This requires serial communication via a 25 or 50 foot <a href="http://wls.wwco.com/ledsigns/alpha/cable.html">RS-232 serial to RJ-12 cable</a>, so you'll need a physical PC with either a serial port or a USB-to-Serial adapter to get this working.
</p>
<p>
With the flexibility of the BetaBrite, <a href="http://www.martinfowler.com/articles/continuousIntegration.html">Continous Integration</a> monitoring is merely the tip of the iceberg:
</p>
<p>
</p>
<ul>
<li>Show webtrends style reporting in real time for your website
</li>
<li>List exceptions and errors as they occur
</li>
<li>Monitor server load, network throughput in realtime
</li>
<li>List checkins by developer name as items are checked in
</li>
</ul>
<p>
I can't make any promises, but this could just be <a href="http://www.geekspeakweekly.com/cowbell/">that extra bit of cowbell</a> your project needs to succeed.
</p>
<p>
</p>
<p></p>
<!--kg-card-end: markdown-->
            </content>
<pubDate>2005-03-13T12:00:00.000Z</pubDate>
<guid>https://blog.codinghorror.com/automated-continuous-integration-and-the-betabrite-led-sign/</guid>
</item>
</channel>
</rss>
