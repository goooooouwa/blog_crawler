<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
<channel>
<title>Coding Horror</title>
<description>programming and human factors</description>
<link>https://blog.codinghorror.com/</link>
<pubDate>Sun, 19 Apr 2020 00:00:01 GMT</pubDate>
<!-- other elements omitted from this example -->
<item>
<title>Of Spaces, Underscores and Dashes</title>
<link>https://blog.codinghorror.com/of-spaces-underscores-and-dashes/</link>
<content>
                <!--kg-card-begin: markdown--><p>I try to avoid using spaces in filenames and URLs. They're great for human readability, but they're remarkably inconvenient in computer resource locators:</p>
<ol>
<li>
<p>A filename with spaces has to be surrounded by quotes when referenced at the command line:</p>
<pre><code> XCOPY "c:\test files\reference data.doc" d:
 XCOPY c:\test-files\reference-data.doc d:
</code></pre>
</li>
<li>
<p>Any spaces in URLs are converted to the encoded space character by the web browser:</p>
<pre><code> http://domain.com/test%20files/reference%20data.html
 http://domain.com/test-files/reference-data.html
</code></pre>
</li>
</ol>
<p>So it behooves us to <b>use something other than a space in file and folder names</b>. Historically, I've used underscore, but I recently discovered that <b>the correct character to substitute for space is the dash</b>. Why?</p>
<p>The short answer is, <a href="http://weblog.philringnalda.com/2004/04/22/underscores-are-bad-mmkay">that's what Google expects</a>:</p>
<blockquote>
<p>If you use an underscore '_' character, then Google will combine the two words on either side into one word. So <code>bla.com/kw1_kw2.html</code> wouldn't show up by itself for kw1 or kw2. You'd have to search for <code>kw1_kw2</code> as a query term to bring up that page.</p>
</blockquote>
<p>The slightly longer answer is, <a href="http://www.regular-expressions.info/charclass.html">the underscore is traditionally considered a word character by the w regex operator</a>.</p>
<p>Here's <a href="http://www.regexbuddy.com/cgi-bin/affref.pl?aff=jatwood">RegexBuddy</a> <b>matching the w operator against multiple ASCII character sets</b>:</p>
<img alt="Result of a regex match for w (word characters)" height="293" src="https://blog.codinghorror.com/content/images/uploads/2006/04/6a0120a85dcdae970b0120a86d590f970b-pi.png" width="590">
<p>As you can see, the dash is not matched, but underscore is. <b><code>This_is_a_single_word</code>, but <code>this-is-multiple-words</code></b>.</p>
<p>Like NutraSweet and Splenda, neither is really an <i>acceptable</i> substitute for a space, but we might as well follow the established convention instead of inventing our own. That's how we <a href="http://blogs.msdn.com/larryosterman/archive/2005/06/24/432386.aspx">ended up with the backslash as a path separator</a>.</p>
<!--kg-card-end: markdown-->
            </content>
<pubDate>2006-04-26T12:00:00.000Z</pubDate>
<guid>https://blog.codinghorror.com/of-spaces-underscores-and-dashes/</guid>
</item>
</channel>
</rss>
