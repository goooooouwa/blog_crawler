<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
<channel>
<title>Coding Horror</title>
<description>programming and human factors</description>
<link>https://blog.codinghorror.com/</link>
<pubDate>Sun, 19 Apr 2020 00:00:01 GMT</pubDate>
<!-- other elements omitted from this example -->
<item>
<title>Typography: Where Engineers and Designers Meet</title>
<link>https://blog.codinghorror.com/typography-where-engineers-and-designers-meet/</link>
<content>
                <!--kg-card-begin: markdown--><p>
Over the christmas break, my wife and I visited New York City for the first time. One of the many highlights of our trip was the <a href="http://moma.org/">Museum of Modern Art</a>, which is running a year-long special exhibit, <a href="http://www.moma.org/exhibitions/exhibitions.php?id=4506">50 Years of Helvetica</a>. It's a tiny exhibit tucked away in a corner of MoMA. Blink and you'll miss it amongst all the other wonderful art. But even a small exhibit provides ample physical evidence that <b>Helvetica-- a humble font, nothing more than a collection of mathematical curves shaped into letterforms-- had a huge impact on the world</b>.
</p>
<p>
Helvetica is so highly regarded in the design world there's a full length documentary on the topic: <a href="http://www.helveticafilm.com/">Helvetica the Movie</a>.
</p>
<p>
<a href="http://www.helveticafilm.com/"><img alt="Helvetica the Movie" border="0" class="at-xid-6a0120a85dcdae970b0120a86db36d970b" height="400" src="https://blog.codinghorror.com/content/images/uploads/2008/01/6a0120a85dcdae970b0120a86db36d970b-pi.png" width="271"></a>
</p>
<p>
Another little-known fact about Helvetica is the relationship between this timeless classic and another font you've almost certainly encountered before: Arial. <a href="http://daringfireball.net/2007/07/iphone_fonts">John Gruber explains</a>:
</p>
<p>
</p>
<blockquote>
Helvetica is perhaps the most popular typeface in the world, and is widely acclaimed as one of the best. Arial is a tawdry, inferior knock-off of Helvetica, but which, to the detriment of the world, Microsoft chose to license for Windows simply because it was cheaper. Because Arial is a default Windows font and Helvetica is not, it is ubiquitous. <a href="http://www.ms-studio.com/articles.html">Mark Simonson's "The Scourge of Arial"</a> is an excellent resource on both Arial's history and its typographic deficiencies; his <a href="http://www.ms-studio.com/articlesarialsid.html">accompanying sidebar</a> is an excellent primer on the specific differences between Arial and Helvetica.
</blockquote>
<p>
You do have to be something of a font geek to appreciate the subtle differences between <a href="http://en.wikipedia.org/wiki/Helvetica">Helvetica</a> and <a href="http://en.wikipedia.org/wiki/Arial">Arial</a>, much less Helvetica and its precursor, <a href="http://en.wikipedia.org/wiki/Akzidenz-Grotesk">Grotesk</a>. But the discussion leads directly to another hugely important twenty-first century problem: how do you copyright the completely abstract, pure intellectual property that is a <i>font</i>?
</p>
<p>
All computer geeks tend to fall in love with typography at some point in their careers. <a href="http://www.codinghorror.com/blog/archives/001034.html">Donald Knuth</a> is a fine example; frustrated with the limited typesetting options available for his books in the late 70's, Knuth went on a "brief hiatus" to come up with something better. Seven years later, he <a href="http://www.stanfordalumni.org/news/magazine/2006/mayjun/features/knuth.html">unleashed TeX upon the world</a>.
</p>
<blockquote>
In 1977, Knuth halted research on his books for what he expected to be a one-year hiatus. Instead, it took 10. Accompanied by Jill, Knuth took design classes from Stanford art professor Matthew Kahn. Knuth, trying to train his programmer's brain to think like an artist's, wanted to create a program that would understand why each stroke in a typeface would be pleasing to the eye. "I wanted to try to capture the intelligence of the design, not just the outcome of the design," he says. For example, how do you insert line breaks into a paragraph so there isn't too much space between words and so that most of the lines don't end in hyphens? Although this seems like an aesthetic challenge to be solved by human taste, Knuth says, computers do it well. "This is a combinatorial problem," he explains. "There might be a thousand ways to break a paragraph into lines and each way has a score." His solution was to build a computer program capable of ranking the thousand options and picking the best one.
</blockquote>
<p>
<b>Typography and fonts are a rare and vital intersection point between software engineers and designers.</b> And there's absolutely no better book on the topic than <a href="http://www.amazon.com/exec/obidos/ASIN/1568984480/codihorr-20">Thinking with Type: A Critical Guide for Designers, Writers, Editors, &amp; Students</a>. I recommend it without hesitation to all of the above, and certainly to software engineers with even the slightest passing interest in typography.
</p>
<p>
<a href="http://www.amazon.com/exec/obidos/ASIN/1568984480/codihorr-20"><img alt="Thinking with Type: A Critical Guide for Designers, Writers, Editors, &amp; Students" border="0" class="at-xid-6a0120a85dcdae970b0120a86db375970b" height="402" src="https://blog.codinghorror.com/content/images/uploads/2008/01/6a0120a85dcdae970b0120a86db375970b-pi.png" width="329"></a>
</p>
<p>
Like all great books, it <a href="http://www.codinghorror.com/blog/archives/000189.html">teaches you "why", not "how"</a>:
</p>
<p>
</p>
<blockquote>
This is not a book about fonts. It is a book about how to use them. Typefaces are an essential resource employed by graphic designers, just as glass, stone, steel, and countless other materials are employed by architects. Graphic designers sometimes create their own fonts and custom lettering. More commonly, however, they tap the vast library of existing typefaces, choosing and combining them in response to a particular audience or situation. To do this with wit and wisdom requires knowledge of how-- and why-- letterforms have evolved.
</blockquote>
<p>
I think I can trace my initial interest in fonts way, way back to the pirate crack credit screens on Apple // software I encountered as a wayward teenager.
</p>
<p>
<img alt="apple // crack screen" border="0" class="at-xid-6a0120a85dcdae970b0120a86db37d970b" height="386" src="https://blog.codinghorror.com/content/images/uploads/2008/01/6a0120a85dcdae970b0120a86db37d970b-pi.png" width="562">
</p>
<p>
I count four fonts on this crack screen. There were countless disk sets of these low-resolution bitmap fonts to choose from. Even back in the mid-80s, these primitive fonts added a particular style, a feeling, an intonation to the text-- and we only had a dismal little 280 x 192 screen to work with. How wonderfully liberating it must feel to have thousands of RGB anti-aliased pixels to render beautiful fonts with today, much less the millions we'll <a href="http://www.codinghorror.com/blog/archives/000742.html">eventually have</a>.
</p>
<p>
</p>
<p></p>
<!--kg-card-end: markdown-->
            </content>
<pubDate>2008-01-16T12:00:00.000Z</pubDate>
<guid>https://blog.codinghorror.com/typography-where-engineers-and-designers-meet/</guid>
</item>
</channel>
</rss>
