<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
<channel>
<title>Coding Horror</title>
<description>programming and human factors</description>
<link>https://blog.codinghorror.com/</link>
<pubDate>Sun, 19 Apr 2020 00:00:01 GMT</pubDate>
<!-- other elements omitted from this example -->
<item>
<title>In Programming, One Is The Loneliest Number</title>
<link>https://blog.codinghorror.com/in-programming-one-is-the-loneliest-number/</link>
<content>
                <!--kg-card-begin: markdown--><p>Is software development <b>an activity preferred by anti-social, misanthropic individuals who'd rather deal with computers than other people?</b> If so, does it then follow that all software projects are best performed by a single person, working alone?</p>
<img alt="digital silhouette" border="0" class="at-xid-6a0120a85dcdae970b012877700e46970c" height="480" src="https://blog.codinghorror.com/content/images/uploads/2007/06/6a0120a85dcdae970b012877700e46970c-pi.png" width="316">
<p>The answer to the first question may be a reluctant yes, but the answer to the second question is a resounding and definitive <i>no</i>. I was struck by <a href="http://web.archive.org/web/20071026082303/http://eddiesguy.blogspot.com/2007/06/creating-my-own-personal-hell.html">this beautifully written piece</a> which explains <b>the dangers of programming alone</b>:</p>
<blockquote>
<p>Some folks have claimed that [working alone] presents a great opportunity to establish your own process. In my experience, <i>there is no process in a team of one</i>. There's nothing in place to hold off the torrents of work that come your way. There's no one to correct you when the urge to gold-plate the code comes along. There's no one to review your code. There's no one to ensure that your code is checked in on time, labeled properly, unit tested regularly. There's no one to ensure that you're following a coding standard. There's no one to monitor your timeliness on defect correction. There's no one to verify that you're not just marking defects as "not reproducible" when, in fact, they are. There's no one to double-check your estimates, and call you on it when you're just yanking something out of your ass.</p>
<p>There's no one to pick up the slack when you're sick, or away on a business trip. There's no one to help out when you're overworked, sidetracked with phone calls, pointless meetings, and menial tasks that someone springs on you at the last minute and absolutely must be done right now. There's no one to bounce ideas off of, no one to help you figure your way out of a bind, no one to collaborate with on designs, architectures or technologies. You're working in a vacuum. And in a vacuum, no one can hear you scream.</p>
<p>If anyone's reading this, let this be a lesson to you. Think hard before you accept a job as the sole developer at a company. It's a whole new kind of hell. If given the chance, take the job working with other developers, where you can at least work with others who can mentor you and help you develop your skill set, and keep you abreast of current technology.</p>
</blockquote>
<p>Working alone is a temptation for many desperate software developers who feel trapped, surrounded by incompetence and mismanagement in the desert of the real. Working alone means complete control over a software project, wielding ultimate power over every decision. But working on a software project all by yourself, instead of being empowering, is paradoxically <i>debilitating</i>. It's a shifting mirage that offers the tantalizing promise of relief, while somehow leaving you thirstier and weaker than you started.</p>
<p>Like many programmers, I was drawn to computers as a child because I was an introvert. The world of computers –  that calm, rational oasis of ones and zeros –  seemed so much more inviting than the irrational, unexplainable world of people and social interactions with no clear right and wrong. Computers weren't <i>better</i> than people, exactly, but they were sure one heck of a lot easier to understand.</p>
<p>Computing in the early, pre-internet era was the very definition of a solitary activity. Dani Berry, the author of M.U.L.E., <a href="http://blog.codinghorror.com/gee-i-wish-i-had-spent-more-time-alone-with-my-computer/">sums up with this famous quote:</a> <i>"No one ever said on their deathbed, 'Gee, I wish I had spent more time alone with my computer.'"</i> But we've long since left the days of solitary 8-bit programming behind. The internet, and the increasing scope and complexity of software, have made sure of that. I can barely program these days <a href="http://blog.codinghorror.com/does-offline-mode-still-matter/">without an active internet connection</a>; I feel crippled when I'm not networked into the vast hive mind of programming knowledge on the internet.</p>
<p>What good are nifty coding tricks if you can't show them off to anyone? How can you possibly learn the craft without being exposed to other programmers with different ideas, different approaches, and different skillsets? Who will review your code and tell you when there's an easier approach you didn't see? <b>If you're serious about programming, you should <i>demand</i> to work with your peers</b>.</p>
<p>There's only so far you can go in this field by yourself. Seek out other smart programmers. Work with them. Endeavor to be <a href="http://web.archive.org/web/20071018050405/http://markeseremet.blogspot.com/2006/12/dumbest-guy-in-room.html">the dumbest guy in the room</a>, and you'll quickly discover that software development is a far more social activity than most people realize. There's a lot you can learn from your fellow introverts.</p>
<!--kg-card-end: markdown-->
            </content>
<pubDate>2007-06-19T12:00:00.000Z</pubDate>
<guid>https://blog.codinghorror.com/in-programming-one-is-the-loneliest-number/</guid>
</item>
</channel>
</rss>
