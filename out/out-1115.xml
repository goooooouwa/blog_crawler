<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
<channel>
<title>Coding Horror</title>
<description>programming and human factors</description>
<link>https://blog.codinghorror.com/</link>
<pubDate>Sun, 19 Apr 2020 00:00:01 GMT</pubDate>
<!-- other elements omitted from this example -->
<item>
<title>For Best Results, Forget the Bonus</title>
<link>https://blog.codinghorror.com/for-best-results-forget-the-bonus/</link>
<content>
                <!--kg-card-begin: markdown--><p>
The anonymous mini-microsoft blog has a fascinating entry on the pitfalls of <a href="http://minimsft.blogspot.com/2005/06/microsofts-30-or-how-i-learned-to-stop.html">Microsoft's curve rating system</a>:
</p>
<p>
</p>
<blockquote><i>
I totally accept that we need to have a rating system, especially to reward our kick-butt super-contributors who end up doing most the hard work around here. I have not, however, come to accept the bucketing rating system we employ, especially around the 3.0 review score. Now then, I have met dev managers who have reached acceptance with our system and with dolling out the 3.0s. In their presence, I experience a cult-like allure to these folks as they tell me how they are totally behind the peer relative 3.0 review rating and that's how we do business in managing our performers. They make it sound so calm and simple that I feel like if I could just drink up that Kool-Aid I, too, could not rip myself up inside over this.
</i></blockquote>
<p>
I touched on this briefly in <a href="http://www.codinghorror.com/blog/archives/000225.html">managing with trust</a>. Performance metrics are useful, but only privately to the person who is being measured. The minute you make these performance metrics available to the manager as anything other than a sanitized average, you've turned them into a self-defeating cudgel to beat people into submission. I know, it seems like a logical idea-- measure and reward performance-- but there's tons of data supporting the harm this does. <a href="http://www.amazon.com/exec/obidos/ASIN/0932633439/codihorr-20">Peopleware</a> goes into great detail on this; without belaboring the point, <a href="http://www.alfiekohn.org/managing/fbrftb.htm">for best results, forget the bonus</a>.
</p>
<p>
</p>
<blockquote>
<i>
"Do this and you'll get that." These six words sum up the most popular way in which American business strives to improve performance in the workplace.
</i><p>
And it is very popular. At least three of four American corporations rely on some sort of incentive program. Piecework pay for factory workers, stock options for top executives, banquets and plaques for Employees of the Month, commissions for salespeople -- the variations go on and on. The average company now resembles a television game show: "Tell our employees about the fabulous prizes we have for them if productivity improves!"
</p>
<p>
Most of us, accustomed to similar tactics at home and school, take for granted that incentives in the workplace are successful. After all, such incentives are basically rewards, and rewards work, don't they?
</p>
<p>
The answer, surprisingly, is mostly no. While rewards are effective at producing temporary compliance, they are strikingly ineffective at producing lasting changes in attitudes or behavior. The news gets worse. <b>About two dozen studies from the field of social psychology conclusively show that people who expect to receive a reward do not perform as well as those who expect nothing. This result, which holds for all sorts of rewards, people and tasks, is most dramatic when creativity is involved.</b>
</p>
</blockquote>
<p>
I suppose this only works for software development if you consider it <a href="http://www.codinghorror.com/blog/archives/000220.html">a creative activity</a>, but the <b>arguments against the use of rewards</b> are quite compelling:
</p>
<p>
</p>
<ul>
<li>for every reward, there is the lack of a reward, an implicit punishment.
</li>
<li>rewards discourage cooperation and encourage competition.
</li>
<li>rewards are one-size-fits all approach that ignores causality.
</li>
<li>rewards deter risk.
</li>
<li>rewards undermine interest by focusing on the reward rather than the process itself.
</li>
</ul>
<p>
</p>
<p></p>
<!--kg-card-end: markdown-->
            </content>
<pubDate>2005-06-29T12:00:00.000Z</pubDate>
<guid>https://blog.codinghorror.com/for-best-results-forget-the-bonus/</guid>
</item>
</channel>
</rss>
