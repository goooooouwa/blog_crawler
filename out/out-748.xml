<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
<channel>
<title>Coding Horror</title>
<description>programming and human factors</description>
<link>https://blog.codinghorror.com/</link>
<pubDate>Sun, 19 Apr 2020 00:00:01 GMT</pubDate>
<!-- other elements omitted from this example -->
<item>
<title>The Iron Stool</title>
<link>https://blog.codinghorror.com/the-iron-stool/</link>
<content>
                <!--kg-card-begin: markdown--><p>
In <a href="http://office.microsoft.com/en-us/assistance/HA010211801033.aspx">classic project management parlance</a> , every project is a combination of <b>money, scope and time</b>.
</p>
<p>
</p>
<ol>
<li>Here's what we're going to do
</li>
<li>Here's how much time we have to do it
</li>
<li>Here's how much money we can spend doing it.
</li>
</ol>
<p>
These three factors are all related. If you pull on one "edge" of the triangle, the other sides have to give. If we cut the budget in half, we can't do as much, so scope has to give. That's why it's often called <b>the iron triangle</b>.
</p>
<p>
In software development, the terms are a little different, but the underlying meaning is the same. We use <b>Time, Resources, and Functionality</b>.
</p>
<p>
<img alt="The software development iron triangle" border="0" class="at-xid-6a0120a85dcdae970b0128776fe6d5970c" height="323" src="https://blog.codinghorror.com/content/images/uploads/2006/10/6a0120a85dcdae970b0128776fe6d5970c-pi.jpg" width="459">
</p>
<p>
Sometimes all three dimensions of the triangle are locked. If you're given three people, four months, and a non-negotiable budget of $300k to build software, then that's what you do. But how is this possible? Something still has to give. <b>There's an unstated fourth ingredient in the iron triangle: quality.</b>
</p>
<p>
Once you add the fourth ingredient, the triangle metaphor breaks down. Sam Guckenheimer <a href="http://www.awprofessional.com/articles/article.asp?p=468589&amp;seqNum=3&amp;rl=1">calls it a tetrahedon</a>. But <a href="http://blogs.vertigosoftware.com/swarren/">my co-worker Susan</a> has an even better analogy: it's a stool.
</p>
<p>
<img alt="The three legged Quality stool" border="0" class="at-xid-6a0120a85dcdae970b0128776fe6e6970c" height="347" src="https://blog.codinghorror.com/content/images/uploads/2006/10/6a0120a85dcdae970b0128776fe6e6970c-pi.jpg" width="383">
</p>
<p>
At least for software development there's still some debate as to <a href="http://www.awprofessional.com/articles/article.asp?p=468589&amp;seqNum=3&amp;rl=1">whether or not the stool really is made of iron</a>:
</p>
<p>
</p>
<blockquote>
Although widely practiced, [the iron triangle] paradigm does not work well. Just as Newtonian physics is now known to be a special case, the iron triangle is a special case that assumes the process is flowing smoothly to begin with. It assumes that resource productivity is uniformly distributed, that there is little variance in the effectiveness of task completion, and that no spare capacity exists throughout the system. These conditions exist sometimes, notably on low-risk projects. Unfortunately, for the types of software projects usually undertaken, they are often untrue.
<p>
Many users of agile methods have <a href="http://alistair.cockburn.us/index.php/Process:_the_fourth_dimension">demonstrated experiences that pleasantly contradict this viewpoint</a>. If you improve qualities of service, such as reliability, you can shorten time. Significant improvements in flow are possible within the existing resources and time
</p>
</blockquote>
<p>
It's definitely a good idea to keep the "classic" stool resources in mind. But the highly variable nature of software development means that, if you're careful, you may be able to build your stool out of a more malleable material than iron.
</p>
<p>
</p>
<p></p>
<!--kg-card-end: markdown-->
            </content>
<pubDate>2006-10-20T12:00:00.000Z</pubDate>
<guid>https://blog.codinghorror.com/the-iron-stool/</guid>
</item>
</channel>
</rss>
