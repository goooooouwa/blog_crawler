<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
<channel>
<title>Coding Horror</title>
<description>programming and human factors</description>
<link>https://blog.codinghorror.com/</link>
<pubDate>Sun, 19 Apr 2020 00:00:01 GMT</pubDate>
<!-- other elements omitted from this example -->
<item>
<title>Excluding Matches With Regular Expressions</title>
<link>https://blog.codinghorror.com/excluding-matches-with-regular-expressions/</link>
<content>
                <!--kg-card-begin: markdown--><p>
Here's <a href="http://techreport.com/forums/viewtopic.php?t=34782">an interesting regex problem</a>:
</p>
<p>
</p>
<blockquote>
I seem to have stumbled upon a puzzle that evidently is not new, but for which no (simple) solution has yet been found. I am trying to find a way to exclude an entire word from a regular expression search. The regular expression should find and return everything EXCEPT the text string in the search expression.
<p>
For example, if the word fox was what I wanted to exclude, and the searched text was:
</p>
<p>
The quick brown fox jumped over the lazy dog.
</p>
<p>
... and I used a regular expression of [^"fox"] (which I know is incorrect) (why this doesn't work I don't understand; it would make life SO much easier), then the returned search results would be:
</p>
<p>
The quick brown jumped over the lazy dog.
</p>
</blockquote>
<p>
Regular expressions are great at matching. It's easy to formulate a regex using what you want to match. <b>Stating a regex in terms of what you <i>don't</i> want to match is a bit harder.</b>
</p>
<p>
One easy way to exclude text from a match is <a href="http://www.regular-expressions.info/lookaround.html">negative lookbehind</a>:
</p>
<p>
</p>
<pre>
w+b(?&lt;!bfox)
</pre>
<p>
But not all regex flavors support negative lookbehind. And those that do typically have severe restrictions on the lookbehind, eg, it must be a simple fixed-length expression. To avoid incompatibility, we can restate our solution using <a href="http://www.regular-expressions.info/lookaround.html">negative lookahead</a>:
</p>
<p>
</p>
<pre>
(?!foxb)bw+
</pre>
<p>
You can test this regex in the cool <a href="http://www.cuneytyilmaz.com/prog/jrx/">online JavaScript Regex evaluator</a>. Unfortunately, JavaScript doesn't support negative lookbehind, so if you want to test that one, <a href="http://www.regexbuddy.com/cgi-bin/affref.pl?aff=jatwood">I recommend RegexBuddy</a>. It's not free, but it's the best regex tool out there by far-- and it keeps getting better with every incremental release.
</p>
<p>
</p>
<p></p>
<!--kg-card-end: markdown-->
            </content>
<pubDate>2005-10-23T12:00:00.000Z</pubDate>
<guid>https://blog.codinghorror.com/excluding-matches-with-regular-expressions/</guid>
</item>
</channel>
</rss>
