<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
<channel>
<title>Coding Horror</title>
<description>programming and human factors</description>
<link>https://blog.codinghorror.com/</link>
<pubDate>Sun, 19 Apr 2020 00:00:01 GMT</pubDate>
<!-- other elements omitted from this example -->
<item>
<title>C# implementation of ASCII85</title>
<link>https://blog.codinghorror.com/c-implementation-of-ascii85/</link>
<content>
                <!--kg-card-begin: markdown--><p>As promised, here is my C# implementation of the ASCII85 algorithm. This code is a loose port of the C sample referenced from <a href="http://en.wikipedia.org/wiki/Ascii85">the Wikipedia page</a>. It's too much code to paste into a single entry, so I packaged it as a VS.NET 2003 solution -- using <a href="http://www.codinghorror.com/blog/archives/000368.html">Clean Sources Plus</a>, of course!</p>
<ul>
<li>
<a href="https://github.com/coding-horror/ascii85">VS.NET 2003 ASCII85 console solution</a> (4kb)
</li>
</ul>
<p>This includes both encoding and decoding, with reasonable data validation and a few minor options. Here's a quick list of the public methods:</p>
<pre>Encode(byte[] ba)
Decode(string s)
</pre>
<p>And a handful of properties:</p>
<pre>
EnforceMarks (bool)
LineLength (int)
PrefixMark (string)
SuffixMark (string)
</pre>
<p>The sample app includes a basic test harness which tests string and binary file encoding, as well as some bad data scenarios. Here's the default demo running against the vaguely creepy <a href="http://en.wikipedia.org/wiki/Wikipedia:Logos_and_slogans">Wikipedia slogan</a>:</p>
<img alt="C# console app output" border="0" class="at-xid-6a0120a85dcdae970b0120a86d5b2d970b" height="331" src="https://blog.codinghorror.com/content/images/uploads/2005/10/6a0120a85dcdae970b0120a86d5b2d970b-pi.png" width="588">
<p>Of course, converting printable text to, er.. printable text.. isn't exactly an earth-shattering demo. Normally you'd be doing this on some kind of real binary data, as in the <a href="http://blog.codinghorror.com/equipping-our-ascii-armor/">GUID.ToByteArray() example</a>.</p>
<!--kg-card-end: markdown-->
            </content>
<pubDate>2005-10-07T12:00:00.000Z</pubDate>
<guid>https://blog.codinghorror.com/c-implementation-of-ascii85/</guid>
</item>
</channel>
</rss>
