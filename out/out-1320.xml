<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
<channel>
<title>Coding Horror</title>
<description>programming and human factors</description>
<link>https://blog.codinghorror.com/</link>
<pubDate>Sun, 19 Apr 2020 00:00:01 GMT</pubDate>
<!-- other elements omitted from this example -->
<item>
<title>Teaching Users to Read</title>
<link>https://blog.codinghorror.com/teaching-users-to-read/</link>
<content>
                <!--kg-card-begin: markdown--><p>
I've talked about <a href="http://www.codinghorror.com/blog/archives/000019.html">irresponsible use of dialog boxes</a> before, but a few pages I've read recently highlighted an interesting aspect of this topic that I hadn't considered. First, <a href="http://www.joelonsoftware.com/uibook/fog0000000249.html">Joel Spolsky</a>:
</p>
<blockquote>
This may sound a little harsh, but you'll see, when you do usability tests, that <b>there are quite a few users who simply do not read words that you put on the screen. If you pop up an error box of any sort, they simply will not read it.</b> This may be disconcerting to you as a programmer, because you imagine yourself as conducting a dialog with the user. Hey, user! You can't open that file, we don't support that file format! Still, experience shows that the more words you put on that dialog box, the fewer people will actually read it.
</blockquote>
<p>
And <a href="http://mikepope.com/blog/DisplayBlog.aspx?permalink=480%0A">Mike dug up</a> a fascinating <a href="http://blogs.msdn.com/ericlippert/">Eric Lippert</a> comment on the same topic:
</p>
<blockquote>
It's not that users are morons or that they "forget" to think. It's that users are trained to not think. Users very quickly learn from experience that:
<ul>
<li>Dialog boxes are modal. But users do not think of them as "modal", they think of them as <b>"preventing me from getting any work done until I get rid of them."</b>
</li>
<li>Dialog boxes almost always go away when you click the leftmost or rightmost button.
</li>
<li>Dialog boxes usually say <b>"If you want to tech the tech, you need to tech the tech with the teching tech tech. Tech the tech? Yes / No"</b>
</li>
<li>If you press one of those buttons, something happens. If you press the other one, nothing happens. Very few users want nothing to happen -- in the majority of cases, whatever happens is what the user wanted to happen. Only in rare cases does something bad happen.
</li>
</ul>
<p>
In short, from a user perspective, dialog boxes are impediments to productivity which provide no information. It's like giving shocks or food pellets to monkeys when they press buttons -- primates very quickly learn what gives them the good stuff and avoids the bad.
</p>
</blockquote>
<p>
Well, I couldn't help thinking of this classic Gary Larson strip:
</p>
<p align="center">
<img alt="What Dogs Hear" class="at-xid-6a0120a85dcdae970b0120a85dd8f2970b" height="492" src="https://blog.codinghorror.com/content/images/uploads/2004/10/6a0120a85dcdae970b0120a85dd8f2970b-pi.jpg" width="400">
</p>
My intent is not to make fun of users, but to illustrate that there are far more effective ways to communicate with your dog. Essentially, <b>any time you're asking the user to make a choice they don't care about, you have failed the user.</b> Well designed software takes care of "teching the tech tech" all by itself, and leaves the user free to worry about things relevant to the work they are doing. Dialog boxes are almost always detrimental. The goal should be to write <b>an entire application free of dialog boxes</b>.
<p>
Well designed software avoids asking the user questions by...
</p>
<ul>
<li>Anticipating user needs (wizards, templates, autocomplete, IUI)
</li>
<li>Remembering past preferences and using that to better anticipate future needs
</li>
<li>Silently and automatically protecting the user from the consequences of any negative actions (versioning, undo)
</li>
</ul>
<p>
It's amazing how few software packages even <i>try</i> to meet these goals, even with simple, common things. For example, why does the file save dialog <i>always</i> default to My Documents even though I saved to Desktop the last time I used the application?
</p>
<p>
</p>
<p></p>
<!--kg-card-end: markdown-->
            </content>
<pubDate>2004-10-25T12:00:00.000Z</pubDate>
<guid>https://blog.codinghorror.com/teaching-users-to-read/</guid>
</item>
</channel>
</rss>
