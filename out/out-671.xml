<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
<channel>
<title>Coding Horror</title>
<description>programming and human factors</description>
<link>https://blog.codinghorror.com/</link>
<pubDate>Sun, 19 Apr 2020 00:00:01 GMT</pubDate>
<!-- other elements omitted from this example -->
<item>
<title>Non-Native UI Sucks</title>
<link>https://blog.codinghorror.com/non-native-ui-sucks/</link>
<content>
                <!--kg-card-begin: markdown--><p>
It's common knowledge that <strong>Mac users prefer Safari to Firefox</strong>. It is the browser bundled with the OS – and <a href="http://www.codinghorror.com/blog/2005/03/because-ie6-is-the-new-netscape-47x.html">we know how that generally works out</a>. But it's not just a monopoly play; there are <a href="http://www.oreillynet.com/mac/blog/2006/02/safari_vs_firefox_the_yellow_b.html">legitimate reasons for Mac users to choose Safari</a>:
</p>
<blockquote>
Mac users favor [Safari] for its rendering speed, clean interface and fast launch times.
</blockquote>
<p>
Safari is, of course, a completely competent browser that <a href="http://weblogs.mozillazine.org/hyatt/archives/2005_04.html">stands on its technical merits</a>, very much <a href="http://www.codinghorror.com/blog/2005/03/because-ie6-is-the-new-netscape-47x.html">unlike IE6</a>. But if you ask Mac users why they chose Safari, and if you keep pressing them, you'll probably find the deciding factor was that <em>Safari feels like a native Mac app</em>.
</p>
<p>
<a href="http://plasticbugs.com/?p=312"><img class="at-xid-6a0120a85dcdae970b0128776ff7c0970c" src="https://blog.codinghorror.com/content/images/uploads/2007/02/6a0120a85dcdae970b0128776ff7c0970c-pi.png" border="0" alt="safari-vs-firefox-on-mac.png" width="194" height="300"></a>
</p>
<p>
The next version of Firefox <a href="http://blog.wired.com/monkeybites/2007/02/firefox_3_alpha.html">will use some native UI elements in OS X</a>. But it's <a href="http://blog.wired.com/monkeybites/2007/02/firefox_3_quest.html">still not a native Cocoa app</a>. The lack of a completely native UI on OS X may seem like a minor implementation detail, but it's actually a showstopper for a lot of people, like this <a href="http://blog.wired.com/monkeybites/2007/02/firefox_3_alpha.html">commenter</a>:
</p>
<blockquote>
"Native cocoa widgets" refers to the use of the natively rendered components such as scroll bars and submit buttons. These are the same buttons and scroll bars used in nearly all Cocoa apps for OSX (basically every program you've ever used). The default theme for OSX FF2 uses these really ugly widgets that are really blocky and Netscape 4-y looking.
<p>
<strong>As vain as it may sound, those ugly widgets are actually one of the major reasons I use Safari instead of FF on OSX</strong>.
</p>
</blockquote>
<p>
When two applications with rough feature parity compete, the application with the native UI will win. Every time. If you truly want to win the hearts and minds of your users, you go to the metal and take full advantage of the native UI.
</p>
<p>
Java has struggled with this problem for years, producing results spanning the continuum between "terrible" and "awful", depending on who you ask. Most Java developers have <a href="http://mooseyard.com/Jens/2007/01/in-which-i-think-about-java-again-but-only-for-a-moment/">given up completely on GUI applications</a>:
</p>
<blockquote>
Me, I defected long ago. I'm another of those Apple Java engineers who dropped out. I spent five years as a raving Java fanboy, but I gave up after optimizing AWT, implementing drag and drop, and trying to make 1,200 pages of crappy APIs do the right thing on the Mac. Then I took a one-week Cocoa training course, and wrote the first prototype of iChat.
<p>
Desktop Java never worked because Sun tried to build their own OS on top of the real OS, duplicating every API and feature. This led to terrible bloat, making every app as heavyweight to launch as Photoshop. Worse, the GUI portions of the Java platform are awful, because Sun is a server company with no core competency at GUIs. The APIs are too clumsy to code to, and <strong>compared to any decent Mac app, the results look like a Soviet tractor built on a Monday</strong>.
</p>
</blockquote>
<p>
Ultimately, the best any Java app can do is <em>pretend</em> to be a native app. To fake it. And more often than not, <a href="http://www.ibiblio.org/java/oldnews/news2007February7.html">it can't even manage to do that</a>:
</p>
<blockquote>
<a href="https://substance.dev.java.net/">This project</a> should be a cautionary tale for people who think programmers should be interface designers. Apple and Microsoft at least recognize that these are different skill sets, and that looks and feels should be created by a team of programmers, graphic designers, and interaction designers. Sadly the Linux and Java communities haven't really figured this out yet, and are still trying to have programmers do it all, with predictable results. The bottom line is that we don't really need different look-and-feels in Java. The best Java can or should do is faithfully mimic the native user interface. Unless your name is <a href="http://en.wikipedia.org/wiki/Bruce_Tognazzini">Bruce Tognazzini</a> or <a href="http://en.wikipedia.org/wiki/Kai_Krause">Kai Krause</a>, you almost certainly won't do better than that; and you'll be very, very lucky if you don't do worse. Pluggable look-and-feels are necessary in Swing only because Swing apps have to run on multiple platforms. They should be changed only from operating system to operating system, not application to application. <strong>The goal of a Java application is to fit in with other native applications, not to stand out.</strong>
</blockquote>
<p>
<a href="http://gaim.sourceforge.net/">GAIM</a> has a cross-platform UI based on <a href="http://en.wikipedia.org/wiki/GTK+">GTK</a>, which produces predictably bland, least-common-denominator results:
</p>
<p>
<img class="at-xid-6a0120a85dcdae970b0128776ff7d4970c" src="https://blog.codinghorror.com/content/images/uploads/2007/02/6a0120a85dcdae970b0128776ff7d4970c-pi.png" border="0" alt="gaim on linux" width="349" height="347"> 
<img class="at-xid-6a0120a85dcdae970b0128776ff7f4970c" src="https://blog.codinghorror.com/content/images/uploads/2007/02/6a0120a85dcdae970b0128776ff7f4970c-pi.png" border="0" alt="gaim on Windows" width="346" height="328">
</p>
<p>
Most of all, I find myself empathizing with Mac Safari users because <strong>I haven't been able to switch away from IE7 on Vista.</strong> Firefox feels so dowdy in Vista. It just doesn't fit in. It scrolls very slowly, the <a href="http://cssbeauty.com/skillshare/discussion/1487/firefox-20-bug-keyboard-stops-workingloses-focus/">keyboard stops working at random</a>, and the overall GUI is jarringly out of place, including the <a href="http://www.codinghorror.com/blog/archives/000397.html">legacy main menu</a>. There's no doubt whatsoever that Firefox is a <em>vastly</em> superior browser for web development, with a <a href="http://www.codinghorror.com/blog/archives/000706.html">vibrant developer community</a>. Firefox absolutely should be a part of every developer's core toolkit.
</p>
<p>
But when it comes to day-to-day browsing, <strong>I'll always pick native speed and native look and feel</strong> over the ability to install a dozen user extensions, or the ability to run on umpteen different platforms. Every single time.
</p>
<p>
If that makes me shallow, then <a href="http://www.codinghorror.com/blog/archives/000769.html">I'm in good company</a>. Non-native UI sucks.
</p>
<!--kg-card-end: markdown-->
            </content>
<pubDate>2007-02-08T12:00:00.000Z</pubDate>
<guid>https://blog.codinghorror.com/non-native-ui-sucks/</guid>
</item>
</channel>
</rss>
