<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
<channel>
<title>Coding Horror</title>
<description>programming and human factors</description>
<link>https://blog.codinghorror.com/</link>
<pubDate>Sun, 19 Apr 2020 00:00:01 GMT</pubDate>
<!-- other elements omitted from this example -->
<item>
<title>The Dramatic Password Reveal</title>
<link>https://blog.codinghorror.com/the-dramatic-password-reveal/</link>
<content>
                <!--kg-card-begin: markdown--><p>
As far back as I can remember-- which admittedly isn't very far-- GUI toolkits have included a special type of text entry field for passwords. As you type, the password field displays a generic character, usually a dot or asterisk, instead of the character you actually typed.
</p>
<p>
I've <a href="http://www.codinghorror.com/blog/archives/000413.html">criticized the login dialog before</a>, but <b>I definitely understand the need to obfuscate password entry</b>, even if you're using <a href="http://www.codinghorror.com/blog/archives/000785.html">fancy two-factor authentication with smart cards and the like</a>. If password entry was treated as plain old text entry, you'd reveal your password (or PIN code) to anyone who casually happened to be looking at the screen while you're typing. So instead of seeing:
</p>
<p>
<code>**************</code>
</p>
<p>
Everyone in your meeting or presentation would instead see:
</p>
<p>
<code>IHeartBunnies!</code>
</p>
<p>
Which would be sort of traumatic on several levels. Not to mention the security implications.
</p>
<p>
I can't talk about login dialogs without bringing up one in Lotus Notes 6.0. Like everything else in Notes, <a href="http://lotusnotessucks.4t.com/lnEx01.html">it's a massive trainwreck</a>.
</p>
<p>
</p>
<blockquote>
This dialog box contains several security "features":
<p>
<img alt="animated Lotus Notes 6.0 login dialog" border="0" class="at-xid-6a0120a85dcdae970b012877703604970c" height="113" src="https://blog.codinghorror.com/content/images/uploads/2008/02/6a0120a85dcdae970b012877703604970c-pi.gif" width="441">
</p>
<p>
</p>
<ul>
<li>The hieroglyphics on the left of the dialog box are supposed to distract anyone who is peering over your shoulder trying to learn your password as you type.
</li>
<li>The number of characters you type is hidden; a random number of X's appear instead of one asterisk per character.
</li>
</ul>
<p>
Is any of this nonsense really necessary? If I want to learn someone's password as he or she types it, I will look at the keyboard, not the screen!
</p>
</blockquote>
<p>
I actually had to use <i>that exact login dialog</i> for my job at the time, and I can tell you from personal experience exactly how mind-bendingly, appallingly awful it truly was. Who reinvents a perfectly standard dialog-- and makes it so much worse? On second thought, perhaps "how can we make this worse?" was the design goal for Notes. It certainly felt that way while I was using it.
</p>
<p>
But I digress. As much as we worry about password obfuscation, at least one dialog in Vista bucks this long-standing GUI trend. Specifically, the dialog where you enter your wireless network password.
</p>
<p>
<img alt="Display characters checkbox for wireless configuration dialog" border="0" class="at-xid-6a0120a85dcdae970b012877703616970c" height="178" src="https://blog.codinghorror.com/content/images/uploads/2008/02/6a0120a85dcdae970b012877703616970c-pi.gif" width="452">
</p>
<p>
Checking the "display characters" checkbox overrides the password obfuscation and reveals the password. At first I was appalled. Reveal my <i>password?</i> Imagine the security implications! The chutzpah of Microsoft's developers, putting my password at risk in such a careless, haphazard manner! What were they thinking?
</p>
<p>
I'm guessing they implemented the reveal option here because network passwords can be unusually long and complex-- and troubleshooting network connectivity is difficult enough even without factoring in the inevitable password typos. But are network passwords really so different from any other type of password? After using this dialog a few times, I began to see how useful the reveal password option truly was. If you think you've made a mistake entering your password, tick the reveal box and find out. It's quite a time saver compared to typing in your password in blindly two, three, or even four times before getting it right. I don't know about you, but that happens to me at least a few times a day on average.
</p>
<p>
I've come full circle. I now think <b>the password reveal option should be available on all login dialogs</b>.
</p>
<p>
It's awfully convienient, and it doesn't seem particularly risky to me. Nobody leaves their password typed in and waiting to be revealed on the login screen. If you're in a public place, you simply refrain from using the reveal option. But at home or in a private work area, why not opt to reveal your password? Traditional GUI password obfuscation is a nice convention, but it's not the alpha and omega of password security. Far from it. If criminals <i>really</i> want to get your password, they'll be watching your fingers on the keyboard or using keylogger hardware.
</p>
<p>
</p>
<p></p>
<!--kg-card-end: markdown-->
            </content>
<pubDate>2008-02-11T12:00:00.000Z</pubDate>
<guid>https://blog.codinghorror.com/the-dramatic-password-reveal/</guid>
</item>
</channel>
</rss>
