<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
<channel>
<title>Coding Horror</title>
<description>programming and human factors</description>
<link>https://blog.codinghorror.com/</link>
<pubDate>Sun, 19 Apr 2020 00:00:01 GMT</pubDate>
<!-- other elements omitted from this example -->
<item>
<title>The Years of Experience Myth</title>
<link>https://blog.codinghorror.com/the-years-of-experience-myth/</link>
<content>
                <!--kg-card-begin: markdown--><p>
I recently received an email from Andrew Stuart of the Australian firm <a href="http://flatraterecruitment.com.au/">Flat Rate Recruitment</a>. Andrew related their technical phone screen process, which is apparently quite similar to the one outlined in <a href="http://www.codinghorror.com/blog/archives/001042.html">Getting the Interview Phone Screen Right</a>. I'm glad to hear it works. A proper phone screen is critical. I completely agree with Andrew: <b>you should be 95% certain that a candidate would be a great hire before they ever set foot in an interview room.</b> Anything less is a colossal waste of everyone's time.
</p>
<p>
But there's one aspect of the recruiting process that often goes awry, even with a great phone screen in place. Andrew presented an excellent anecdote in his email that explains it better than I can:
</p>
<p>
</p>
<blockquote>
I had a client building an advanced security application. I sent them person after person and they kept knocking them back. The reason was almost always because the person "didn't have enough low level coding experience." The people I sent had done things like design and develop operating systems, advanced memory managers and other highly sophisticated applications. But my client wasn't interested. They <i>required</i> previous hands on low level coding experience in a particular discipline. Eventually I got an application from a very bright software engineer who almost single-handedly wrote a classic computer emulator, but had little or no low level coding experience in the particular discipline they required.
<p>
I told the client, "I have a great guy here who has no experience doing low level coding and I think you should hire him."  They were extremely skeptical. I pushed hard to get an interview. "Look, this guy is a superb software engineer who doesn't have low level coding experience in the particular discipline you require now, but if you employ him, within 3-6 months you <i>will</i> have a superb software engineer who <i>does</i> have the low level coding experience you're looking for."
</p>
<p>
They interviewed him and gave him the job. Within a matter of weeks it was clear he was the smartest programmer in the company. He quickly mastered their low level coding and his learning went well beyond that of the other coders in the company. Every time I talk to that client he raves on about this employee, who is now the technical backbone of the company. That company no longer focuses its recruitment on candidates that <i>exactly</i> match previous experience with the required technologies. Instead they focus on finding and employing the smartest and most passionate engineers.
</p>
</blockquote>
<p>
This toxic, counterproductive <b>years of experience myth</b> has permeated the software industry for as long as I can remember. Imagine how many brilliant software engineers companies are missing out on because they are completely obsessed with finding people who match-- exactly and to the letter-- some highly specific laundry list of skills.
</p>
<p>
Somehow, they've forgetten that <b>what software developers do best is <i>learn</i>.</b> Employers should be looking for passionate, driven, flexible self-educators who have a proven ability to code in <i>whatever</i> language -- and serving them up interesting projects they can engage with.
</p>
<p>
It's been shown <a href="http://www.codinghorror.com/blog/archives/000072.html">time</a> and <a href="http://www.codinghorror.com/blog/archives/000354.html">time again</a> that <b>there is no correlation between years of experience and skill in programming.</b> After about six to twelve months working in any particular technology stack, <a href="http://www.codinghorror.com/blog/archives/000543.html">you either get it or you don't</a>. No matter how many years of "experience" another programmer has under their belt, there's about even odds that <i>they have no idea what they're doing</i>. This is why working programmers quickly learn to view their peers with <a href="http://www.codinghorror.com/blog/archives/000824.html">a degree of world-weary skepticism</a>. Perhaps it's the only rational response when the disconnect between experience and skill is so pervasive in the field of software engineering.
</p>
<p>
With that in mind, do you <i>really</i> want to work for a company that still doggedly pursues the years of experience myth in their hiring practices? <a href="http://www.37signals.com/svn/posts/833-years-of-irrelevance">Unlikely.</a>
</p>
<p>
</p>
<blockquote>
Which leads me to my point: Requiring X years of experience on platform Y in your job posting is, well, ignorant. As long as applicants have 6 months to a year of experience, consider it a moot point for comparison. Focus on other things instead that'll make much more of a difference. Platform experience is merely a baseline, not a differentiator of real importance.
<p>
In turn that means you as an applicant can use requirements like "3-5 years doing this technology" as a gauge of how clued-in the company hiring is. The higher their requirements for years of service in a given technology, the more likely that they're looking for all the wrong things in their applicants, and thus likely that the rest of the team will be stooges picked for the wrong reasons.
</p>
</blockquote>
<p>
I'm not saying experience doesn't matter in software development. It does. But consider the <i>entire</i> range of a developer's experience, and realize that <a href="http://www.codinghorror.com/blog/archives/000524.html">time invested does not automatically equal skill</a>. Otherwise, you may be rejecting superb software engineers simply because they lack "(n) years of experience" in your narrow little technological niche-- and that's a damn shame.
</p>
<p>
</p>
<p></p>
<!--kg-card-end: markdown-->
            </content>
<pubDate>2008-02-07T12:00:00.000Z</pubDate>
<guid>https://blog.codinghorror.com/the-years-of-experience-myth/</guid>
</item>
</channel>
</rss>
