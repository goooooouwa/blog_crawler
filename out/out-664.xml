<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
<channel>
<title>Coding Horror</title>
<description>programming and human factors</description>
<link>https://blog.codinghorror.com/</link>
<pubDate>Sun, 19 Apr 2020 00:00:01 GMT</pubDate>
<!-- other elements omitted from this example -->
<item>
<title>Everybody Loves BitTorrent</title>
<link>https://blog.codinghorror.com/everybody-loves-bittorrent/</link>
<content>
                <!--kg-card-begin: markdown--><p>The traditional method of distributing large files is to put them on a central server. Each client then downloads the file directly from the server. It's a gratifyingly simple approach, but <i>it doesn't scale</i>. For every download, the server consumes bandwidth equal to the size of the file. You probably don't have enough bandwidth to serve a large file to a large audience, and even if you did, your <a href="https://blog.codinghorror.com/the-economics-of-bandwidth/">bandwidth bill would go through the roof</a>. The larger the file, the larger the audience, the worse your bandwidth problem gets. It's <a href="https://blog.codinghorror.com/the-popularity-tax/">a popularity tax</a>.</p>
<p>With <a href="http://en.wikipedia.org/wiki/BitTorrent">BitTorrent</a>, you also start by placing your large file on a central server. But once the downloading begins, something magical happens: as clients download the file, <strong>they share whatever parts of the file they have with each other</strong>. Clients can opportunistically connect with any other client to obtain multiple parts of the file at once. And it scales perfectly: as file size and audience size increases, the bandwidth of the BitTorrent distribution network also increases. Your server does less and less work with each connected client. It's an elegant, egalitarian way of sharing large files with large audiences.</p>
<p><strong>BitTorrent radically shifts the economics of distribution</strong>. It's one of the most miraculous ideas ever conceived on the internet. As far as I'm concerned, there should be a Nobel prize for computing, and <a href="http://en.wikipedia.org/wiki/Bram_Cohen">the inventor of BitTorrent</a> should be its first recipient.</p>
<p>There's a great <a href="http://www.codinghorror.com/blog/archives/000777.html">Processing visualization</a> of BitTorrent in action which explains it far better than I can. The <a href="http://aphid.org/btsim/">original visualization</a> is not only down semi-permanently, but also written for an ancient version of <a href="http://processing.org/">Processing</a>. I grabbed a cached copy of the code and updated it for the latest version of Processing.</p>
<p><img src="https://blog.codinghorror.com/content/images/2019/09/bittorrent-animation.gif" alt="animated visualization of BitTorrent in action"></p>
<p>This meager little animated GIF doesn't do the highly dynamic, real-time nature of the visualization justice. I highly recommend <a href="http://processing.org/download/index.html">downloading Processing</a> and <a href="http://www.codinghorror.com/blog/files/bittorrent-visualization-processing.txt">downloading the updated bittorrent visualization code</a>, so you can see the process from start to finish on your own machine. It's beautiful.</p>
<p>But as as wonderful and clever as BitTorrent is, it isn't perfect. As an avid BitTorrent user, I've noticed the following problems:</p>
<ol>
<li>
<p><strong>BitTorrent is a terrible Long Tail client</strong>.</p>
<p>The efficiency of BitTorrent is predicated on popularity. The more people downloading, the larger the distribution network gets. But if what you want is obscure or unpopular – part of <a href="http://www.thelongtail.com/">the long tail</a> – BitTorrent is painfully, brutally slow. With only a handful of clients sharing the workload, you're better off using traditional distribution methods.</p>
</li>
<li>
<p><strong>BitTorrent, although distributed, is still centralized</strong>.</p>
<p>Download work is shared by the clients, but how do the clients locate each other? Traditionally this is done through a centralized server "tracker", or list of peers. This means BitTorrent is vulnerable to attacks on the centralized server. Once the server is out of commission, the clients have no way of locating each other, and the whole distribution network grinds to a halt. There are alternatives which allow clients to share the list of peers amongst themselves, such as <a href="http://en.wikipedia.org/wiki/Distributed_hash_table">distributed hash tables</a>, but centralized tracking is more efficient.</p>
<p>Also, in order to even begin a BitTorrent download, you must first know where to obtain a .torrent file. It's a chicken-and-egg problem which also implies the existence of a centralized server out there somewhere.</p>
</li>
<li>
<p><strong>BitTorrent is unsuitable for small files, even if they are extremely popular.</strong></p>
<p>The BitTorrent distribution network is predicated on clients sharing pieces of the file during the download period. But if the download period is small, the opportunity window for sharing is also small; at any given time only a few users will be downloading. This is another scenario where you're unlikely to find any peers, so you're better off with traditional distribution methods.</p>
</li>
<li>
<p><strong>BitTorrent relies on client altruism.</strong></p>
<p>There's no rule that says clients <i>must</i> share bandwidth while they're downloading. Although most BitTorrent clients default to uploading the maximum amount a user's upstream connection allows, it's possible to dial the upload rate down to nothing if you're greedy. And some users may have their firewalls configured in such a way that they <i>can't</i> upload data, even if they wanted to. There's no way to punish bad peers for not sharing, or reward good peers for sharing more.</p>
<p>Furthermore, every torrent needs a "seed" – a peer with 100% of the file downloaded – connected at all times. If there is no seed, no matter how many peers you have, none of the peers will never be able to download the entire file. It's considered a courtesy to stay connected if you have 100% of the file downloaded and no other seeds are available. But again, this is a convention, not a requirement. It's entirely possible for a torrent to "die" when there are no seeds available.</p>
</li>
</ol>
<p>The BitTorrent model is innovative, but it isn't suitable for every distribution task. The centralized server model is superior in most cases. But <strong>centralized distribution is a tool for the rich</strong>. Only highly profitable organizations can afford massive amounts of bandwidth. BitTorrent, in comparison, is highly democratic. BitTorrent gives the people whatever they want, whenever they want it – by collectively leveraging the tiny trickle of upstream bandwidth doled out by most internet service providers.</p>
<p>But just because it's democratic doesn't mean BitTorrent has to be synonymous with intellectual piracy. BitTorrent has legitimate uses, such as <a href="http://arstechnica.com/news/posts/1079538547.html">distributing World of Warcraft patches</a>. And Amazon's S3 directly <a href="http://noisemore.wordpress.com/2006/03/14/amazon-s3-has-bittorrent-support/">supports the torrent protocol</a>.</p>
<p>BitTorrent, in short, <strong>puts distribution choices back in the hands of the people</strong>. And that's why everybody loves BitTorrent. Everyone, that is, except the <a href="http://en.wikipedia.org/wiki/MPAA">MPAA</a> and <a href="http://en.wikipedia.org/wiki/RIAA">RIAA</a>.</p>
<!--kg-card-end: markdown-->
            </content>
<pubDate>2007-02-19T12:00:00.000Z</pubDate>
<guid>https://blog.codinghorror.com/everybody-loves-bittorrent/</guid>
</item>
</channel>
</rss>
