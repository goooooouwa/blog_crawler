<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
<channel>
<title>Coding Horror</title>
<description>programming and human factors</description>
<link>https://blog.codinghorror.com/</link>
<pubDate>Sun, 19 Apr 2020 00:00:01 GMT</pubDate>
<!-- other elements omitted from this example -->
<item>
<title>The Two Types of Programmers</title>
<link>https://blog.codinghorror.com/the-two-types-of-programmers/</link>
<content>
                <!--kg-card-begin: markdown--><p>
Contrary to myth, there aren't <a href="http://undefined.com/ia/2006/10/05/the-fourteen-types-of-programmers/">fourteen types of programmers</a>. There are <a href="http://blog.red-bean.com/sussman/?p=79">really only two</a>, as Ben Collins-Sussman reminds us.
</p>
<p>
</p>
<blockquote>
There are two "classes" of programmers in the world of software development: I'm going to call them the 20% and the 80%.
<p>
The 20% folks are what many would call "alpha" programmers  --  the leaders, trailblazers, trendsetters, the kind of folks that places like Google and Fog Creek software are obsessed with hiring. These folks were the first ones to install Linux at home in the 90's; the people who write lisp compilers and learn Haskell on weekends "just for fun"; they actively participate in open source projects; they're always aware of the latest, coolest new trends in programming and tools.
</p>
<p>
The 80% folks make up the bulk of the software development industry. They're not stupid; they're merely vocational. They went to school, learned just enough Java/C#/C++, then got a job writing internal apps for banks, governments, travel firms, law firms, etc. The world usually never sees their software. They use whatever tools Microsoft hands down to them -- usally VS.NET if they're doing C++, or maybe a GUI IDE like Eclipse or IntelliJ for Java development. They've never used Linux, and aren't very interested in it anyway. Many have never even used version control. If they have, it's only whatever tool shipped in the Microsoft box (like SourceSafe), or some ancient thing handed down to them. They know exactly enough to get their job done, then go home on the weekend and forget about computers.
</p>
</blockquote>
<p>
As I work with teams of programmers in the field, I'm consistently struck by the yawning abyss between that 20% and the rest of the world. It makes <a href="http://www.codinghorror.com/blog/archives/000845.html">the divide between the open-source and Microsoft camps</a> look like a shallow ditch.
</p>
<p>
</p>
<blockquote>
<b>Shocking statement #1</b>: <i>Most of the software industry is made up of 80% programmers</i>. Yes, most of the world is small Windows development shops, or small firms hiring internal programmers. Most companies have a few 20% folks, and they're usually the ones lobbying against pointy-haired bosses to change policies, or upgrade tools, or to use a sane version-control system.
<p>
<b>Shocking statement #2:</b> <i>Most alpha-geeks forget about shocking statement #1</i>. People who work on open source software, participate in passionate cryptography arguments on Slashdot, and download the latest GIT releases are extremely likely to lose sight of the fact that "the 80%" exists at all. They get all excited about the latest Linux distro or AJAX toolkit or distributed SCM system, spend all weekend on it, blog about itÃ¢â‚¬Â¦ and then are confounded about why they can't get their office to start using it.
</p>
</blockquote>
<p>
Perhaps not shocking to me, but an excellent and important reminder for everyone, nonetheless.
</p>
<p>
I often think we're wasting our time writing blogs which are largely read by the same 20%. In my experience, there's precious little trickle-down effect from the alpha programmers to everyone else. And if there is, <a href="http://www.codinghorror.com/blog/archives/000686.html">it takes decades</a>. If you <i>really</i> want to change the software development status quo, if you want to make a difference <i>this year</i>, you have to help us reach outside our insular little group of alpha programmers and <b>effect change in the other 80% of the world</b>. And that is far, <i>far</i> more difficult than preaching to the converted 20%. It's why I admire people like Scott Mitchell so much, because he <a href="http://scottonwriting.net/sowblog/posts/5595.aspx">understands the importance of reaching out to the other 80%</a>:
</p>
<p>
</p>
<blockquote>
I like programming and really enjoy ASP.NET. I think it's neat and fun and interesting and cool how you can go from literally nothing to having a data-driven web application that can be used by people around the world in an amazingly fast amount of time. Furthermore, I want to spread that enthusiasm to folks. I want to say to those who may have never programmed, or to those who are using competing technologies, or to those who are just starting out - "Come over here and try out this ASP.NET stuff. Here, let me show you what it can do!" That's why I teach (which pays pennies compared to consulting). That's why I write (which pays better than teaching, but still is not anywhere near as lucrative as consulting). That's why I give free talks at local user groups and community-sponsored conferences here in Southern California. To get the word out!
<p>
To me, saying that titles like <a href="http://www.codinghorror.com/blog/archives/000560.html">Teach Yourself X in 24 Hours cheapen the craft</a> is tantamount to saying, "Our club is full. Go away." It's not saying, "Let's welcome the newbies and get them excited about this technology." Rather, it's saying, "Newbies are ok, but they must first realize how hard this is, how hard we've worked, and how much more we know than them." I worry that such sentiment from the community will come across as pompousness to those very people whom we should be welcoming.
</p>
</blockquote>
<p>
I wish this was easier for me, because I agree with Scott. I'm terrible at the things he's describing. I think the true measure of success isn't how many alpha geeks you can get to pay attention to you. It's <b>how many typical, average programmers you've reached out to</b>, if only in some small way. If you really care about the craft of software development, you'll help us build that bridge between the 20% and the 80%, too.
</p>
<p>
<font color="red">Update:</font> This was a controversial post. See <a href="http://www.codinghorror.com/blog/archives/001004.html">my followup to this post</a> for further explanation.
</p>
<p>
</p>
<p></p>
<!--kg-card-end: markdown-->
            </content>
<pubDate>2007-11-25T12:00:00.000Z</pubDate>
<guid>https://blog.codinghorror.com/the-two-types-of-programmers/</guid>
</item>
</channel>
</rss>
