<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
<channel>
<title>Coding Horror</title>
<description>programming and human factors</description>
<link>https://blog.codinghorror.com/</link>
<pubDate>Sun, 19 Apr 2020 00:00:01 GMT</pubDate>
<!-- other elements omitted from this example -->
<item>
<title>The Code-First Dictum</title>
<link>https://blog.codinghorror.com/the-code-first-dictum/</link>
<content>
                <!--kg-card-begin: markdown--><p>Traditional wisdom says that the "code first, design later" approach is a bad idea. However, Charles Miller points out that when it comes to open source projects, <a href="https://web.archive.org/web/20060209222222/http://fishbowl.pastiche.org/2005/05/08/finding_discord_in_harmony">it's mandatory</a>:</p>
<blockquote>
<p>I would almost go as far as saying that starting an open source project with no code and a committee trying to decide what to do next spells inevitable doom.</p>
<p>The best way to start an open source project is with code. Working code. Hack away at home on weekends, maybe get a couple of friends to help you out, and don't go public until you have something to show people that does something interesting, and that other people can use to build more interesting stuff on top of. You need this for a bunch of different reasons: it establishes the original contributor's bona fides in the open-source meritocracy, it shortcuts all sorts of damaging debates about coding styles and architecture that can stop a project before it starts, and so on.</p>
<p>Most importantly, though: <b>working code attracts people who want to code. Design documents attract people who want to talk about coding</b>. I've seen what happens on projects that start with no code and a commitment to produce a design. Some of the procession of UML diagrams were really well put together, but that's about the extent of it.</p>
</blockquote>
<p>As I've said before, <a href="https://blog.codinghorror.com/good-programmers-get-off-their-butts/">good programmers get off their butts</a>. Obviously, you want to consider what you're going to do before you do it. But there's a rapid point of diminishing returns for thinking versus doing.</p>
<p>Software development is a <a href="https://discourse.codinghorror.com/t/development-is-inherently-wicked/1320">wicked problem</a>: you never fully understand the problem you're trying to solve until you reach the end. So the sooner you start, the better.</p>
<!--kg-card-end: markdown-->
            </content>
<pubDate>2005-05-16T12:00:00.000Z</pubDate>
<guid>https://blog.codinghorror.com/the-code-first-dictum/</guid>
</item>
</channel>
</rss>
