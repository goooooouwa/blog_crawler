<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
<channel>
<title>Coding Horror</title>
<description>programming and human factors</description>
<link>https://blog.codinghorror.com/</link>
<pubDate>Sun, 19 Apr 2020 00:00:01 GMT</pubDate>
<!-- other elements omitted from this example -->
<item>
<title>Code Smaller</title>
<link>https://blog.codinghorror.com/code-smaller/</link>
<content>
                <!--kg-card-begin: markdown--><p>
Unless you've been living under a rock for the last few years, you've probably heard about the game <a href="http://en.wikipedia.org/wiki/Katamari_Damacy">Katamari Damacy</a>. The gameplay consists of little more than <i>rolling stuff up</i> into an ever-increasing ball of stuff. That's literally all you do. You start by rolling up small things like matchsticks, thimbles, pushpins, and so on. As the ball gets larger, you roll up ever larger and larger items. Eventually, your Katamari ball gets so large you end up rolling together cities, mountains, clouds-- eventually entire <i>planets</i>. It's unbelievably fun, and completely mesmerizing.
</p>
<p>
After I played for a while, I realized that <b>Katamari Damacy is a game about <i>the scale of life</i></b>, reminiscent of <a href="http://www.powersof10.com/">the classic Eames powers of ten movie</a>.
</p>
<p>
<img alt="Screenshot of 'We Love Katamari'" border="0" class="at-xid-6a0120a85dcdae970b0120a86d7b64970b" height="338" src="https://blog.codinghorror.com/content/images/uploads/2007/02/6a0120a85dcdae970b0120a86d7b64970b-pi.jpg" width="450">
</p>
<p>
</p>
<p>
As Bob Koss points out, <a href="http://blog.objectmentor.com/articles/2006/12/21/size-matters">code has a natural tendency to become a giant Katamari ball of "stuff"</a>, too:
</p>
<p>
</p>
<blockquote>
I travel a lot and I get to visit a lot of different companies. No matter which industry a company is in or which programming language a team is using, there is one commonality in all of the code that I see Ã¢â‚¬â€œ classes are just too damn big and methods are just too damn long.
<p>
We programmers must take matters into our own hands and become masters of our domains. Unless we take action, things are just going to get bigger and bigger until we have a real mess on our hands.
</p>
</blockquote>
<p>
Bob's <a href="http://blog.objectmentor.com/articles/2006/12/21/size-matters">article</a> is about <b>managing the scale of your code</b>:
</p>
<p>
</p>
<blockquote>
This notion of breaking a class into smaller and smaller pieces is exactly opposite to what I learned when I first started studying OO. Way back when I worried about bad-hair days, people believed that a class should encapsulate everything that concerned it. A Customer class would know the business rules of being a Customer as well as how to retrieve itself from the database and display it's data. That's a fine idea, provided the database schema never changes, the display never changes, or the business rules never change. If any one of those responsibilities change, we are at a high risk of breaking other things that are coupled to it.
</blockquote>
<p>
So many aspects of software development can be summarized as <b>small is beautiful</b>:
</p>
<ul>
<li>The odds of failure for a software project are <a href="http://www.codinghorror.com/blog/archives/000637.html">directly proportional to the size of the project</a>. Slicing a large project into several smaller subprojects is the single most direct way to increase your project's chances of success.
</li>
<li>The relationship between lines of code and bugs is completely linear. Fewer code means fewer bugs.
</li>
<li>Smaller code avoids TL; DR (Too Long; Didn't Read) syndrome.  The less code there is to read, the higher the odds are that someone <i>will</i> actually read it.
</li>
<li>If you <a href="http://www.codinghorror.com/blog/archives/000497.html">keep your dependencies to a minimum</a>, your code will be simpler and easier to understand.
</li>
</ul>
<p>
It's up to us to resist the natural tendency of any project to snowball into a giant rolling Katamari ball of code. <b>Code smaller!</b>
</p>
<p>
</p>
<p></p>
<!--kg-card-end: markdown-->
            </content>
<pubDate>2007-02-13T12:00:00.000Z</pubDate>
<guid>https://blog.codinghorror.com/code-smaller/</guid>
</item>
</channel>
</rss>
