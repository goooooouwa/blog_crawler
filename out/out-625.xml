<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
<channel>
<title>Coding Horror</title>
<description>programming and human factors</description>
<link>https://blog.codinghorror.com/</link>
<pubDate>Sun, 19 Apr 2020 00:00:01 GMT</pubDate>
<!-- other elements omitted from this example -->
<item>
<title>The Pernicious Issue of Software Patents</title>
<link>https://blog.codinghorror.com/the-pernicious-issue-of-software-patents/</link>
<content>
                <!--kg-card-begin: markdown--><p>
A reddit user recently invoked link necromancy on <a href="http://www.pluto.it/files/meeting1999/atti/no-patents/brevetti/docs/knuth_letter_en.html">a 1994 Donald Knuth letter</a> to the U.S. Patent Office:
</p>
<p>
</p>
<blockquote>
When I think of the computer programs I require daily to get my own work
done, <b>I cannot help but realize that none of them would exist today if
software patents had been prevalent in the 1960s and 1970s</b>.  Changing the
rules now will have the effect of freezing progress at essentially its
current level.  If present trends continue, the only recourse available to
the majority of America's brilliant software developers will be to give up
software or to emigrate.  The U.S.A.  will soon lose its dominant position.
<p>
Please do what you can to reverse this alarming trend.  There are far
better ways to protect the intellectual property rights of software
developers than to take away their right to use fundamental building
blocks.
</p>
</blockquote>
<p>
You have to respect the opinion of <a href="http://en.wikipedia.org/wiki/Donald_Knuth">Donald Knuth</a>, because he's our homeboy.
</p>
<p>
<a href="http://geekz.co.uk/shop/store/show/knuth-tshirt"><img alt="Knuth is my Homeboy" border="0" class="at-xid-6a0120a85dcdae970b0120a86d7c73970b" height="307" src="https://blog.codinghorror.com/content/images/uploads/2007/04/6a0120a85dcdae970b0120a86d7c73970b-pi.png" width="179"></a>
</p>
<p>
Still, opinions vary. The software patent debate <a href="http://en.wikipedia.org/wiki/Software_patent_debate">merits an entire Wikipedia article</a>, and the <a href="http://programming.reddit.com/info/1h2u0/comments">ensuing comment debate on Reddit</a> represents plenty of opposing viewpoints.
</p>
<p>
Paul Graham, surprisingly, <a href="http://paulgraham.com/softwarepatents.html">thinks software patents don't matter</a>:
</p>
<p>
</p>
<blockquote>
I'm not saying secrecy would be worse than patents, just that we couldn't discard patents for free. Businesses would become more secretive to compensate, and in some fields this might get ugly. Nor am I defending the current patent system. There is clearly a lot that's broken about it. But the breakage seems to affect software less than most other fields.
<p>
In the software business I know from experience whether patents encourage or discourage innovation, and the answer is the type that people who like to argue about public policy least like to hear: they don't affect innovation much, one way or the other. Most innovation in the software business happens in startups, and startups should simply ignore other companies' patents. At least, that's what we advise, and we bet money on that advice.
</p>
</blockquote>
<p>
Paul Heckel goes so far as to say <a href="http://www-swiss.ai.mit.edu/6805/articles/int-prop/heckel-debunking.html">responsible, rational use of software patents may actually <i>encourage</i> innovation</a>:
</p>
<p>
</p>
<blockquote>
In brief, what superficially looks like another problem to be dealt with in the increasingly competitive, commodities oriented software business, will prove to be what makes products less price competitive. Many industries have worked on this basis all along: patents make industries more diverse in their offerings, more profitable, more innovative, and ultimately will make the U.S. more competitive.
<p>
The essence of this article is simple: Software intellectual property issues are not inherently different in substance from other technologies; what motivates people is not inherently different; industry life cycle is not inherently different; marketing and business strategies and tactics are not inherently different; the law and policy issues are not inherently different. The technology is not even new. Software has been around for 40 years. The issues may be new to those who had no experience of them, but the only thing that is different is that software is a mass market industry for the first time and real money is at stake.
</p>
</blockquote>
<p>
As much as I respect Knuth, I have to agree that the problem with software patents isn't the patents themselves. It's the sloppy, haphazard way the patents are granted and enforced. If anything needs reforming, it's the U.S. Patent Office.
</p>
<p>
</p>
<p>
</p>
<p></p>
<!--kg-card-end: markdown-->
            </content>
<pubDate>2007-04-11T12:00:00.000Z</pubDate>
<guid>https://blog.codinghorror.com/the-pernicious-issue-of-software-patents/</guid>
</item>
</channel>
</rss>
